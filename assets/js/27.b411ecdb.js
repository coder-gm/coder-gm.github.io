(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{406:function(t,e,a){t.exports=a.p+"assets/img/IO_Inheritance_relationships.4d299c41.png"},677:function(t,e,a){"use strict";a.r(e);var s=a(33),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("区分 Java 的输入和输出：把自己当成程序， 当你从外边读数据到自己这里就用输入（InputStream/Reader）， 向外边写数据就用输出(OutputStream/Writer)")]),t._v(" "),s("p",[t._v("Java 中将数据的输入输出抽象为流，流是一组有顺序的，单向的，有起点和终点的数据集合，就像水流。按照流中的最小数据单元又分为字节流和字符流。")]),t._v(" "),s("ul",[s("li",[t._v("**字节流：**以 8 位（即 1 byte，8 bit）作为一个数据单元，数据流中最小的数据单元是字节。")]),t._v(" "),s("li",[t._v("**字符流：**以 16 位（即 1 char，2 byte，16 bit）作为一个数据单元，数据流中最小的数据单元是字符， Java 中的字符是 Unicode 编码，一个字符占用两个字节。")])]),t._v(" "),s("h1",{attrs:{id:"作用与解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用与解释"}},[t._v("#")]),t._v(" 作用与解释")]),t._v(" "),s("p",[t._v("把对象写入文件中去,或者从文件中读取对象信息")]),t._v(" "),s("h2",{attrs:{id:"代码示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码示例"}},[t._v("#")]),t._v(" 代码示例")]),t._v(" "),s("h3",{attrs:{id:"写入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#写入"}},[t._v("#")]),t._v(" 写入")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 输入流\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),t._v(" fos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectOutputStream")]),t._v(" oos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"E:\\\\file\\\\ObjectStream.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        oos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        oos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useProtocolVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectStreamConstants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PROTOCOL_VERSION_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n        oos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        oos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"李四"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileNotFoundException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" oos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                oos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" fos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                fos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br")])]),s("h3",{attrs:{id:"读取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#读取"}},[t._v("#")]),t._v(" 读取")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 输出流\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),t._v(" fis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectInputStream")]),t._v(" ois "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"E:\\\\file\\\\ObjectStream.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        ois "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectInputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),t._v(" employee0 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ois"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        employee0"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),t._v(" employee1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ois"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        employee1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("showInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileNotFoundException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassNotFoundException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" fis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                fis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" ois"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                ois"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br")])]),s("h1",{attrs:{id:"输入-输出流体系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入-输出流体系"}},[t._v("#")]),t._v(" 输入/输出流体系")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("分类")]),t._v(" "),s("th",[t._v("字节输入流")]),t._v(" "),s("th",[t._v("字节输出流")]),t._v(" "),s("th",[t._v("字符输入流")]),t._v(" "),s("th",[t._v("字符输出流")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("抽象基类")]),t._v(" "),s("td",[t._v("InputStream")]),t._v(" "),s("td",[t._v("OutputStream")]),t._v(" "),s("td",[t._v("Reader")]),t._v(" "),s("td",[t._v("Writer")])]),t._v(" "),s("tr",[s("td",[t._v("访问文件")]),t._v(" "),s("td",[t._v("FileInputStream")]),t._v(" "),s("td",[t._v("FileOutputStream")]),t._v(" "),s("td",[t._v("FileReader")]),t._v(" "),s("td",[t._v("FileWriter")])]),t._v(" "),s("tr",[s("td",[t._v("访问数组")]),t._v(" "),s("td",[t._v("ByteArrayInputStream")]),t._v(" "),s("td",[t._v("ByteArrayOutputStream")]),t._v(" "),s("td",[t._v("CharArrayReader")]),t._v(" "),s("td",[t._v("CharArrayWriter")])]),t._v(" "),s("tr",[s("td",[t._v("访问管道")]),t._v(" "),s("td",[t._v("PipedInputStream")]),t._v(" "),s("td",[t._v("PipedOutputStream")]),t._v(" "),s("td",[t._v("PipedReader")]),t._v(" "),s("td",[t._v("PipedWriter")])]),t._v(" "),s("tr",[s("td",[t._v("访问字符串")]),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("StringReader")]),t._v(" "),s("td",[t._v("StringWriter")])]),t._v(" "),s("tr",[s("td",[t._v("缓冲流")]),t._v(" "),s("td",[t._v("BufferedInputStream")]),t._v(" "),s("td",[t._v("BufferedInputStream")]),t._v(" "),s("td",[t._v("BufferedRead")]),t._v(" "),s("td",[t._v("BufferedWriter")])]),t._v(" "),s("tr",[s("td",[t._v("转换流")]),t._v(" "),s("td"),t._v(" "),s("td"),t._v(" "),s("td",[t._v("InputStreamReader")]),t._v(" "),s("td",[t._v("OutputStreamWriter")])]),t._v(" "),s("tr",[s("td",[t._v("对象流")]),t._v(" "),s("td",[t._v("ObjectInputStream")]),t._v(" "),s("td",[t._v("ObjectOutputStream")]),t._v(" "),s("td"),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("抽象基类")]),t._v(" "),s("td",[t._v("FilterInputStream")]),t._v(" "),s("td",[t._v("FilterOutputStream")]),t._v(" "),s("td",[t._v("FilterReader")]),t._v(" "),s("td",[t._v("FilterWriter")])]),t._v(" "),s("tr",[s("td",[t._v("打印流")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("PrintStream")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("PrintWriter")])]),t._v(" "),s("tr",[s("td",[t._v("推回输入流")]),t._v(" "),s("td",[t._v("PushbackInputStream")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("PushbackReader")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[t._v("特殊流")]),t._v(" "),s("td",[t._v("DataInputStream")]),t._v(" "),s("td",[t._v("DataOutputStream")]),t._v(" "),s("td"),t._v(" "),s("td")])])]),t._v(" "),s("h1",{attrs:{id:"继承关系"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#继承关系"}},[t._v("#")]),t._v(" 继承关系")]),t._v(" "),s("p",[s("img",{attrs:{src:a(406),alt:"IO流继承关系"}})]),t._v(" "),s("h1",{attrs:{id:"对象流方法详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象流方法详解"}},[t._v("#")]),t._v(" 对象流方法详解")]),t._v(" "),s("h2",{attrs:{id:"objectinputstream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#objectinputstream"}},[t._v("#")]),t._v(" ObjectInputStream")]),t._v(" "),s("h3",{attrs:{id:"构造方法详细信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造方法详细信息"}},[t._v("#")]),t._v(" 构造方法详细信息")]),t._v(" "),s("h5",{attrs:{id:"objectinputstream-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#objectinputstream-2"}},[t._v("#")]),t._v(" ObjectInputStream")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public ObjectInputStream(InputStream in)\n                  throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("创建从指定的InputStream读取的ObjectInputStream。从流中读取序列化流头并进行验证。该构造函数将阻塞，直到相应的ObjectOutputStream已写入并刷新标题。")]),t._v(" "),s("p",[t._v("如果安装了一个安全管理器，那么这个构造函数将会在覆盖ObjectInputStream.readFields或ObjectInputStream.readUnshared方法的子类的构造函数直接或间接调用时检查“enableSubclassImplementation”SerializablePermission。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("in")]),t._v(" - 要读取的输入流")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("StreamCorruptedException")]),t._v("  - 如果流标题不正确")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在读取流标题时发生I /  O错误")]),t._v(" "),s("p",[s("code",[t._v("SecurityException")]),t._v(" -  如果不可信子类非法覆盖安全敏感方法")]),t._v(" "),s("p",[s("code",[t._v("NullPointerException")]),t._v("  - 如果 "),s("code",[t._v("in")]),t._v("是 "),s("code",[t._v("null")])])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectInputStream.html#ObjectInputStream--"}},[s("code",[t._v("ObjectInputStream()")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectInputStream.html#readFields--"}},[s("code",[t._v("readFields()")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectOutputStream.html#ObjectOutputStream-java.io.OutputStream-"}},[s("code",[t._v("ObjectOutputStream.ObjectOutputStream(OutputStream)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"objectinputstream-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#objectinputstream-3"}},[t._v("#")]),t._v(" ObjectInputStream")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected ObjectInputStream()\n                     throws IOException,\n                            SecurityException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("为完全重新实现ObjectInputStream的子类提供一种方法，不必分配刚刚被ObjectInputStream实现使用的私有数据。")]),t._v(" "),s("p",[t._v("如果安装了安全管理器，则此方法首先使用"),s("code",[t._v('SerializablePermission("enableSubclassImplementation")')]),t._v("权限调用安全管理器的"),s("code",[t._v("checkPermission")]),t._v("方法，以确保启用子类化。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("SecurityException")]),t._v(" -  如果安全管理器存在，并且其 "),s("code",[t._v("checkPermission")]),t._v("方法拒绝启用子类化。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在创建此流时发生I / O错误")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/SecurityManager.html#checkPermission-java.security.Permission-"}},[s("code",[t._v("SecurityManager.checkPermission(java.security.Permission)")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/io/SerializablePermission.html"}},[s("code",[t._v("SerializablePermission")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"方法详细信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法详细信息"}},[t._v("#")]),t._v(" 方法详细信息")]),t._v(" "),s("h5",{attrs:{id:"readobject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readobject"}},[t._v("#")]),t._v(" readObject")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public final Object readObject()\n                        throws IOException,\n                               ClassNotFoundException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("从ObjectInputStream读取一个对象。读取对象的类，类的签名以及类的非瞬态和非静态字段的值以及其所有超类型。可以使用writeObject和readObject方法覆盖类的默认反序列化。这个对象引用的对象被传递性地读取，以便通过readObject重构一个完整的对象图。")]),t._v(" "),s("p",[t._v("当其所有字段及其引用的对象完全还原时，根对象将被完全还原。  此时，对象验证回调按照它们注册的优先级顺序执行。  回调由对象（在readObject特殊方法中）注册，因为它们被单独还原。")]),t._v(" "),s("p",[t._v("对于InputStream和不应反序列化的类的问题，抛出异常。  所有异常都是对InputStream致命的，并将其置于不确定状态; 呼叫者可以忽略或恢复流状态。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readObject")]),t._v("在界面  "),s("code",[t._v("ObjectInput")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("该对象从流中读取")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("ClassNotFoundException")]),t._v("  - 无法找到序列化对象的类。")]),t._v(" "),s("p",[s("code",[t._v("InvalidClassException")]),t._v("  - 序列化使用的类错误。")]),t._v(" "),s("p",[s("code",[t._v("StreamCorruptedException")]),t._v("  - 流中的控制信息不一致。")]),t._v(" "),s("p",[s("code",[t._v("OptionalDataException")]),t._v("  - 在流中找到原始数据，而不是对象。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 任何常见的输入/输出相关异常。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readobjectoverride"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readobjectoverride"}},[t._v("#")]),t._v(" readObjectOverride")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected Object readObjectOverride()\n                             throws IOException,\n                                    ClassNotFoundException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("此方法由ObjectOutputStream的受信任子类调用，该子类使用受保护的无参构造函数构造ObjectOutputStream。  该子类预计将提供一个具有修饰符“final”的覆盖方法。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("对象从流中读取。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("ClassNotFoundException")]),t._v("  - 无法找到序列化对象的类定义。")]),t._v(" "),s("p",[s("code",[t._v("OptionalDataException")]),t._v("  - 在流中找到原始数据，而不是对象。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果从底层流读取I / O错误")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.2")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectInputStream.html#ObjectInputStream--"}},[s("code",[t._v("ObjectInputStream()")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectInputStream.html#readObject--"}},[s("code",[t._v("readObject()")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readunshared"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readunshared"}},[t._v("#")]),t._v(" readUnshared")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public Object readUnshared()\n                    throws IOException,\n                           ClassNotFoundException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("从ObjectInputStream读取一个“非共享”对象。此方法与readObject相同，只是它阻止对readObject的后续调用和readUnshared返回对通过此调用获取的反序列化实例的其他引用。特别：")]),t._v(" "),s("ul",[s("li",[t._v("如果调用readUnshared来反序列化一个反向引用（以前已经写入流的对象的流表示），则抛出ObjectStreamException。")]),t._v(" "),s("li",[t._v("如果readUnshared成功返回，则随后尝试反序列化对readUnshared反序列化的流处理的反向引用将导致抛出ObjectStreamException。")])]),t._v(" "),s("p",[t._v("通过readUnshared对对象进行反序列化将使与返回对象关联的流句柄无效。请注意，这本身并不总是保证readUnshared返回的引用是唯一的;反序列化对象可以定义一个readResolve方法，该方法返回对其他方可见的对象，或者readUnshared可以返回在流中或通过外部方式在其他地方可获取的Class对象或枚举常量。如果反序列化对象定义了一个readResolve方法，并且该方法的调用返回一个数组，那么readUnshared返回该数组的浅克隆;这样可以保证返回的数组对象是唯一的，即使在底层数据流已经被处理的情况下，也不能再从调用readObject或readUnshared在ObjectInputStream上获取。")]),t._v(" "),s("p",[t._v("覆盖此方法的ObjectInputStream子类只能在拥有“enableSubclassImplementation”SerializablePermission的安全上下文中构建;  任何尝试在没有此权限的情况下实例化此类子类将导致抛出SecurityException。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("参考反序列化对象")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("ClassNotFoundException")]),t._v("  - 如果无法找到反序列化对象的类")]),t._v(" "),s("p",[s("code",[t._v("StreamCorruptedException")]),t._v("  - 如果流中的控制信息不一致")]),t._v(" "),s("p",[s("code",[t._v("ObjectStreamException")]),t._v("  - 如果 "),s("code",[t._v("ObjectStreamException")]),t._v("化对象已经出现在流中")]),t._v(" "),s("p",[s("code",[t._v("OptionalDataException")]),t._v("  - 如果原始数据是下一个流")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在反序列化期间发生I /  O错误")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.4")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"defaultreadobject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#defaultreadobject"}},[t._v("#")]),t._v(" defaultReadObject")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void defaultReadObject()\n                       throws IOException,\n                              ClassNotFoundException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("从此流读取当前类的非静态和非瞬态字段。  这只能从被反序列化的类的readObject方法调用。 否则将抛出NotActiveException异常。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("ClassNotFoundException")]),t._v("  - 如果无法找到序列化对象的类。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误。")]),t._v(" "),s("p",[s("code",[t._v("NotActiveException")]),t._v(" -  如果流当前未读取对象。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readfields"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readfields"}},[t._v("#")]),t._v(" readFields")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public ObjectInputStream.GetField readFields()\n                                      throws IOException,\n                                             ClassNotFoundException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("从流中读取持久性字段，并通过名称获取它们。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[s("code",[t._v("GetField")]),t._v("对象表示反序列 "),s("code",[t._v("GetField")]),t._v("对象的持久字段")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("ClassNotFoundException")]),t._v("  - 如果无法找到序列化对象的类。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误。")]),t._v(" "),s("p",[s("code",[t._v("NotActiveException")]),t._v(" -  如果流当前未读取对象。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.2")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"registervalidation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#registervalidation"}},[t._v("#")]),t._v(" registerValidation")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void registerValidation(ObjectInputValidation obj,\n                               int prio)\n                        throws NotActiveException,\n                               InvalidObjectException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("在返回图之前注册要验证的对象。  虽然类似于resolveObject这些验证在整个图形重新构建之后被调用。  通常，readObject方法将使用流注册对象，以便当所有对象都被还原时，可以执行最后一组验证。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("obj")]),t._v(" - 接收验证回调的对象。")]),t._v(" "),s("p",[s("code",[t._v("prio")]),t._v(" - 控制"),s("code",[t._v("prio")]),t._v("的顺序;零是一个很好的默认值。  使用较高的数字可以提前回调，较低的数字可用于以后的回调。 在优先级中，回调按照特定顺序进行处理。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("NotActiveException")]),t._v(" -  流当前未读取对象，因此无法注册回调。")]),t._v(" "),s("p",[s("code",[t._v("InvalidObjectException")]),t._v("  - 验证对象为null。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"resolveclass"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resolveclass"}},[t._v("#")]),t._v(" resolveClass")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected 类<?> resolveClass(ObjectStreamClass desc)\n                         throws IOException,\n                                ClassNotFoundException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("加载本地类等效的指定流类描述。子类可以实现此方法，以允许从备用源获取类。")]),t._v(" "),s("p",[t._v("在相应的方法"),s("code",[t._v("ObjectOutputStream")]),t._v("是"),s("code",[t._v("annotateClass")]),t._v("  。 对于流中的每个唯一类，此方法将仅调用一次。  这个方法可以通过子类来实现，使用一个备用的加载机制，但必须返回一个"),s("code",[t._v("类")]),t._v("对象。  一旦返回，如果类不是数组类，其serialVersionUID与序列化类的serialVersionUID进行比较，如果不匹配，则反序列化失败，并抛出"),s("RouterLink",{attrs:{to:"/01.Java/java/io/InvalidClassException.html"}},[s("code",[t._v("InvalidClassException")])]),t._v("  。")],1),t._v(" "),s("p",[t._v("在此方法的默认实现"),s("code",[t._v("ObjectInputStream")]),t._v("返回调用的结果")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  Class.forName(desc.getName(), false, loader) \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("其中"),s("code",[t._v("loader")]),t._v("的确定如下：如果当前线程的堆栈中有一个方法，其声明类是由用户定义的类加载器定义的（并且不是为了实现反射调用而生成的），则"),s("code",[t._v("loader")]),t._v("是对应于最接近的类加载器的类加载器这种方法到当前执行的帧;否则， "),s("code",[t._v("loader")]),t._v("是"),s("code",[t._v("null")]),t._v(" 。如果该调用导致"),s("code",[t._v("ClassNotFoundException")]),t._v("和传递的名称"),s("code",[t._v("ObjectStreamClass")]),t._v("是一个基本类型或void  Java语言的关键字，那么实例"),s("code",[t._v("类")]),t._v("表示基本类型或void对象将被退回（例如，  "),s("code",[t._v("ObjectStreamClass")]),t._v("名为"),s("code",[t._v('"int"')]),t._v("会解决到"),s("code",[t._v("Integer.TYPE")]),t._v("  ）。否则， "),s("code",[t._v("ClassNotFoundException")]),t._v("将被抛出这个方法的调用者。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("desc")]),t._v(" - "),s("code",[t._v("ObjectStreamClass")]),t._v("类的实例")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("一个 "),s("code",[t._v("类")]),t._v("对象对应于 "),s("code",[t._v("desc")])])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 任何通常的输入/输出异常。")]),t._v(" "),s("p",[s("code",[t._v("ClassNotFoundException")]),t._v("  - 如果无法找到序列化对象的类。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"resolveproxyclass"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resolveproxyclass"}},[t._v("#")]),t._v(" resolveProxyClass")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected 类<?> resolveProxyClass(String[] interfaces)\n                              throws IOException,\n                                     ClassNotFoundException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("返回一个代理类，它实现代理类描述符中命名的接口;子类可以实现此方法从流中读取自定义数据以及动态代理类的描述符，从而允许它们为接口和代理类使用备用加载机制。")]),t._v(" "),s("p",[t._v("对于流中的每个唯一代理类描述符，该方法被称为一次。")]),t._v(" "),s("p",[t._v("在相应的方法"),s("code",[t._v("ObjectOutputStream")]),t._v("是"),s("code",[t._v("annotateProxyClass")]),t._v("  。 对于给定的子类"),s("code",[t._v("ObjectInputStream")]),t._v("重写该方法中，  "),s("code",[t._v("annotateProxyClass")]),t._v("中的相应子类方法"),s("code",[t._v("ObjectOutputStream")]),t._v("必须写由该方法读取的任何数据或对象。")]),t._v(" "),s("p",[t._v("这种方法的默认实现"),s("code",[t._v("ObjectInputStream")]),t._v("返回调用的结果"),s("code",[t._v("Proxy.getProxyClass")]),t._v("与列表"),s("code",[t._v("类")]),t._v("对象为在指定接口"),s("code",[t._v("interfaces")]),t._v("参数。  每个接口名称"),s("code",[t._v("i")]),t._v("的"),s("code",[t._v("类")]),t._v("对象是通过调用返回的值")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  Class.forName(i, false, loader) \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("其中"),s("code",[t._v("loader")]),t._v("是第一个非"),s("code",[t._v("null")]),t._v("类加载器的执行堆栈，或"),s("code",[t._v("null")]),t._v("如果没有非"),s("code",[t._v("null")]),t._v("类加载器在堆栈（  "),s("code",[t._v("resolveClass")]),t._v("方法使用相同的类加载器选择）。除非任何解析的界面是非公开的，否则同样的值"),s("code",[t._v("loader")]),t._v("也是类加载器传递给"),s("code",[t._v("Proxy.getProxyClass")]),t._v("  ;如果存在非公共接口，则会传递其类加载器（如果遇到多个非公共接口类加载器，则抛出"),s("code",[t._v("IllegalAccessError")]),t._v("  ）。如果"),s("code",[t._v("Proxy.getProxyClass")]),t._v("抛出"),s("code",[t._v("IllegalArgumentException")]),t._v("  ，  "),s("code",[t._v("resolveProxyClass")]),t._v("将抛出一个"),s("code",[t._v("ClassNotFoundException")]),t._v("包含"),s("code",[t._v("IllegalArgumentException")]),t._v("  。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("interfaces")]),t._v(" - 在代理类描述符中反序列化的接口名称列表")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("指定接口的代理类")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" -由底层抛出的任何异常  "),s("code",[t._v("InputStream")])]),t._v(" "),s("p",[s("code",[t._v("ClassNotFoundException")]),t._v("  - 如果无法找到代理类或任何命名接口")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.3")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectOutputStream.html#annotateProxyClass-java.lang.Class-"}},[s("code",[t._v("ObjectOutputStream.annotateProxyClass(Class)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"resolveobject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resolveobject"}},[t._v("#")]),t._v(" resolveObject")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected Object resolveObject(Object obj)\n                        throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("此方法将允许ObjectInputStream的受信任子类在反序列化期间将一个对象替换为另一个对象。在调用enableResolveObject之前，将禁用替换对象。enableResolveObject方法检查请求解析对象的流可以被信任。对可序列化对象的每个引用都传递给resolveObject。为了确保对象的私有状态不会被无意地暴露，只有信任的流可能使用resolveObject。")]),t._v(" "),s("p",[t._v("在读取对象之后，在从readObject返回之前调用此方法。  默认的resolveObject方法只返回相同的对象。")]),t._v(" "),s("p",[t._v("当子类替换对象时，必须确保替换对象与引用将被存储的每个字段兼容。  类型不是字段或数组元素类型的子类的对象通过引发异常终止序列化，并且不存储该对象。")]),t._v(" "),s("p",[t._v("当首次遇到每个对象时，此方法仅调用一次。 对对象的所有后续引用将被重定向到新对象。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("obj")]),t._v(" - 要替代的对象")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("替代对象")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 任何通常的输入/输出异常。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"enableresolveobject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enableresolveobject"}},[t._v("#")]),t._v(" enableResolveObject")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected boolean enableResolveObject(boolean enable)\n                               throws SecurityException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("启用流以允许从流中读取的对象被替换。启用时，将为正在反序列化的每个对象调用resolveObject方法。")]),t._v(" "),s("p",[t._v("如果"),s("em",[t._v("enable")]),t._v("为真，并且安装了一个安全管理器，则该方法首先使用"),s("code",[t._v('SerializablePermission("enableSubstitution")')]),t._v("权限调用安全管理器的"),s("code",[t._v("checkPermission")]),t._v("方法，以确保启用流允许从流中读取的对象被替换。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("enable")]),t._v(" -真正的能够使用的 "),s("code",[t._v("resolveObject")]),t._v("为每个对象反序列化")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("此方法被调用之前的前一个设置")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("SecurityException")]),t._v(" -  如果安全管理器存在，并且其 "),s("code",[t._v("checkPermission")]),t._v("方法拒绝启用流，以允许从流中读取的对象被替换。")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/SecurityManager.html#checkPermission-java.security.Permission-"}},[s("code",[t._v("SecurityManager.checkPermission(java.security.Permission)")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/io/SerializablePermission.html"}},[s("code",[t._v("SerializablePermission")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readstreamheader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readstreamheader"}},[t._v("#")]),t._v(" readStreamHeader")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected void readStreamHeader()\n                         throws IOException,\n                                StreamCorruptedException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("提供了readStreamHeader方法来允许子类读取和验证自己的流标题。  它读取和验证魔术数字和版本号。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 从底层  "),s("code",[t._v("InputStream")]),t._v("读取时是否存在I / O错误")]),t._v(" "),s("p",[s("code",[t._v("StreamCorruptedException")]),t._v("  - 如果流中的控制信息不一致")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readclassdescriptor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readclassdescriptor"}},[t._v("#")]),t._v(" readClassDescriptor")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected ObjectStreamClass readClassDescriptor()\n                                         throws IOException,\n                                                ClassNotFoundException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("从序列化流读取类描述符。  当ObjectInputStream期望类描述符作为序列化流中的下一个项时，调用此方法。  ObjectInputStream的子类可以覆盖此方法，以读取已经以非标准格式（由ObjectOutputStream的子类覆盖了"),s("code",[t._v("writeClassDescriptor")]),t._v("方法）的类"),s("code",[t._v("writeClassDescriptor")]),t._v("  。 默认情况下，此方法根据对象序列化规范中定义的格式读取类描述符。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("类描述符读取")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误。")]),t._v(" "),s("p",[s("code",[t._v("ClassNotFoundException")]),t._v("  - 如果找不到类描述符表示中使用的序列化对象的类")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.3")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectOutputStream.html#writeClassDescriptor-java.io.ObjectStreamClass-"}},[s("code",[t._v("ObjectOutputStream.writeClassDescriptor(java.io.ObjectStreamClass)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"read"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#read"}},[t._v("#")]),t._v(" read")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public int read()\n         throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("读取一个字节的数据。 如果没有输入可用，此方法将阻止。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("read")]),t._v("在界面  "),s("code",[t._v("ObjectInput")])])]),t._v(" "),s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("read")]),t._v("在类别  "),s("code",[t._v("InputStream")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("读取字节，如果达到流的结尾，则返回-1。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"read-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#read-2"}},[t._v("#")]),t._v(" read")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public int read(byte[] buf,\n                int off,\n                int len)\n         throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("读入一个字节数组。 该方法将阻塞，直到有些输入可用。  考虑使用java.io.DataInputStream.readFully来读取“length”字节。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("read")]),t._v("在界面  "),s("code",[t._v("ObjectInput")])])]),t._v(" "),s("li",[s("p",[t._v("重写：")]),t._v(" "),s("p",[s("code",[t._v("read")]),t._v("在类别  "),s("code",[t._v("InputStream")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("buf")]),t._v(" - 读取数据的缓冲区")]),t._v(" "),s("p",[s("code",[t._v("off")]),t._v(" - 数据的起始偏移量")]),t._v(" "),s("p",[s("code",[t._v("len")]),t._v(" - 读取的最大字节数")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("读取的实际字节数，到达流结束时返回-1。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误。")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/io/DataInputStream.html#readFully-byte:A-int-int-"}},[s("code",[t._v("DataInputStream.readFully(byte[\\],int,int)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"available"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#available"}},[t._v("#")]),t._v(" available")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public int available()\n              throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("返回可以读取而不阻塞的字节数。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("available")]),t._v("在界面  "),s("code",[t._v("ObjectInput")])])]),t._v(" "),s("li",[s("p",[t._v("重写：")]),t._v(" "),s("p",[s("code",[t._v("available")]),t._v("在 "),s("code",[t._v("InputStream")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("可用字节数。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 从底层  "),s("code",[t._v("InputStream")]),t._v("读取时是否存在I / O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"close"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#close"}},[t._v("#")]),t._v(" close")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void close()\n           throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("关闭输入流。 必须调用释放与流相关联的任何资源。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("close")]),t._v("在接口  "),s("code",[t._v("Closeable")])])]),t._v(" "),s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("close")]),t._v("在接口  "),s("code",[t._v("ObjectInput")])])]),t._v(" "),s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("close")]),t._v("在接口 "),s("code",[t._v("AutoCloseable")])])]),t._v(" "),s("li",[s("p",[t._v("重写：")]),t._v(" "),s("p",[s("code",[t._v("close")]),t._v("在类别  "),s("code",[t._v("InputStream")])])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readboolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readboolean"}},[t._v("#")]),t._v(" readBoolean")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public boolean readBoolean()\n                    throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("读取布尔值。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readBoolean")]),t._v("在界面  "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("布尔读取。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("EOFException")]),t._v(" - 如果达到文件结尾。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生其他I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readbyte"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readbyte"}},[t._v("#")]),t._v(" readByte")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public byte readByte()\n              throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("读取一个8位字节。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readByte")]),t._v("在界面 "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("读取8位字节。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("EOFException")]),t._v(" - 如果达到文件结尾。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生其他I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readunsignedbyte"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readunsignedbyte"}},[t._v("#")]),t._v(" readUnsignedByte")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public int readUnsignedByte()\n                     throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("读取一个无符号的8位字节。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readUnsignedByte")]),t._v("在界面  "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("读取8位字节。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("EOFException")]),t._v(" - 如果达到文件结尾。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生其他I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readchar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readchar"}},[t._v("#")]),t._v(" readChar")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public char readChar()\n              throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("读一个16位字符。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readChar")]),t._v("在界面 "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("16位字符读取。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("EOFException")]),t._v(" - 如果达到文件结尾。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生其他I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readshort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readshort"}},[t._v("#")]),t._v(" readShort")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public short readShort()\n                throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("读取16位短。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readShort")]),t._v("在界面 "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("16位短读。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("EOFException")]),t._v(" - 如果达到文件结尾。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生其他I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readunsignedshort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readunsignedshort"}},[t._v("#")]),t._v(" readUnsignedShort")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public int readUnsignedShort()\n                      throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("读取无符号16位短。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readUnsignedShort")]),t._v("在界面  "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("16位短读。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("EOFException")]),t._v(" - 如果达到文件结尾。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生其他I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readint"}},[t._v("#")]),t._v(" readInt")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public int readInt()\n            throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("读取一个32位int。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readInt")]),t._v("在接口  "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("32位整数读取。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("EOFException")]),t._v(" - 如果达到文件结尾。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生其他I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readlong"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readlong"}},[t._v("#")]),t._v(" readLong")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public long readLong()\n              throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("读64位长。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readLong")]),t._v("在界面 "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("读64位长。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("EOFException")]),t._v(" - 如果达到文件结尾。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生其他I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readfloat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readfloat"}},[t._v("#")]),t._v(" readFloat")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public float readFloat()\n                throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("读32位浮点数。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readFloat")]),t._v("在界面 "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("32位浮点读。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("EOFException")]),t._v(" - 如果达到文件结尾。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生其他I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readdouble"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readdouble"}},[t._v("#")]),t._v(" readDouble")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public double readDouble()\n                  throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("读64位双倍。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readDouble")]),t._v("在界面  "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("64位双读。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("EOFException")]),t._v(" - 如果达到文件结尾。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生其他I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readfully"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readfully"}},[t._v("#")]),t._v(" readFully")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void readFully(byte[] buf)\n               throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("读取字节，阻塞直到读取所有字节。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readFully")]),t._v("在界面  "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("buf")]),t._v(" - 读取数据的缓冲区")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("EOFException")]),t._v(" - 如果达到文件结尾。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生其他I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readfully-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readfully-2"}},[t._v("#")]),t._v(" readFully")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void readFully(byte[] buf,\n                      int off,\n                      int len)\n               throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("读取字节，阻塞直到读取所有字节。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readFully")]),t._v("在界面  "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("buf")]),t._v(" - 读取数据的缓冲区")]),t._v(" "),s("p",[s("code",[t._v("off")]),t._v(" - 数据的起始偏移量")]),t._v(" "),s("p",[s("code",[t._v("len")]),t._v(" - 要读取的最大字节数")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("EOFException")]),t._v(" - 如果达到文件结尾。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生其他I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"skipbytes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#skipbytes"}},[t._v("#")]),t._v(" skipBytes")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public int skipBytes(int len)\n              throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("跳过字节。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("skipBytes")]),t._v("在界面  "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("len")]),t._v(" - 要跳过的字节数")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("实际跳过的字节数。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readline"}},[t._v("#")]),t._v(" readLine")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("@Deprecated\npublic String readLine()\n                            throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("已弃用 此方法无法将字节正确转换为字符。 有关详细信息和替代方案，请参阅DataInputStream。")]),t._v(" "),s("p",[t._v("在\\ n，\\ r，\\ r \\ n或EOF终止的行中读取。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readLine")]),t._v("在界面 "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("一行的字符串副本。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 从底层  "),s("code",[t._v("InputStream")]),t._v("读取时是否存在I / O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"readutf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#readutf"}},[t._v("#")]),t._v(" readUTF")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public String readUTF()\n               throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("以 "),s("RouterLink",{attrs:{to:"/01.Java/01.Java基础/12.IO流/DataInput.html#modified-utf-8"}},[t._v("modified  UTF-8")]),t._v("格式读取字符串。")],1),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("readUTF")]),t._v("在界面  "),s("code",[t._v("DataInput")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("字符串。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 从底层  "),s("code",[t._v("InputStream")]),t._v("读取时是否存在I / O错误")]),t._v(" "),s("p",[s("code",[t._v("UTFDataFormatException")]),t._v("  - 如果读取的字节不表示字符串的有效修改的UTF-8编码")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h2",{attrs:{id:"objectoutputstrea"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#objectoutputstrea"}},[t._v("#")]),t._v(" ObjectOutputStrea")]),t._v(" "),s("h3",{attrs:{id:"构造方法详细信息-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造方法详细信息-2"}},[t._v("#")]),t._v(" 构造方法详细信息")]),t._v(" "),s("h5",{attrs:{id:"objectoutputstream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#objectoutputstream"}},[t._v("#")]),t._v(" ObjectOutputStream")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public ObjectOutputStream(OutputStream out)\n                   throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("创建一个写入指定的OutputStream的ObjectOutputStream。该构造函数将序列化流头写入底层流;调用者可能希望立即刷新流，以确保在读取头部时接收ObjectInputStreams的构造函数不会阻塞。")]),t._v(" "),s("p",[t._v("如果安装了一个安全管理器，那么这个构造函数会在被覆盖ObjectOutputStream.putFields或ObjectOutputStream.writeUnshared方法的子类的构造函数直接或间接调用时检查“enableSubclassImplementation”SerializablePermission。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("out")]),t._v(" - 输出流写入")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入流标题时发生I /  O错误")]),t._v(" "),s("p",[s("code",[t._v("SecurityException")]),t._v(" -  如果不可信子类非法覆盖安全敏感方法")]),t._v(" "),s("p",[s("code",[t._v("NullPointerException")]),t._v("  - 如果 "),s("code",[t._v("out")]),t._v("是 "),s("code",[t._v("null")])])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.4")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectOutputStream.html#ObjectOutputStream--"}},[s("code",[t._v("ObjectOutputStream()")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectOutputStream.html#putFields--"}},[s("code",[t._v("putFields()")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectInputStream.html#ObjectInputStream-java.io.InputStream-"}},[s("code",[t._v("ObjectInputStream.ObjectInputStream(InputStream)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"objectoutputstream-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#objectoutputstream-2"}},[t._v("#")]),t._v(" ObjectOutputStream")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected ObjectOutputStream()\n                      throws IOException,\n                             SecurityException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("为完全重新实现ObjectOutputStream的子类提供一种方法，不必分配刚刚被ObjectOutputStream实现使用的私有数据。")]),t._v(" "),s("p",[t._v("如果安装了一个安全管理器，此方法首先调用具有"),s("code",[t._v('SerializablePermission("enableSubclassImplementation")')]),t._v("权限的安全管理器的"),s("code",[t._v("checkPermission")]),t._v("方法，以确保启用子类化。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("SecurityException")]),t._v(" -  如果安全管理器存在，并且其 "),s("code",[t._v("checkPermission")]),t._v("方法拒绝启用子类化。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在创建此流时发生I / O错误")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/SecurityManager.html#checkPermission-java.security.Permission-"}},[s("code",[t._v("SecurityManager.checkPermission(java.security.Permission)")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/io/SerializablePermission.html"}},[s("code",[t._v("SerializablePermission")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"方法详细信息-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法详细信息-2"}},[t._v("#")]),t._v(" 方法详细信息")]),t._v(" "),s("h5",{attrs:{id:"设置流协议版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置流协议版本"}},[t._v("#")]),t._v(" 设置流协议版本")]),t._v(" "),s("h6",{attrs:{id:"useprotocolversion"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#useprotocolversion"}},[t._v("#")]),t._v(" useProtocolVersion")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void useProtocolVersion(int version)\n                        throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("指定在编写流时使用的流协议版本。")]),t._v(" "),s("p",[t._v("此例程提供了一个钩子，以使当前版本的Serialization能够以向后兼容流格式的先前版本的格式写入。")]),t._v(" "),s("p",[t._v("将尽一切努力避免引入额外的后向不兼容性; 然而，有时候别无选择。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("version")]),t._v(" - 使用java.io.ObjectStreamConstants中的ProtocolVersion。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IllegalStateException")]),t._v("  - 如果任何对象被序列化后调用。")]),t._v(" "),s("p",[s("code",[t._v("IllegalArgumentException")]),t._v("  - 如果无效版本传入。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.2")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectStreamConstants.html#PROTOCOL_VERSION_1"}},[s("code",[t._v("ObjectStreamConstants.PROTOCOL_VERSION_1")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectStreamConstants.html#PROTOCOL_VERSION_2"}},[s("code",[t._v("ObjectStreamConstants.PROTOCOL_VERSION_2")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"写入对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#写入对象"}},[t._v("#")]),t._v(" 写入对象")]),t._v(" "),s("h6",{attrs:{id:"writeobject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writeobject"}},[t._v("#")]),t._v(" writeObject")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public final void writeObject(Object obj)\n                       throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("将指定的对象写入ObjectOutputStream。写入对象的类，类的签名以及类的非瞬态和非静态字段的值以及其所有超类型。可以使用writeObject和readObject方法覆盖类的默认序列化。由该对象引用的对象被传递性地写入，以便可以通过ObjectInputStream重构对象的完整等价图。")]),t._v(" "),s("p",[t._v("对于OutputStream和不应序列化的类的问题，抛出异常。  所有异常对于OutputStream是致命的，它将处于不确定状态，由呼叫者来忽略或恢复流状态。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("writeObject")]),t._v("在界面  "),s("code",[t._v("ObjectOutput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("obj")]),t._v(" - 要写入的对象")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("InvalidClassException")]),t._v("  - 序列化使用的类错误。")]),t._v(" "),s("p",[s("code",[t._v("NotSerializableException")]),t._v("  - 要序列化的某些对象不实现java.io.Serializable接口。")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" -  底层OutputStream抛出的任何异常。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),t._v(" fos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectOutputStream")]),t._v(" oos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        fos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"E:\\\\file\\\\ObjectStream.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        oos "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectOutputStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        oos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useProtocolVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectStreamConstants")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PROTOCOL_VERSION_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n\n        oos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        oos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Employee")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"李四"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FileNotFoundException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" oos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                oos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" fos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                fos"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IOException")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br")])]),s("h5",{attrs:{id:"writeobjectoverride"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writeobjectoverride"}},[t._v("#")]),t._v(" writeObjectOverride")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected void writeObjectOverride(Object obj)\n                            throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("子类使用的方法来覆盖默认的writeObject方法。  此方法由ObjectInputStream的受信任子类调用，该子类使用受保护的无参构造函数构造ObjectInputStream。  该子类预计将提供一个具有修饰符“final”的覆盖方法。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("obj")]),t._v(" - 要写入底层流的对象")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时存在I /  O错误")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.2")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectOutputStream.html#ObjectOutputStream--"}},[s("code",[t._v("ObjectOutputStream()")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectOutputStream.html#writeObject-java.lang.Object-"}},[s("code",[t._v("writeObject(Object)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writeunshared"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writeunshared"}},[t._v("#")]),t._v(" writeUnshared")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void writeUnshared(Object obj)\n                   throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("将“非共享”对象写入ObjectOutputStream。此方法与writeObject相同，只是它始终将给定对象作为新的唯一对象写入流中（而不是指向之前的序列化实例的反向引用）。特别：")]),t._v(" "),s("ul",[s("li",[t._v("通过writeUnshared编写的对象总是以与新出现的对象（尚未写入流的对象）相同的方式进行序列化，而不管以前是否已经写过该对象。")]),t._v(" "),s("li",[t._v("如果writeObject用于写入先前使用writeUnshared写入的对象，则先前的writeUnshared操作将被视为单独对象的写入。  换句话说，ObjectOutputStream永远不会生成对由writeUnshared调用写入的对象数据的反向引用。")])]),t._v(" "),s("p",[t._v("当通过writeUnshared编写对象本身不保证对对象进行反序列化时的唯一引用，它允许在流中多次定义单个对象，以便接收器对readUnshared进行多次调用不会发生冲突。请注意，上述规则仅适用于使用writeUnshared编写的基本级别对象，而不适用于要序列化的对象图中的任何传递性引用的子对象。")]),t._v(" "),s("p",[t._v("ObjectOutputStream子类覆盖此方法只能在拥有“enableSubclassImplementation”SerializablePermission的安全上下文中构建;  任何尝试在没有此权限的情况下实例化此类子类将导致抛出SecurityException。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("obj")]),t._v(" - 对象写入流")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("NotSerializableException")]),t._v("  - 如果要序列化的图中的对象不实现Serializable接口")]),t._v(" "),s("p",[s("code",[t._v("InvalidClassException")]),t._v("  - 如果要序列化的对象的类存在问题")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在序列化期间发生I / O错误")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.4")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"defaultwriteobject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#defaultwriteobject"}},[t._v("#")]),t._v(" defaultWriteObject")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void defaultWriteObject()\n                        throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("将当前类的非静态和非瞬态字段写入此流。  这只能从被序列化的类的writeObject方法调用。 否则将抛出NotActiveException异常。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层  "),s("code",[t._v("OutputStream")]),t._v("时发生I / O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"putfields"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#putfields"}},[t._v("#")]),t._v(" putFields")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public ObjectOutputStream.PutField putFields()\n                                      throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("检索用于缓冲要写入流的持久性字段的对象。  当调用writeFields方法时，字段将被写入流。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("Putfield类的一个实例，它保存了可序列化的字段")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.2")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writefields"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writefields"}},[t._v("#")]),t._v(" writeFields")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void writeFields()\n                 throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("将缓冲的字段写入流。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时发生I /  O错误")]),t._v(" "),s("p",[s("code",[t._v("NotActiveException")]),t._v(" -  当没有调用类writeObject方法来写入对象的状态时调用。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.2")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"reset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reset"}},[t._v("#")]),t._v(" reset")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void reset()\n           throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("复位将忽略已写入流的任何对象的状态。  状态被重置为与新的ObjectOutputStream相同。  流中的当前点被标记为重置，所以相应的ObjectInputStream将在同一点被重置。  以前写入流的对象不会被称为已经在流中。 他们将再次写入流。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" -  如果在序列化对象时调用了reset（）。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"annotateclass"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#annotateclass"}},[t._v("#")]),t._v(" annotateClass")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected void annotateClass(类<?> cl)\n                      throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("子类可以实现此方法，以允许类数据存储在流中。  默认情况下，此方法不执行任何操作。  ObjectInputStream中的相应方法是resolveClass。  对于流中的每个唯一类，此方法称为一次。 类名和签名已经写入流。  该方法可以免费使用ObjectOutputStream来保存其认为合适的类的任何表示（例如，类文件的字节）。  ObjectInputStream对应子类中的resolveClass方法必须读取并使用annotateClass写入的任何数据或对象。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("cl")]),t._v(" - 用于注释自定义数据的类")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" -  底层OutputStream抛出的任何异常。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"annotateproxyclass"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#annotateproxyclass"}},[t._v("#")]),t._v(" annotateProxyClass")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected void annotateProxyClass(类<?> cl)\n                           throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("子类可以实现这种方法来存储流中的自定义数据以及动态代理类的描述符。")]),t._v(" "),s("p",[t._v("对于流中的每个唯一代理类描述符，该方法被称为一次。  这种方法的默认实现"),s("code",[t._v("ObjectOutputStream")]),t._v("什么都不做。")]),t._v(" "),s("p",[t._v("在相应的方法"),s("code",[t._v("ObjectInputStream")]),t._v("是"),s("code",[t._v("resolveProxyClass")]),t._v("  。 对于给定的子类"),s("code",[t._v("ObjectOutputStream")]),t._v("重写该方法中，  "),s("code",[t._v("resolveProxyClass")]),t._v("中的相应子类方法"),s("code",[t._v("ObjectInputStream")]),t._v("必须读取由写任何数据或对象"),s("code",[t._v("annotateProxyClass")]),t._v("  。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("cl")]),t._v(" - 用于注释自定义数据的代理类")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" -由底层抛出的任何异常  "),s("code",[t._v("OutputStream")])])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.3")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectInputStream.html#resolveProxyClass-java.lang.String:A-"}},[s("code",[t._v("ObjectInputStream.resolveProxyClass(String[\\])")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"replaceobject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replaceobject"}},[t._v("#")]),t._v(" replaceObject")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected Object replaceObject(Object obj)\n                        throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("该方法将允许ObjectOutputStream的可信子类在序列化期间将一个对象替换为另一个对象。在调用enableReplaceObject之前，将禁用替换对象。enableReplaceObject方法检查请求做替换的流可以被信任。写入序列化流的每个对象的第一次出现被传递给replaceObject。对对象的后续引用将被原始调用replaceObject返回的对象所替代。为了确保对象的私有状态不会被无意间暴露，只有可信流可能使用replaceObject。")]),t._v(" "),s("p",[t._v("ObjectOutputStream.writeObject方法接受Object类型的参数（与Serializable类型相反），以允许将非可序列化对象替换为可序列化对象的情况。")]),t._v(" "),s("p",[t._v("当子类替换对象时，必须确保在反序列化期间必须进行补充替换，或者替换对象与要存储引用的每个字段兼容。  类型不是字段或数组元素类型的子类的对象通过引发异常终止序列化，并且不存储该对象。")]),t._v(" "),s("p",[t._v("当首次遇到每个对象时，此方法仅调用一次。 对对象的所有后续引用将被重定向到新对象。  该方法应该返回要替换的对象或原始对象。")]),t._v(" "),s("p",[t._v("Null可以作为要替换的对象返回，但是可能会在包含对原始对象的引用的类中引起NullReferenceException，因为它们可能期望一个对象而不是null。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("obj")]),t._v(" - 要替换的对象")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("代替指定的替代对象")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" -  底层OutputStream抛出的任何异常。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"enablereplaceobject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enablereplaceobject"}},[t._v("#")]),t._v(" enableReplaceObject")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected boolean enableReplaceObject(boolean enable)\n                               throws SecurityException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("启用流来替换流中的对象。启用时，将为每个正在序列化的对象调用replaceObject方法。")]),t._v(" "),s("p",[t._v("如果"),s("code",[t._v("enable")]),t._v("为真，并且安装了一个安全管理器，则该方法首先调用具有"),s("code",[t._v('SerializablePermission("enableSubstitution")')]),t._v("权限的安全管理器的"),s("code",[t._v("checkPermission")]),t._v("方法，以确保启用该流来替换流中的对象。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("enable")]),t._v(" - 用于启用对象更换的布尔参数")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("此方法被调用之前的前一个设置")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("SecurityException")]),t._v(" -  如果安全管理器存在，并且其 "),s("code",[t._v("checkPermission")]),t._v("方法拒绝启用流来替换流中的对象。")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/SecurityManager.html#checkPermission-java.security.Permission-"}},[s("code",[t._v("SecurityManager.checkPermission(java.security.Permission)")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/io/SerializablePermission.html"}},[s("code",[t._v("SerializablePermission")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writestreamheader"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writestreamheader"}},[t._v("#")]),t._v(" writeStreamHeader")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected void writeStreamHeader()\n                          throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("提供了writeStreamHeader方法，因此子类可以在流中附加或预先添加自己的头。  它将魔术数字和版本写入流。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时发生I /  O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writeclassdescriptor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writeclassdescriptor"}},[t._v("#")]),t._v(" writeClassDescriptor")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected void writeClassDescriptor(ObjectStreamClass desc)\n                             throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("将指定的类描述符写入ObjectOutputStream。类描述符用于标识写入流的对象类。ObjectOutputStream的子类可以覆盖此方法来自定义类描述符写入序列化流的方式。然后应该覆盖ObjectInputStream，  "),s("code",[t._v("readClassDescriptor")]),t._v("中的相应方法，以便从其自定义流表示中重构类描述符。默认情况下，此方法根据对象序列化规范中定义的格式编写类描述符。")]),t._v(" "),s("p",[t._v("请注意，只有当ObjectOutputStream不使用旧的序列化流格式（通过调用ObjectOutputStream的"),s("code",[t._v("useProtocolVersion")]),t._v("方法设置）时，才会调用"),s("code",[t._v("useProtocolVersion")]),t._v("方法。  如果此序列化流使用旧格式（ "),s("code",[t._v("PROTOCOL_VERSION_1")]),t._v("  ），则类描述符将以不能被覆盖或自定义的方式内部写入。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("desc")]),t._v(" - 写入流的类描述符")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.3")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectInputStream.html#readClassDescriptor--"}},[s("code",[t._v("ObjectInputStream.readClassDescriptor()")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectOutputStream.html#useProtocolVersion-int-"}},[s("code",[t._v("useProtocolVersion(int)")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/io/ObjectStreamConstants.html#PROTOCOL_VERSION_1"}},[s("code",[t._v("ObjectStreamConstants.PROTOCOL_VERSION_1")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"write"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#write"}},[t._v("#")]),t._v(" write")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void write(int val)\n           throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("写一个字节。 该方法将阻塞直到字节实际写入。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("write")]),t._v("在界面  "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("write")]),t._v("在界面 "),s("code",[t._v("ObjectOutput")])])]),t._v(" "),s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("write")]),t._v("在类别 "),s("code",[t._v("OutputStream")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("val")]),t._v(" - "),s("code",[t._v("val")]),t._v("的字节")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"write-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#write-2"}},[t._v("#")]),t._v(" write")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void write(byte[] buf)\n           throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("写入一个字节数组。 该方法将阻塞直到字节实际写入。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("write")]),t._v("在界面 "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("write")]),t._v("在界面  "),s("code",[t._v("ObjectOutput")])])]),t._v(" "),s("li",[s("p",[t._v("重写：")]),t._v(" "),s("p",[s("code",[t._v("write")]),t._v("在类别  "),s("code",[t._v("OutputStream")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("buf")]),t._v(" - 要写入的数据")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误。")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/io/OutputStream.html#write-byte:A-int-int-"}},[s("code",[t._v("OutputStream.write(byte[\\], int, int)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"write-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#write-3"}},[t._v("#")]),t._v(" write")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void write(byte[] buf,\n                  int off,\n                  int len)\n           throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("写入一个子字节数组。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("write")]),t._v("在界面  "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("write")]),t._v("在界面  "),s("code",[t._v("ObjectOutput")])])]),t._v(" "),s("li",[s("p",[t._v("重写：")]),t._v(" "),s("p",[s("code",[t._v("write")]),t._v("在类别  "),s("code",[t._v("OutputStream")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("buf")]),t._v(" - 要写入的数据")]),t._v(" "),s("p",[s("code",[t._v("off")]),t._v(" - 数据中的起始偏移量")]),t._v(" "),s("p",[s("code",[t._v("len")]),t._v(" - 写入的字节数")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"flush"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flush"}},[t._v("#")]),t._v(" flush")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void flush()\n           throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("刷新流。 这将写入任何缓冲的输出字节并刷新到底层流。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("flush")]),t._v("在接口  "),s("code",[t._v("Flushable")])])]),t._v(" "),s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("flush")]),t._v("在界面  "),s("code",[t._v("ObjectOutput")])])]),t._v(" "),s("li",[s("p",[t._v("重写：")]),t._v(" "),s("p",[s("code",[t._v("flush")]),t._v("在类别  "),s("code",[t._v("OutputStream")])])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"drain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#drain"}},[t._v("#")]),t._v(" drain")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("protected void drain()\n              throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("排除ObjectOutputStream中的缓冲数据。  类似于flush，但不会将flush传播到底层流。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时发生I /  O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"close-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#close-2"}},[t._v("#")]),t._v(" close")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void close()\n           throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("关闭流。 必须调用此方法以释放与流相关联的任何资源。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("close")]),t._v("在界面  "),s("code",[t._v("Closeable")])])]),t._v(" "),s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("close")]),t._v("在界面  "),s("code",[t._v("ObjectOutput")])])]),t._v(" "),s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("close")]),t._v("在界面 "),s("code",[t._v("AutoCloseable")])])]),t._v(" "),s("li",[s("p",[t._v("重写：")]),t._v(" "),s("p",[s("code",[t._v("close")]),t._v("在类别  "),s("code",[t._v("OutputStream")])])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果发生I / O错误。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writeboolean"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writeboolean"}},[t._v("#")]),t._v(" writeBoolean")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void writeBoolean(boolean val)\n                  throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("写一个布尔值。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("writeBoolean")]),t._v("在界面  "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("val")]),t._v(" - 要写入的布尔值")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时发生I /  O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writebyte"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writebyte"}},[t._v("#")]),t._v(" writeByte")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void writeByte(int val)\n               throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("写入一个8位字节。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("writeByte")]),t._v("在界面  "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("val")]),t._v(" - 要写入的字节值")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时发生I /  O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writeshort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writeshort"}},[t._v("#")]),t._v(" writeShort")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void writeShort(int val)\n                throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("写一个16位短。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("writeShort")]),t._v("在界面  "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("val")]),t._v(" - "),s("code",[t._v("val")]),t._v("的短价值")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时发生I /  O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writechar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writechar"}},[t._v("#")]),t._v(" writeChar")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void writeChar(int val)\n               throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("写一个16位的字符。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("writeChar")]),t._v("在界面  "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("val")]),t._v(" - 要写入的char值")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时发生I /  O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writeint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writeint"}},[t._v("#")]),t._v(" writeInt")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void writeInt(int val)\n              throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("写一个32位int。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("writeInt")]),t._v("在界面  "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("val")]),t._v(" - 要写入的整数值")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时发生I /  O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writelong"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writelong"}},[t._v("#")]),t._v(" writeLong")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void writeLong(long val)\n               throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("写一个64位长")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("writeLong")]),t._v("在界面  "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("val")]),t._v(" - "),s("code",[t._v("val")]),t._v("的长的价值")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时发生I /  O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writefloat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writefloat"}},[t._v("#")]),t._v(" writeFloat")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void writeFloat(float val)\n                throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("写一个32位浮点数。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("writeFloat")]),t._v("在界面  "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("val")]),t._v(" - 要写入的浮点值")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时发生I /  O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writedouble"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writedouble"}},[t._v("#")]),t._v(" writeDouble")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void writeDouble(double val)\n                 throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("写一个64位的双倍。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("writeDouble")]),t._v("在界面  "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("val")]),t._v(" - 要写入的双重值")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时发生I /  O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writebytes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writebytes"}},[t._v("#")]),t._v(" writeBytes")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void writeBytes(String str)\n                throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("写一个字符串作为字节序列。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("writeBytes")]),t._v("在界面  "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("str")]),t._v(" - 要写入的字节串")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时发生I /  O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writechars"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writechars"}},[t._v("#")]),t._v(" writeChars")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void writeChars(String str)\n                throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("写一个字符串作为一系列的字符。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("writeChars")]),t._v("在界面  "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("str")]),t._v(" - 要写入的字符串")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - 如果在写入底层流时发生I /  O错误")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"writeutf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#writeutf"}},[t._v("#")]),t._v(" writeUTF")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public void writeUTF(String str)\n              throws IOException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("此字符串的原始数据写入格式为"),s("RouterLink",{attrs:{to:"/01.Java/01.Java基础/12.IO流/DataInput.html#modified-utf-8"}},[t._v("modified UTF-8")]),t._v(" 。  请注意，将字符串写入流中作为原始数据或作为对象有重大差异。  由writeObject写的String实例最初作为String写入流中。  未来的writeObject（）会将对字符串的引用调用到流中。")],1),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("writeUTF")]),t._v("在界面  "),s("code",[t._v("DataOutput")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("str")]),t._v(" - 要写入的字符串")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("IOException")]),t._v(" - if I/O errors  occur while writing to the underlying stream")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])])])}),[],!1,null,null,null);e.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{655:function(v,_,a){"use strict";a.r(_);var e=a(33),t=Object(e.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h1",{attrs:{id:"构造方法详细信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造方法详细信息"}},[v._v("#")]),v._v(" 构造方法详细信息")]),v._v(" "),a("h2",{attrs:{id:"float"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#float"}},[v._v("#")]),v._v(" Float")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public Float(float value)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("构造一个新分配的 "),a("code",[v._v("Float")]),v._v("对象，该对象表示基元 "),a("code",[v._v("float")]),v._v("参数。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("value")]),v._v(" -值由表示 "),a("code",[v._v("Float")]),v._v(" 。")])])]),v._v(" "),a("h2",{attrs:{id:"float-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#float-2"}},[v._v("#")]),v._v(" Float")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public Float(double value)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("构造一个新分配 "),a("code",[v._v("Float")]),v._v("对象，它表示转换为类型参数 "),a("code",[v._v("float")]),v._v(" 。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("value")]),v._v(" -值由表示 "),a("code",[v._v("Float")]),v._v(" 。")])])]),v._v(" "),a("h2",{attrs:{id:"float-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#float-3"}},[v._v("#")]),v._v(" Float")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public Float(String s)\n      throws NumberFormatException\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br")])]),a("p",[v._v("构造一个新分配的"),a("code",[v._v("Float")]),v._v("对象，该对象表示由字符串表示的类型"),a("code",[v._v("float")]),v._v("的浮点值。  该字符串被转换为一个"),a("code",[v._v("float")]),v._v("值如果由"),a("code",[v._v("valueOf")]),v._v("方法。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("s")]),v._v(" -一个字符串被转换为 "),a("code",[v._v("Float")]),v._v(" 。")])]),v._v(" "),a("li",[a("p",[v._v("异常")]),v._v(" "),a("p",[a("code",[v._v("NumberFormatException")]),v._v("  - 如果字符串不包含可解析的数字。")])]),v._v(" "),a("li",[a("p",[v._v("另请参见：")]),v._v(" "),a("p",[a("RouterLink",{attrs:{to:"/01.Java/java/lang/Float.html#valueOf-java.lang.String-"}},[a("code",[v._v("valueOf(java.lang.String)")])])],1)])]),v._v(" "),a("h1",{attrs:{id:"方法详细信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法详细信息"}},[v._v("#")]),v._v(" 方法详细信息")]),v._v(" "),a("h2",{attrs:{id:"tostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tostring"}},[v._v("#")]),v._v(" toString")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static String toString(float f)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回"),a("code",[v._v("float")]),v._v("参数的字符串"),a("code",[v._v("float")]),v._v("形式。下面提到的所有字符都是ASCII字符。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("如果参数是NaN，结果是字符串“ "),a("code",[v._v("NaN")]),v._v(" ”。")])]),v._v(" "),a("li",[a("p",[v._v("否则，结果是表示参数的符号和大小（绝对值）的字符串。")]),v._v(" "),a("p",[v._v("如果符号为负，则结果的第一个字符为“  "),a("code",[v._v("-")]),v._v(" ”（ "),a("code",[v._v("'\\u002D'")]),v._v(" ）;")]),v._v(" "),a("p",[v._v("如果符号为正，则结果中不会出现任何符号字符。")]),v._v(" "),a("p",[v._v("至于幅度"),a("em",[v._v("m")]),v._v(" ：")]),v._v(" "),a("ul",[a("li",[v._v("如果"),a("em",[v._v("m")]),v._v("是无穷大，它由字符"),a("code",[v._v('"Infinity"')]),v._v(" ;  因此，正无穷大产生结果"),a("code",[v._v('"Infinity"')]),v._v("和负无穷大产生结果"),a("code",[v._v('"-Infinity"')]),v._v("  。")]),v._v(" "),a("li",[v._v("如果"),a("em",[v._v("m")]),v._v("为零，则由"),a("code",[v._v('"0.0"')]),v._v(" ;  因此，负零产生结果"),a("code",[v._v('"-0.0"')]),v._v("和正零产生结果"),a("code",[v._v('"0.0"')]),v._v(" 。")]),v._v(" "),a("li",[v._v("如果"),a("em",[v._v("m")]),v._v("大于或等于10 -3但小于10 7  ，则表示为"),a("em",[v._v("m")]),v._v("的整数部分，以十进制形式表示，不带前导零，后跟“ "),a("code",[v._v(".")]),v._v(" ”（ "),a("code",[v._v("'\\u002E'")]),v._v("  ），后跟一个或多个表示"),a("em",[v._v("m")]),v._v("的小数部分十进制数字。")]),v._v(" "),a("li",[v._v("如果"),a("em",[v._v("m")]),v._v("小于10 -3或大于或等于10 7  ，则表示为所谓的“计算机科学记数法”。 设"),a("em",[v._v("n")]),v._v("是唯一的整数，使得"),a("em",[v._v("10N")]),v._v("的‰¤  "),a("em",[v._v("米")]),v._v(" <10 "),a("em",[v._v("N")]),v._v(" + 1;  然后让"),a("em",[v._v("一个")]),v._v("是"),a("em",[v._v("m")]),v._v("的精确算术商和10 "),a("em",[v._v("牛顿")]),v._v(" ，使1个â‰¤ "),a("em",[v._v("一个")]),v._v("  <10.然后将大小被表示为"),a("em",[v._v("a")]),v._v("的整数部分，作为一个单一的十进制数字，后跟“ "),a("code",[v._v(".")]),v._v(" ”（  "),a("code",[v._v("'\\u002E'")]),v._v(" ），再后面是表示"),a("em",[v._v("一个")]),v._v("小数部分十进制数字，后面跟有字母“ "),a("code",[v._v("E")]),v._v(" ”（  "),a("code",[v._v("'\\u0045'")]),v._v(" ），接着为十进制整数"),a("em",[v._v("n")]),v._v("的表示，作为由该方法制备"),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#toString-int-"}},[a("code",[v._v("Integer.toString(int)")])]),v._v("  。")],1)])])]),v._v(" "),a("p",[a("em",[v._v("m")]),v._v("或"),a("em",[v._v("a")]),v._v("的小数部分必须打印多少位数？必须有至少一个数字来表示小数部分，并且除了必须唯一区分参数值和类型"),a("code",[v._v("float")]),v._v("相邻值所需的数量之外，还需要多少数字。也就是说，假设"),a("em",[v._v("x")]),v._v("是由用于有限非零参数"),a("em",[v._v("f")]),v._v("的此方法生成的十进制表示形式表示的确切数学值。那么"),a("em",[v._v("f")]),v._v("必须是最接近"),a("em",[v._v("x")]),v._v("的"),a("code",[v._v("float")]),v._v("值;或者，如果两个"),a("code",[v._v("float")]),v._v("值都同样接近为"),a("em",[v._v("x，"),a("em",[v._v("则")]),v._v("f")]),v._v("必须是它们中的一个和"),a("em",[v._v("f")]),v._v("的有效数的至少显著位必须为"),a("code",[v._v("0")]),v._v("  。")]),v._v(" "),a("p",[v._v("要创建浮点值的本地化字符串表示，请使用"),a("code",[v._v("NumberFormat")]),v._v("的"),a("RouterLink",{attrs:{to:"/01.Java/java/text/NumberFormat.html"}},[v._v("子类")]),v._v(" 。")],1),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("f")]),v._v(" - 要转换的浮点数。")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("参数的字符串表示形式。")])])]),v._v(" "),a("h2",{attrs:{id:"tohexstring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tohexstring"}},[v._v("#")]),v._v(" toHexString")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static String toHexString(float f)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回"),a("code",[v._v("float")]),v._v("参数的十六进制字符串"),a("code",[v._v("float")]),v._v("形式。下面提到的所有字符都是ASCII字符。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("如果参数是NaN，结果是字符串“ "),a("code",[v._v("NaN")]),v._v(" ”。")])]),v._v(" "),a("li",[a("p",[v._v("否则，结果是表示参数的符号和大小（绝对值）的字符串。")]),v._v(" "),a("p",[v._v("如果符号为负，则结果的第一个字符为“  "),a("code",[v._v("-")]),v._v(" ”（ "),a("code",[v._v("'\\u002D'")]),v._v(" ）;")]),v._v(" "),a("p",[v._v("如果符号为正，则结果中不会出现任何符号字符。")]),v._v(" "),a("p",[v._v("至于幅度"),a("em",[v._v("m")]),v._v(" ：")]),v._v(" "),a("ul",[a("li",[v._v("如果"),a("em",[v._v("m")]),v._v("是无穷大，它由字符串"),a("code",[v._v('"Infinity"')]),v._v(" ;  因此，正无穷大产生结果"),a("code",[v._v('"Infinity"')]),v._v("和负无穷大产生结果"),a("code",[v._v('"-Infinity"')]),v._v("  。")]),v._v(" "),a("li",[v._v("如果"),a("em",[v._v("m")]),v._v("为零，则用字符串"),a("code",[v._v('"0x0.0p0"')]),v._v(" ;  因此，负零产生结果"),a("code",[v._v('"-0x0.0p0"')]),v._v(" ，正零产生结果"),a("code",[v._v('"0x0.0p0"')]),v._v(" 。")]),v._v(" "),a("li",[v._v("如果"),a("em",[v._v("m")]),v._v("是具有"),a("code",[v._v("float")]),v._v("一化表示的"),a("code",[v._v("float")]),v._v('值，则使用子字符串来表示有效位数和指数字段。  有效位数由字符"0x1." '),a("code",[v._v('"0x1."')]),v._v("后面是有意义数据的其余部分的小写十六进制表示形式作为分数。  删除十六进制表示中的尾随零，除非所有数字都为零，在这种情况下使用单个零。  接下来，指数由"),a("code",[v._v('"p"')]),v._v("后面是无偏指数的十进制字符串，就像通过对指数值调用"),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#toString-int-"}},[a("code",[v._v("Integer.toString")])]),v._v("生成的"),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#toString-int-"}},[v._v("那样")]),v._v(" 。")],1),v._v(" "),a("li",[v._v("如果"),a("em",[v._v("m")]),v._v("是具有"),a("code",[v._v("float")]),v._v("表示的"),a("code",[v._v("float")]),v._v("值，则有效位数由字符"),a("code",[v._v('"0x0."')]),v._v("后面是有效数的其余部分的十六进制表示作为分数。  删除十六进制表示中的尾随零。 接下来，指数由"),a("code",[v._v('"p-126"')]),v._v(" 。  请注意，在异常有效位数中必须至少有一个非零数字。")])])])]),v._v(" "),a("p",[v._v("Examples  Floating-point Value Hexadecimal String "),a("code",[v._v("1.0")]),v._v(" "),a("code",[v._v("0x1.0p0")]),v._v(" "),a("code",[v._v("-1.0")]),v._v(" "),a("code",[v._v("-0x1.0p0")]),v._v(" "),a("code",[v._v("2.0")]),v._v(" "),a("code",[v._v("0x1.0p1")]),v._v(" "),a("code",[v._v("3.0")]),v._v(" "),a("code",[v._v("0x1.8p1")]),v._v(" "),a("code",[v._v("0.5")]),v._v(" "),a("code",[v._v("0x1.0p-1")]),v._v(" "),a("code",[v._v("0.25")]),v._v(" "),a("code",[v._v("0x1.0p-2")]),v._v(" "),a("code",[v._v("Float.MAX_VALUE")]),v._v(" "),a("code",[v._v("0x1.fffffep127")]),v._v(" "),a("code",[v._v("Minimum Normal Value")]),v._v(" "),a("code",[v._v("0x1.0p-126")]),v._v(" "),a("code",[v._v("Maximum Subnormal Value")]),v._v(" "),a("code",[v._v("0x0.fffffep-126")]),v._v(" "),a("code",[v._v("Float.MIN_VALUE")]),v._v(" "),a("code",[v._v("0x0.000002p-126")])]),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("f")]),v._v(" -的 "),a("code",[v._v("float")]),v._v("进行转换。")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("参数的十六进制字符串表示形式。")])]),v._v(" "),a("li",[a("p",[v._v("从以下版本开始：")]),v._v(" "),a("p",[v._v("1.5")])])]),v._v(" "),a("h2",{attrs:{id:"valueof"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#valueof"}},[v._v("#")]),v._v(" valueOf")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static Float valueOf(String s)\n                     throws NumberFormatException\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br")])]),a("p",[v._v("返回一个"),a("code",[v._v("Float")]),v._v("对象，保存由参数字符串"),a("code",[v._v("s")]),v._v("的"),a("code",[v._v("float")]),v._v("值。")]),v._v(" "),a("p",[v._v("如果"),a("code",[v._v("s")]),v._v("是"),a("code",[v._v("null")]),v._v("  ，那么抛出一个"),a("code",[v._v("NullPointerException")]),v._v(" 。")]),v._v(" "),a("p",[v._v("s中的前导和尾随空格"),a("code",[v._v("s")]),v._v("将被忽略。 空格被删除，好像通过"),a("RouterLink",{attrs:{to:"/01.Java/java/lang/String.html#trim--"}},[a("code",[v._v("String.trim()")])]),v._v("方法;  也就是说，ASCII空间和控制字符都被删除。  "),a("code",[v._v("s")]),v._v("的其余部分应构成"),a("em",[v._v("FloatValue")]),v._v(" ，如词法语法规则所述：")],1),v._v(" "),a("blockquote",[a("p",[a("em",[v._v("FloatValue:")]),v._v(" "),a("em",[v._v("Signopt")]),v._v(" "),a("code",[v._v("NaN")]),v._v(" "),a("em",[v._v("Signopt")]),v._v(" "),a("code",[v._v("Infinity")]),v._v(" "),a("em",[v._v("Signopt FloatingPointLiteral")]),v._v(" "),a("em",[v._v("Signopt HexFloatingPointLiteral")]),v._v(" "),a("em",[v._v("SignedInteger")]),v._v(" "),a("em",[v._v("HexFloatingPointLiteral")]),v._v(":  "),a("em",[v._v("HexSignificand BinaryExponent FloatTypeSuffixopt")]),v._v(" "),a("em",[v._v("HexSignificand:")]),v._v(" "),a("em",[v._v("HexNumeral")]),v._v(" "),a("em",[v._v("HexNumeral")]),v._v(" "),a("code",[v._v(".")]),v._v(" "),a("code",[v._v("0x")]),v._v(" "),a("em",[v._v("HexDigitsopt")]),v._v(" "),a("code",[v._v(".")]),v._v(" "),a("em",[v._v("HexDigits")]),v._v(" "),a("code",[v._v("0X")]),v._v(" "),a("em",[v._v("HexDigitsopt")]),v._v(" "),a("code",[v._v(".")]),v._v(" "),a("em",[v._v("HexDigits")]),v._v(" "),a("em",[v._v("BinaryExponent:")]),v._v(" "),a("em",[v._v("BinaryExponentIndicator SignedInteger")]),v._v(" "),a("em",[v._v("BinaryExponentIndicator:")]),v._v(" "),a("code",[v._v("p")]),v._v(" "),a("code",[v._v("P")])])]),v._v(" "),a("p",[v._v("其中"),a("em",[v._v("Sign")]),v._v(" ，  "),a("em",[v._v("FloatingPointLiteral")]),v._v(" ， "),a("em",[v._v("HexNumeral")]),v._v(" ， "),a("em",[v._v("HexDigits")]),v._v(" ，  "),a("em",[v._v("SignedInteger")]),v._v("和"),a("em",[v._v("FloatTypeSuffix")]),v._v("在The Java™ Language  Specification的词法结构部分中定义 ，不同之处在于数字之间不接受下划线。如果"),a("code",[v._v("s")]),v._v("不具有"),a("em",[v._v("的floatValue")]),v._v("的形式，那么"),a("code",[v._v("NumberFormatException")]),v._v("异常。否则， "),a("code",[v._v("s")]),v._v("被认为是在通常的“计算机科学符号”中表示精确的十进制值，或者作为精确的十六进制值;这个精确的数值然后在概念上被转换成“无限精确”二进制值，然后通过IEEE  754浮点"),a("code",[v._v("float")]),v._v("的通常的圆到最近的规则进行四舍五入到类型float，其包括保留零值的符号。注意，round-to-nearest规则也意味着溢出和下溢行为;如果"),a("code",[v._v("s")]),v._v("的确切值足够大（大于或等于（ "),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Float.html#MAX_VALUE"}},[a("code",[v._v("MAX_VALUE")])]),v._v(" + "),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Math.html#ulp-float-"}},[a("code",[v._v("ulp(MAX_VALUE)")]),v._v("/2")]),v._v("  ）），则舍入到"),a("code",[v._v("float")]),v._v("将导致无穷大，如果"),a("code",[v._v("s")]),v._v("的确切值足够小（小于或等于到"),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Float.html#MIN_VALUE"}},[a("code",[v._v("MIN_VALUE")]),v._v("/2")]),v._v("  ），四舍五入将导致零。最后，在舍入后，返回一个"),a("code",[v._v("Float")]),v._v("对象，表示此"),a("code",[v._v("float")]),v._v(" 。")],1),v._v(" "),a("p",[v._v("要解释浮点值的本地化字符串表示，请使用"),a("code",[v._v("NumberFormat")]),v._v("的"),a("RouterLink",{attrs:{to:"/01.Java/java/text/NumberFormat.html"}},[v._v("子类")]),v._v(" 。")],1),v._v(" "),a("p",[v._v("注意，尾部格式说明，即确定一个浮点文字的类型说明符（ "),a("code",[v._v("1.0f")]),v._v("是"),a("code",[v._v("float")]),v._v("值;  "),a("code",[v._v("1.0d")]),v._v("是"),a("code",[v._v("double")]),v._v("值）， "),a("em",[v._v("不")]),v._v("影响该方法的结果。  换句话说，输入字符串的数值直接转换为目标浮点类型。  一般来说，转换的两步序列，字符串为"),a("code",[v._v("double")]),v._v("后跟"),a("code",[v._v("double")]),v._v("至"),a("code",[v._v("float")]),v._v("  ， "),a("em",[v._v("并不")]),v._v("等同于将字符串直接转换为"),a("code",[v._v("float")]),v._v(" 。  例如，如果首先转换为中间"),a("code",[v._v("double")]),v._v(" ，然后转换为"),a("code",[v._v("float")]),v._v(" ，则字符串"),a("br"),v._v(" "),a("code",[v._v('"1.00000017881393421514957253748434595763683319091796875001d"')]),a("br"),v._v("\n结果在"),a("code",[v._v("float")]),v._v("价值"),a("code",[v._v("1.0000002f")]),v._v(" ;  如果字符串直接转换为"),a("code",[v._v("float")]),v._v(" ，  "),a("code",[v._v("1.000000**1**f")]),v._v("结果为"),a("code",[v._v("float")]),v._v(" 。")]),v._v(" "),a("p",[v._v("避免调用上无效字符串这种方法和具有"),a("code",[v._v("NumberFormatException")]),v._v("被抛出，进行文件"),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Double.html#valueOf-java.lang.String-"}},[a("code",[v._v("Double.valueOf")])]),v._v("列出了正则表达式可用于筛选的输入端。")],1),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("s")]),v._v(" - 要解析的字符串。")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("一个 "),a("code",[v._v("Float")]),v._v("对象保存由 "),a("code",[v._v("String")]),v._v("参数表示的值。")])]),v._v(" "),a("li",[a("p",[v._v("异常")]),v._v(" "),a("p",[a("code",[v._v("NumberFormatException")]),v._v("  - 如果字符串不包含可解析的数字。")])])]),v._v(" "),a("h2",{attrs:{id:"valueof-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#valueof-2"}},[v._v("#")]),v._v(" valueOf")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static Float valueOf(float f)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回一个"),a("code",[v._v("Float")]),v._v("指定的"),a("code",[v._v("float")]),v._v("值的"),a("code",[v._v("Float")]),v._v("实例。  如果不需要新的"),a("code",[v._v("Float")]),v._v("实例，则该方法通常优先于构造函数"),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Float.html#Float-float-"}},[a("code",[v._v("Float(float)")]),v._v("使用")]),v._v("  ，因为该方法可能通过缓存经常请求的值而产生明显更好的空间和时间性能。")],1),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("f")]),v._v(" - 一个浮点值。")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("一个 "),a("code",[v._v("Float")]),v._v("实例，代表 "),a("code",[v._v("f")]),v._v(" 。")])]),v._v(" "),a("li",[a("p",[v._v("从以下版本开始：")]),v._v(" "),a("p",[v._v("1.5")])])]),v._v(" "),a("h2",{attrs:{id:"parsefloat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parsefloat"}},[v._v("#")]),v._v(" parseFloat")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static float parseFloat(String s)\n                        throws NumberFormatException\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br")])]),a("p",[v._v("返回一个新 "),a("code",[v._v("float")]),v._v("初始化为指定的代表的值 "),a("code",[v._v("String")]),v._v(" ，如通过执行  "),a("code",[v._v("valueOf")]),v._v("类的方法 "),a("code",[v._v("Float")]),v._v(" 。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("s")]),v._v(" - 要解析的字符串。")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[a("code",[v._v("float")]),v._v("值由字符串参数表示。")])]),v._v(" "),a("li",[a("p",[v._v("异常")]),v._v(" "),a("p",[a("code",[v._v("NullPointerException")]),v._v("  - 如果字符串为空")]),v._v(" "),a("p",[a("code",[v._v("NumberFormatException")]),v._v("  - 如果字符串不包含可解析的 "),a("code",[v._v("float")]),v._v(" 。")])]),v._v(" "),a("li",[a("p",[v._v("从以下版本开始：")]),v._v(" "),a("p",[v._v("1.2")])]),v._v(" "),a("li",[a("p",[v._v("另请参见：")]),v._v(" "),a("p",[a("RouterLink",{attrs:{to:"/01.Java/java/lang/Float.html#valueOf-java.lang.String-"}},[a("code",[v._v("valueOf(String)")])])],1)])]),v._v(" "),a("h2",{attrs:{id:"isnan"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isnan"}},[v._v("#")]),v._v(" isNaN")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static boolean isNaN(float v)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回 "),a("code",[v._v("true")]),v._v("如果指定的号码是一个不一个数字（NaN）值，  "),a("code",[v._v("false")]),v._v("否则。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("v")]),v._v(" - 要测试的值。")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[a("code",[v._v("true")]),v._v("如果参数是NaN; "),a("code",[v._v("false")]),v._v("否则。")])])]),v._v(" "),a("h2",{attrs:{id:"isinfinite"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isinfinite"}},[v._v("#")]),v._v(" isInfinite")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static boolean isInfinite(float v)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回 "),a("code",[v._v("true")]),v._v("如果指定的数字大小无限大， "),a("code",[v._v("false")]),v._v(" false。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("v")]),v._v(" - 要测试的值。")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[a("code",[v._v("true")]),v._v("如果参数是正无穷大或负无穷大;  "),a("code",[v._v("false")]),v._v("否则。")])])]),v._v(" "),a("h2",{attrs:{id:"isfinite"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isfinite"}},[v._v("#")]),v._v(" isFinite")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static boolean isFinite(float f)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("如果参数是有限浮点值，则返回"),a("code",[v._v("true")]),v._v(" ;  返回"),a("code",[v._v("false")]),v._v(" （对于NaN和无穷大参数）。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("f")]),v._v(" - 要测试的 "),a("code",[v._v("float")]),v._v("值")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[a("code",[v._v("true")]),v._v("如果参数是有限浮点值， "),a("code",[v._v("false")]),v._v(" false。")])]),v._v(" "),a("li",[a("p",[v._v("从以下版本开始：")]),v._v(" "),a("p",[v._v("1.8")])])]),v._v(" "),a("h2",{attrs:{id:"isnan-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isnan-2"}},[v._v("#")]),v._v(" isNaN")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public boolean isNaN()\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("如果这个 "),a("code",[v._v("Float")]),v._v("值 "),a("code",[v._v("Float")]),v._v("数字（NaN），则返回  "),a("code",[v._v("true")]),v._v(" ， "),a("code",[v._v("false")]),v._v(" false。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[a("code",[v._v("true")]),v._v("如果该对象表示的值为NaN;  "),a("code",[v._v("false")]),v._v("否则。")])])]),v._v(" "),a("h2",{attrs:{id:"isinfinite-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isinfinite-2"}},[v._v("#")]),v._v(" isInfinite")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public boolean isInfinite()\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回 "),a("code",[v._v("true")]),v._v("如果这个 "),a("code",[v._v("Float")]),v._v("值是无限大的，  "),a("code",[v._v("false")]),v._v(" false。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[a("code",[v._v("true")]),v._v("如果由该对象表示的值是正无穷大或负无穷大;  "),a("code",[v._v("false")]),v._v("否则。")])])]),v._v(" "),a("h2",{attrs:{id:"tostring-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tostring-2"}},[v._v("#")]),v._v(" toString")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public String toString()\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回此"),a("code",[v._v("Float")]),v._v("对象的字符串表示形式。  原始"),a("code",[v._v("float")]),v._v("该对象表示值被转换为"),a("code",[v._v("String")]),v._v("完全一样，如果通过该方法"),a("code",[v._v("toString")]),v._v("一个参数的。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("重写：")]),v._v(" "),a("p",[a("code",[v._v("toString")]),v._v("在类别 "),a("code",[v._v("Object")])])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("这个对象的一个 "),a("code",[v._v("String")]),v._v("表示。")])]),v._v(" "),a("li",[a("p",[v._v("另请参见：")]),v._v(" "),a("p",[a("RouterLink",{attrs:{to:"/01.Java/java/lang/Float.html#toString-float-"}},[a("code",[v._v("toString(float)")])])],1)])]),v._v(" "),a("h2",{attrs:{id:"bytevalue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bytevalue"}},[v._v("#")]),v._v(" byteValue")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public byte byteValue()\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回此值 "),a("code",[v._v("Float")]),v._v("为 "),a("code",[v._v("byte")]),v._v("的基本收缩转换后。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("重写：")]),v._v(" "),a("p",[a("code",[v._v("byteValue")]),v._v("在 "),a("code",[v._v("Number")])])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("该对象所代表的 "),a("code",[v._v("float")]),v._v("值转换为 "),a("code",[v._v("byte")])])]),v._v(" "),a("li",[a("p",[v._v("See The Java™ Language  Specification:")]),v._v(" "),a("p",[v._v("5.1.3缩小原始转换")])])]),v._v(" "),a("h2",{attrs:{id:"shortvalue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shortvalue"}},[v._v("#")]),v._v(" shortValue")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public short shortValue()\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("在 "),a("code",[v._v("short")]),v._v("后，返回 "),a("code",[v._v("Float")]),v._v("作为short的值。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("重写：")]),v._v(" "),a("p",[a("code",[v._v("shortValue")]),v._v("在 "),a("code",[v._v("Number")])])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("该对象代表的 "),a("code",[v._v("float")]),v._v("值转换为 "),a("code",[v._v("short")])])]),v._v(" "),a("li",[a("p",[v._v("从以下版本开始：")]),v._v(" "),a("p",[v._v("JDK1.1")])]),v._v(" "),a("li",[a("p",[v._v("See The Java™ Language  Specification:")]),v._v(" "),a("p",[v._v("5.1.3缩小原始转换")])])]),v._v(" "),a("h2",{attrs:{id:"intvalue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intvalue"}},[v._v("#")]),v._v(" intValue")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public int intValue()\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回此的值 "),a("code",[v._v("Float")]),v._v("作为 "),a("code",[v._v("int")]),v._v("的基本收缩转换之后。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("Specified by:")]),v._v(" "),a("p",[a("code",[v._v("intValue")]),v._v("在类别 "),a("code",[v._v("Number")])])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("该对象代表的 "),a("code",[v._v("float")]),v._v("值转换为 "),a("code",[v._v("int")])])]),v._v(" "),a("li",[a("p",[v._v("See The Java™ Language  Specification:")]),v._v(" "),a("p",[v._v("5.1.3缩小原始转换")])])]),v._v(" "),a("h2",{attrs:{id:"longvalue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#longvalue"}},[v._v("#")]),v._v(" longValue")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public long longValue()\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("这个的返回值 "),a("code",[v._v("Float")]),v._v("为 "),a("code",[v._v("long")]),v._v("的基本收缩转换后。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("Specified by:")]),v._v(" "),a("p",[a("code",[v._v("longValue")]),v._v("在类别 "),a("code",[v._v("Number")])])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("所述 "),a("code",[v._v("float")]),v._v("该对象表示值转换为类型 "),a("code",[v._v("long")])])]),v._v(" "),a("li",[a("p",[v._v("See The Java™ Language  Specification:")]),v._v(" "),a("p",[v._v("5.1.3缩小原始转换")])])]),v._v(" "),a("h2",{attrs:{id:"floatvalue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#floatvalue"}},[v._v("#")]),v._v(" floatValue")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public float floatValue()\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回此 "),a("code",[v._v("Float")]),v._v("对象的 "),a("code",[v._v("float")]),v._v("值。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("Specified by:")]),v._v(" "),a("p",[a("code",[v._v("floatValue")]),v._v("在类别  "),a("code",[v._v("Number")])])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("这个对象 "),a("code",[v._v("float")]),v._v("值")])])]),v._v(" "),a("h2",{attrs:{id:"doublevalue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#doublevalue"}},[v._v("#")]),v._v(" doubleValue")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public double doubleValue()\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回此值 "),a("code",[v._v("Float")]),v._v("为 "),a("code",[v._v("double")]),v._v("一个宽元转换后。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("Specified by:")]),v._v(" "),a("p",[a("code",[v._v("doubleValue")]),v._v("在类别  "),a("code",[v._v("Number")])])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("该对象代表的 "),a("code",[v._v("float")]),v._v("值转换为 "),a("code",[v._v("double")])])]),v._v(" "),a("li",[a("p",[v._v("See The Java™ Language  Specification:")]),v._v(" "),a("p",[v._v("5.1.2扩大原始转换")])])]),v._v(" "),a("h2",{attrs:{id:"hashcode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hashcode"}},[v._v("#")]),v._v(" hashCode")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public int hashCode()\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回此"),a("code",[v._v("Float")]),v._v("对象的哈希码。  结果是由该"),a("code",[v._v("Float")]),v._v("对象表示的基"),a("code",[v._v("float")]),v._v("值的整数位表示，正如由方法"),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Float.html#floatToIntBits-float-"}},[a("code",[v._v("floatToIntBits(float)")])]),v._v("所产生的"),a("code",[v._v("Float")]),v._v("  。")],1),v._v(" "),a("ul",[a("li",[a("p",[v._v("重写：")]),v._v(" "),a("p",[a("code",[v._v("hashCode")]),v._v("在类别 "),a("code",[v._v("Object")])])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("该对象的哈希码值。")])]),v._v(" "),a("li",[a("p",[v._v("另请参见：")]),v._v(" "),a("p",[a("RouterLink",{attrs:{to:"/01.Java/java/lang/Object.html#equals-java.lang.Object-"}},[a("code",[v._v("Object.equals(java.lang.Object)")])]),v._v("  ， "),a("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#identityHashCode-java.lang.Object-"}},[a("code",[v._v("System.identityHashCode(java.lang.Object)")])])],1)])]),v._v(" "),a("h2",{attrs:{id:"hashcode-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hashcode-2"}},[v._v("#")]),v._v(" hashCode")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static int hashCode(float value)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回一个"),a("code",[v._v("float")]),v._v("值的哈希码;  兼容"),a("code",[v._v("Float.hashCode()")]),v._v(" 。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("value")]),v._v(" - 哈希值")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("一个 "),a("code",[v._v("float")]),v._v("值的哈希码值。")])]),v._v(" "),a("li",[a("p",[v._v("从以下版本开始：")]),v._v(" "),a("p",[v._v("1.8")])])]),v._v(" "),a("h2",{attrs:{id:"equals"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#equals"}},[v._v("#")]),v._v(" equals")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public boolean equals(Object obj)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("将此对象与指定对象进行比较。其结果是"),a("code",[v._v("true")]),v._v("当且仅当该参数不是"),a("code",[v._v("null")]),v._v("并且是"),a("code",[v._v("Float")]),v._v("对象，它表示一个"),a("code",[v._v("float")]),v._v("具有相同的值作为"),a("code",[v._v("float")]),v._v("该对象表示。为此，当且仅当方法"),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Float.html#floatToIntBits-float-"}},[a("code",[v._v("floatToIntBits(float)")])]),v._v("在应用于每个值时返回相同的"),a("code",[v._v("int")]),v._v("值时，两个"),a("code",[v._v("float")]),v._v("值被认为是相同的。")],1),v._v(" "),a("p",[v._v("请注意，在大多数情况下，类的两个实例"),a("code",[v._v("Float")]),v._v(" ， "),a("code",[v._v("f1")]),v._v("和"),a("code",[v._v("f2")]),v._v("  ，值"),a("code",[v._v("f1.equals(f2)")]),v._v("是"),a("code",[v._v("true")]),v._v("当且仅当")]),v._v(" "),a("blockquote",[a("p",[a("code",[v._v("f1.floatValue() == f2.floatValue()")])])]),v._v(" "),a("p",[v._v("也有值"),a("code",[v._v("true")]),v._v(" 。 但是，有两个例外：")]),v._v(" "),a("ul",[a("li",[v._v("如果"),a("code",[v._v("f1")]),v._v("和"),a("code",[v._v("f2")]),v._v("均代表"),a("code",[v._v("Float.NaN")]),v._v("  ，则"),a("code",[v._v("equals")]),v._v("方法返回"),a("code",[v._v("true")]),v._v("  ，即使"),a("code",[v._v("Float.NaN==Float.NaN")]),v._v("的值为"),a("code",[v._v("false")]),v._v(" 。")]),v._v(" "),a("li",[v._v("如果"),a("code",[v._v("f1")]),v._v("表示"),a("code",[v._v("+0.0f")]),v._v("  ，而"),a("code",[v._v("f2")]),v._v("表示"),a("code",[v._v("-0.0f")]),v._v(" ，反之亦然，  "),a("code",[v._v("equal")]),v._v("测试的值为"),a("code",[v._v("false")]),v._v("  ，即使"),a("code",[v._v("0.0f==-0.0f")]),v._v("的值为"),a("code",[v._v("true")]),v._v(" 。")])]),v._v(" "),a("p",[v._v("此定义允许哈希表正常运行。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("重写：")]),v._v(" "),a("p",[a("code",[v._v("equals")]),v._v("在类别  "),a("code",[v._v("Object")])])]),v._v(" "),a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("obj")]),v._v(" - 要比较的对象")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[a("code",[v._v("true")]),v._v("如果对象是一样的; "),a("code",[v._v("false")]),v._v("否则。")])]),v._v(" "),a("li",[a("p",[v._v("另请参见：")]),v._v(" "),a("p",[a("RouterLink",{attrs:{to:"/01.Java/java/lang/Float.html#floatToIntBits-float-"}},[a("code",[v._v("floatToIntBits(float)")])])],1)])]),v._v(" "),a("h2",{attrs:{id:"floattointbits"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#floattointbits"}},[v._v("#")]),v._v(" floatToIntBits")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static int floatToIntBits(float value)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("根据IEEE 754浮点“单格式”位布局返回指定浮点值的表示。")]),v._v(" "),a("p",[v._v("位31（由掩码"),a("code",[v._v("0x80000000")]),v._v("选择的位）表示浮点数的符号。  位30-23（由掩码"),a("code",[v._v("0x7f800000")]),v._v("选择的位）表示指数。  位22-0（由掩码"),a("code",[v._v("0x007fffff")]),v._v("选择的位）表示浮点数的有效数（有时称为尾数）。")]),v._v(" "),a("p",[v._v("如果参数为无穷大，结果为"),a("code",[v._v("0x7f800000")]),v._v(" 。")]),v._v(" "),a("p",[v._v("如果参数为负无穷大，则结果为"),a("code",[v._v("0xff800000")]),v._v(" 。")]),v._v(" "),a("p",[v._v("如果参数是NaN，结果是"),a("code",[v._v("0x7fc00000")]),v._v(" 。")]),v._v(" "),a("p",[v._v("在所有情况下，结果是一个整数，当给予"),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Float.html#intBitsToFloat-int-"}},[a("code",[v._v("intBitsToFloat(int)")])]),v._v("方法时，将产生与"),a("code",[v._v("floatToIntBits")]),v._v("的参数相同的浮点值（除了所有NaN值都折叠为单个“规范”NaN值）。")],1),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("value")]),v._v(" - 一个浮点数。")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("表示浮点数的位。")])])]),v._v(" "),a("h2",{attrs:{id:"floattorawintbits"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#floattorawintbits"}},[v._v("#")]),v._v(" floatToRawIntBits")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static int floatToRawIntBits(float value)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("根据IEEE 754浮点“单格式”位布局返回指定浮点值的表示，保留非数字（NaN）值。")]),v._v(" "),a("p",[v._v("位31（由掩码"),a("code",[v._v("0x80000000")]),v._v("选择的位）表示浮点数的符号。  位30-23（由掩码"),a("code",[v._v("0x7f800000")]),v._v("选择的位）表示指数。  位22-0（由掩码"),a("code",[v._v("0x007fffff")]),v._v("选择的位）表示浮点数的有效数（有时称为尾数）。")]),v._v(" "),a("p",[v._v("如果参数为无穷大，则结果为"),a("code",[v._v("0x7f800000")]),v._v(" 。")]),v._v(" "),a("p",[v._v("如果参数为负无穷大，则结果为"),a("code",[v._v("0xff800000")]),v._v(" 。")]),v._v(" "),a("p",[v._v("如果参数是NaN，则结果是表示实际NaN值的整数。  与"),a("code",[v._v("floatToIntBits")]),v._v("方法不同，  "),a("code",[v._v("floatToRawIntBits")]),v._v("不会将编码NaN的所有位模式折叠到单个“规范”NaN值。")]),v._v(" "),a("p",[v._v("在所有情况下，结果是一个整数，当给予"),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Float.html#intBitsToFloat-int-"}},[a("code",[v._v("intBitsToFloat(int)")])]),v._v("方法时，将产生与"),a("code",[v._v("floatToRawIntBits")]),v._v("的参数相同的浮点值。")],1),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("value")]),v._v(" - 一个浮点数。")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("表示浮点数的位。")])]),v._v(" "),a("li",[a("p",[v._v("从以下版本开始：")]),v._v(" "),a("p",[v._v("1.3")])])]),v._v(" "),a("h2",{attrs:{id:"intbitstofloat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intbitstofloat"}},[v._v("#")]),v._v(" intBitsToFloat")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static float intBitsToFloat(int bits)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("返回与给"),a("code",[v._v("float")]),v._v("表示对应的"),a("code",[v._v("float")]),v._v("值。根据IEEE 754浮点“单格式”位布局，该参数被认为是浮点值的表示。")]),v._v(" "),a("p",[v._v("如果参数为"),a("code",[v._v("0x7f800000")]),v._v(" ，则结果为正无穷大。")]),v._v(" "),a("p",[v._v("如果参数为"),a("code",[v._v("0xff800000")]),v._v(" ，结果为负无穷大。")]),v._v(" "),a("p",[v._v("如果参数在上述范围内的任何值"),a("code",[v._v("0x7f800001")]),v._v("通过"),a("code",[v._v("0x7fffffff")]),v._v("  ，或在范围"),a("code",[v._v("0xff800001")]),v._v("通过"),a("code",[v._v("0xffffffff")]),v._v(" ，其结果是NaN。  Java提供的IEEE 754浮点运算不能用不同的位模式区分同一类型的两个NaN值。  NaN的不同值只能通过使用"),a("code",[v._v("Float.floatToRawIntBits")]),v._v("方法进行"),a("code",[v._v("Float.floatToRawIntBits")]),v._v("  。")]),v._v(" "),a("p",[v._v("在所有其他情况下，令"),a("em",[v._v("s")]),v._v(" ， "),a("em",[v._v("e")]),v._v("和"),a("em",[v._v("m")]),v._v("是可以从参数计算的三个值：")]),v._v(" "),a("blockquote",[a("p",[a("code",[v._v("int s = ((bits >> 31) == 0) ? 1 : -1; int e = ((bits >> 23) & 0xff); int m = (e == 0) ? (bits & 0x7fffff) << 1 : (bits & 0x7fffff) | 0x800000;")])])]),v._v(" "),a("p",[v._v("那么浮点结果等于数学表达式"),a("em",[v._v("s")]),v._v(" · "),a("em",[v._v("m")]),v._v(" ·2  "),a("em",[v._v("e")]),v._v(" -150的值 。")]),v._v(" "),a("p",[v._v("请注意，此方法可能无法返回与"),a("code",[v._v("int")]),v._v("参数完全相同的位模式的"),a("code",[v._v("float")]),v._v(" NaN。  IEEE 754区分了两种NaN，安静的NaN和"),a("em",[v._v("信号NaN")]),v._v(" 。  两种NaN之间的区别通常在Java中不可见。  信号NaN的算术运算将它们变成具有不同但通常相似的位模式的安静的NaN。  然而，在某些处理器上，仅仅复制信号NaN也执行该转换。  特别地，复制信令NaN以将其返回到调用方法可以执行该转换。  所以"),a("code",[v._v("intBitsToFloat")]),v._v("可能无法返回一个"),a("code",[v._v("float")]),v._v("具有signaling  NaN的位模式。 因此，对于一些"),a("code",[v._v("int")]),v._v("值，  "),a("code",[v._v("floatToRawIntBits(intBitsToFloat(start))")]),v._v("可能"),a("em",[v._v("不")]),v._v("等于"),a("code",[v._v("start")]),v._v("  。 此外，哪些特定位模式表示信令NaN是平台依赖的;  尽管所有NaN位模式，安静或信令都必须位于上面确定的NaN范围内。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("bits")]),v._v(" - 一个整数。")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[a("code",[v._v("float")]),v._v("具有相同位模式的浮点值。")])])]),v._v(" "),a("h2",{attrs:{id:"compareto"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compareto"}},[v._v("#")]),v._v(" compareTo")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public int compareTo(Float anotherFloat)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("p",[v._v("数字比较两个"),a("code",[v._v("Float")]),v._v("对象。当应用于原始"),a("code",[v._v("float")]),v._v("值时，通过此方法进行比较的方法与Java语言数值比较运算符（ "),a("code",[v._v("<, <=, ==, >=, >")]),v._v(" ）执行的比较有两种"),a("code",[v._v("float")]),v._v(" ：")]),v._v(" "),a("ul",[a("li",[a("code",[v._v("Float.NaN")]),v._v("被认为是等于自己和大于所有其他"),a("code",[v._v("float")]),v._v("值（包括"),a("code",[v._v("Float.POSITIVE_INFINITY")]),v._v("  ）。")]),v._v(" "),a("li",[a("code",[v._v("0.0f")]),v._v("被这种方法认为是大于"),a("code",[v._v("-0.0f")]),v._v(" 。")])]),v._v(" "),a("p",[v._v("这确保了这种方法施加的"),a("code",[v._v("Float")]),v._v("对象的"),a("em",[v._v("自然排序")]),v._v(" "),a("em",[v._v("与equals一致")]),v._v("  。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("Specified by:")]),v._v(" "),a("p",[a("code",[v._v("compareTo")]),v._v("在界面  "),a("code",[v._v("Comparable<Float>")])])]),v._v(" "),a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("anotherFloat")]),v._v(" - 要比较的 "),a("code",[v._v("Float")]),v._v(" 。")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[a("code",[v._v("0")]),v._v("如果"),a("code",[v._v("anotherFloat")]),v._v("在数字上等于这个"),a("code",[v._v("Float")]),v._v("  ;  的值小于"),a("code",[v._v("0")]),v._v("如果这"),a("code",[v._v("Float")]),v._v("在数值上小于"),a("code",[v._v("anotherFloat")]),v._v("  ;  如果"),a("code",[v._v("Float")]),v._v("在数值上大于"),a("code",[v._v("0")]),v._v("则值大于"),a("code",[v._v("anotherFloat")]),v._v("  。")])]),v._v(" "),a("li",[a("p",[v._v("从以下版本开始：")]),v._v(" "),a("p",[v._v("1.2")])]),v._v(" "),a("li",[a("p",[v._v("另请参见：")]),v._v(" "),a("p",[a("RouterLink",{attrs:{to:"/01.Java/java/lang/Comparable.html#compareTo-T-"}},[a("code",[v._v("Comparable.compareTo(Object)")])])],1)])]),v._v(" "),a("h2",{attrs:{id:"compare"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compare"}},[v._v("#")]),v._v(" compare")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static int compare(float f1,\n                          float f2)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br")])]),a("p",[v._v("比较两个指定的"),a("code",[v._v("float")]),v._v("值。返回的整数值的符号与调用返回的整数的符号相同：")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("  new Float(f1).compareTo(new Float(f2)) \n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("f1")]),v._v(" - 第一个 "),a("code",[v._v("float")]),v._v("进行比较。")]),v._v(" "),a("p",[a("code",[v._v("f2")]),v._v(" - 第二个 "),a("code",[v._v("float")]),v._v("进行比较。")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[a("code",[v._v("0")]),v._v("如果"),a("code",[v._v("f1")]),v._v("在数字上等于"),a("code",[v._v("f2")]),v._v(" ;  的值小于"),a("code",[v._v("0")]),v._v("如果"),a("code",[v._v("f1")]),v._v("在数值上小于"),a("code",[v._v("f2")]),v._v(" ;  如果"),a("code",[v._v("f1")]),v._v("在数值上大于"),a("code",[v._v("0")]),v._v("则值大于"),a("code",[v._v("f2")]),v._v(" 。")])]),v._v(" "),a("li",[a("p",[v._v("从以下版本开始：")]),v._v(" "),a("p",[v._v("1.4")])])]),v._v(" "),a("h2",{attrs:{id:"sum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sum"}},[v._v("#")]),v._v(" sum")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static float sum(float a,\n                        float b)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br")])]),a("p",[v._v("根据+运算符将两个 "),a("code",[v._v("float")]),v._v("值一起添加。")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("a")]),v._v(" - 第一个操作数")]),v._v(" "),a("p",[a("code",[v._v("b")]),v._v(" - 第二个操作数")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[a("code",[v._v("a")]),v._v("和 "),a("code",[v._v("b")]),v._v("的总和")])]),v._v(" "),a("li",[a("p",[v._v("从以下版本开始：")]),v._v(" "),a("p",[v._v("1.8")])]),v._v(" "),a("li",[a("p",[v._v("另请参见：")]),v._v(" "),a("p",[a("RouterLink",{attrs:{to:"/01.Java/java/util/function/BinaryOperator.html"}},[a("code",[v._v("BinaryOperator")])])],1)]),v._v(" "),a("li",[a("p",[v._v("See The Java™ Language  Specification:")]),v._v(" "),a("p",[v._v("4.2.4浮点运算")])])]),v._v(" "),a("h2",{attrs:{id:"max"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#max"}},[v._v("#")]),v._v(" max")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static float max(float a,\n                        float b)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br")])]),a("p",[v._v("返回两个 "),a("code",[v._v("float")]),v._v("的较大值，就像调用 "),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Math.html#max-float-float-"}},[a("code",[v._v("Math.max")]),v._v("一样")]),v._v(" 。")],1),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("a")]),v._v(" - 第一个操作数")]),v._v(" "),a("p",[a("code",[v._v("b")]),v._v(" - 第二个操作数")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[a("code",[v._v("a")]),v._v("和 "),a("code",[v._v("b")]),v._v("的较大 "),a("code",[v._v("b")])])]),v._v(" "),a("li",[a("p",[v._v("从以下版本开始：")]),v._v(" "),a("p",[v._v("1.8")])]),v._v(" "),a("li",[a("p",[v._v("另请参见：")]),v._v(" "),a("p",[a("RouterLink",{attrs:{to:"/01.Java/java/util/function/BinaryOperator.html"}},[a("code",[v._v("BinaryOperator")])])],1)])]),v._v(" "),a("h2",{attrs:{id:"min"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#min"}},[v._v("#")]),v._v(" min")]),v._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[v._v("public static float min(float a,\n                        float b)\n")])]),v._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[v._v("1")]),a("br"),a("span",{staticClass:"line-number"},[v._v("2")]),a("br")])]),a("p",[v._v("返回两个 "),a("code",[v._v("float")]),v._v("的较小值，就像调用 "),a("RouterLink",{attrs:{to:"/01.Java/java/lang/Math.html#min-float-float-"}},[a("code",[v._v("Math.min")]),v._v("一样")]),v._v(" 。")],1),v._v(" "),a("ul",[a("li",[a("p",[v._v("参数")]),v._v(" "),a("p",[a("code",[v._v("a")]),v._v(" - 第一个操作数")]),v._v(" "),a("p",[a("code",[v._v("b")]),v._v(" - 第二个操作数")])]),v._v(" "),a("li",[a("p",[v._v("结果")]),v._v(" "),a("p",[v._v("较小的 "),a("code",[v._v("a")]),v._v("和 "),a("code",[v._v("b")])])]),v._v(" "),a("li",[a("p",[v._v("从以下版本开始：")]),v._v(" "),a("p",[v._v("1.8")])]),v._v(" "),a("li",[a("p",[v._v("另请参见：")]),v._v(" "),a("p",[a("RouterLink",{attrs:{to:"/01.Java/java/util/function/BinaryOperator.html"}},[a("code",[v._v("BinaryOperator")])])],1)])])])}),[],!1,null,null,null);_.default=t.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{652:function(t,a,s){"use strict";s.r(a);var n=s(33),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"构造方法详细信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构造方法详细信息"}},[t._v("#")]),t._v(" 构造方法详细信息")]),t._v(" "),s("h2",{attrs:{id:"integer-int-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integer-int-value"}},[t._v("#")]),t._v(" Integer(int value)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public Integer(int value)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("构造新分配的 "),s("code",[t._v("Integer")]),t._v("对象，该对象表示指定的 "),s("code",[t._v("int")]),t._v("值。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("value")]),t._v(" - 由 "),s("code",[t._v("Integer")]),t._v("对象表示的值。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h2",{attrs:{id:"integer-string-s"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integer-string-s"}},[t._v("#")]),t._v(" Integer(String s)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public Integer(String s)\n        throws NumberFormatException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("构造一个新分配"),s("code",[t._v("Integer")]),t._v("对象，表示"),s("code",[t._v("int")]),t._v("由指示值"),s("code",[t._v("String")]),t._v("参数。  字符串将转换为"),s("code",[t._v("int")]),t._v("值，正好与基数为"),s("code",[t._v("parseInt")]),t._v("方法一样。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("s")]),t._v(" -的 "),s("code",[t._v("String")]),t._v("被转换为 "),s("code",[t._v("Integer")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("NumberFormatException")]),t._v("  - 如果 "),s("code",[t._v("String")]),t._v("不包含可解析整数。")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#parseInt-java.lang.String-int-"}},[s("code",[t._v("parseInt(java.lang.String, int)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h1",{attrs:{id:"方法详细信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法详细信息"}},[t._v("#")]),t._v(" 方法详细信息")]),t._v(" "),s("h2",{attrs:{id:"进制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进制"}},[t._v("#")]),t._v(" 进制")]),t._v(" "),s("h3",{attrs:{id:"int转string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#int转string"}},[t._v("#")]),t._v(" int转String")]),t._v(" "),s("h4",{attrs:{id:"int转换为多少进制的字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#int转换为多少进制的字符串"}},[t._v("#")]),t._v(" int转换为多少进制的字符串")]),t._v(" "),s("h5",{attrs:{id:"tostring-int-i-int-radix"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tostring-int-i-int-radix"}},[t._v("#")]),t._v(" toString(int i,int radix)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static String toString(int i,int radix)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回由第二个参数指定的基数中的第一个参数的字符串表示形式。")]),t._v(" "),s("p",[t._v("如果基数小于"),s("code",[t._v("Character.MIN_RADIX")]),t._v("或大于"),s("code",[t._v("Character.MAX_RADIX")]),t._v("  ，则使用基数"),s("code",[t._v("10")]),t._v(" 。")]),t._v(" "),s("p",[t._v("如果第一个参数为负，结果的第一个元素是ASCII减号"),s("code",[t._v("'-'")]),t._v(" （ "),s("code",[t._v("'\\u002D'")]),t._v("  ）。 如果第一个参数不为负，则结果中不会出现符号字符。")]),t._v(" "),s("p",[t._v("结果的剩余字符表示第一个参数的大小。 如果幅度为零，则由单个零字符"),s("code",[t._v("'0'")]),t._v(" （  "),s("code",[t._v("'\\u0030'")]),t._v(" ）表示; 否则，幅度的表示的第一个字符将不是零字符。  以下ASCII字符用作数字：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("0123456789abcdefghijklmnopqrstuvwxyz")])])]),t._v(" "),s("p",[t._v("这些是"),s("code",[t._v("'\\u0030'")]),t._v("至"),s("code",[t._v("'\\u0039'")]),t._v("和"),s("code",[t._v("'\\u0061'")]),t._v("至"),s("code",[t._v("'\\u007A'")]),t._v("  。如果"),s("code",[t._v("radix")]),t._v("是N  ，则这些字符的前N个按照所示的顺序用作小数位数N。因此，十六进制（小数16）的数字是"),s("code",[t._v("0123456789abcdef")]),t._v(" 。如果需要大写字母，可以对结果调用"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/String.html#toUpperCase--"}},[s("code",[t._v("String.toUpperCase()")])]),t._v("方法：")],1),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Integer.toString(n, 16).toUpperCase()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要转换为字符串的整数。")]),t._v(" "),s("p",[s("code",[t._v("radix")]),t._v(" - 在字符串表示中使用的基数。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("指定基数中的参数的字符串表示形式。")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#MAX_RADIX"}},[s("code",[t._v("Character.MAX_RADIX")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#MIN_RADIX"}},[s("code",[t._v("Character.MIN_RADIX")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sxt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntegerDemo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns a string representation of the specified integer with radix 10")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" retval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Value = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" retval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      \n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns a string representation of the specified integer with radix 16")]),t._v("\n     retval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Value = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" retval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      \n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns a string representation of the specified integer with radix 8")]),t._v("\n     retval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Value = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" retval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br")])]),s("h4",{attrs:{id:"无符号整数转换为多少进制的字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无符号整数转换为多少进制的字符串"}},[t._v("#")]),t._v(" 无符号整数转换为多少进制的字符串")]),t._v(" "),s("h5",{attrs:{id:"tounsignedstring-int-i-int-radix"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tounsignedstring-int-i-int-radix"}},[t._v("#")]),t._v(" toUnsignedString(int i,int radix)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static String toUnsignedString(int i,int radix)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("以第二个参数指定的基数中的无符号整数值返回第一个参数的字符串表示形式。")]),t._v(" "),s("p",[t._v("如果基数小于"),s("code",[t._v("Character.MIN_RADIX")]),t._v("或大于"),s("code",[t._v("Character.MAX_RADIX")]),t._v("  ，则使用基数"),s("code",[t._v("10")]),t._v(" 。")]),t._v(" "),s("p",[t._v("请注意，由于第一个参数被视为无符号值，因此不会打印前导符号。")]),t._v(" "),s("p",[t._v("如果幅度为零，则由单个零字符"),s("code",[t._v("'0'")]),t._v(" （ "),s("code",[t._v("'\\u0030'")]),t._v(" ）表示;  否则，幅度的表示的第一个字符将不是零字符。")]),t._v(" "),s("p",[t._v("基数的行为和用作数字的字符与"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#toString-int-int-"}},[s("code",[t._v("toString")])]),t._v("相同。")],1),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要转换为无符号字符串的整数。")]),t._v(" "),s("p",[s("code",[t._v("radix")]),t._v(" - 在字符串表示中使用的基数。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("指定基数中的参数的无符号字符串表示形式。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.8")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#toString-int-int-"}},[s("code",[t._v("toString(int, int)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h4",{attrs:{id:"int-转换为16进制的字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#int-转换为16进制的字符串"}},[t._v("#")]),t._v(" int 转换为16进制的字符串")]),t._v(" "),s("h5",{attrs:{id:"tohexstring-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tohexstring-int-i"}},[t._v("#")]),t._v(" toHexString(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static String toHexString(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回整数参数的字符串表示形式，作为16位中的无符号整数。")]),t._v(" "),s("p",[t._v("如果参数为负，则无符号整数值为参数加2 32 ; 否则，它等于论证。  该值转换为十六进制（基数16）的ASCII数字字符串，没有额外的前导"),s("code",[t._v("0")]),t._v(" s。")]),t._v(" "),s("p",[t._v("可以通过调用"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#parseUnsignedInt-java.lang.String-int-"}},[s("code",[t._v("Integer.parseUnsignedInt(s, 16)")])]),t._v("从返回的字符串"),s("code",[t._v("s")]),t._v("中恢复参数的值。")],1),t._v(" "),s("p",[t._v("如果无符号幅度为零，则由单个零字符"),s("code",[t._v("'0'")]),t._v(" （ "),s("code",[t._v("'\\u0030'")]),t._v(" ）表示;  否则，无符号大小的表示的第一个字符将不是零字符。 以下字符用作十六进制数字：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("0123456789abcdef")])])]),t._v(" "),s("p",[t._v("这些人物"),s("code",[t._v("'\\u0030'")]),t._v("通过"),s("code",[t._v("'\\u0039'")]),t._v("和"),s("code",[t._v("'\\u0061'")]),t._v("通过"),s("code",[t._v("'\\u0066'")]),t._v("  。如果需要大写字母，可以对结果调用"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/String.html#toUpperCase--"}},[s("code",[t._v("String.toUpperCase()")])]),t._v("方法：")],1),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Integer.toHexString(n).toUpperCase()")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要转换为字符串的整数。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("由参数以十六进制表示的无符号整数值的字符串表示（16位）。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("JDK1.0.2")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#parseUnsignedInt-java.lang.String-int-"}},[s("code",[t._v("parseUnsignedInt(String, int)")])]),t._v(" ， "),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#toUnsignedString-int-int-"}},[s("code",[t._v("toUnsignedString(int, int)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("cn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sxt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IntegerDemo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n   "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n \n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("170")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Number = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     \n     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* returns the string representation of the unsigned integer value\n     represented by the argument in hexadecimal (base 16) */")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hex = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toHexString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("让我们来编译和运行上面的程序，这将产生以下结果：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Number = ``170``Hex = aa\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"无符号整数-转换为8进制的字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无符号整数-转换为8进制的字符串"}},[t._v("#")]),t._v(" 无符号整数 转换为8进制的字符串")]),t._v(" "),s("h5",{attrs:{id:"tooctalstring-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tooctalstring-int-i"}},[t._v("#")]),t._v(" toOctalString(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static String toOctalString(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("在基数8中返回整数参数的字符串表示形式为无符号整数。")]),t._v(" "),s("p",[t._v("如果参数为负，则无符号整数值为参数加2 32 ; 否则，它等于论证。  该值转换为八进制（基数8）中的ASCII数字字符串，没有额外的前导"),s("code",[t._v("0")]),t._v(" s。")]),t._v(" "),s("p",[t._v("可以通过调用"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#parseUnsignedInt-java.lang.String-int-"}},[s("code",[t._v("Integer.parseUnsignedInt(s, 8)")])]),t._v("从返回的字符串"),s("code",[t._v("s")]),t._v("中恢复参数的值。")],1),t._v(" "),s("p",[t._v("如果无符号大小为零，则由单个零字符"),s("code",[t._v("'0'")]),t._v(" （ "),s("code",[t._v("'\\u0030'")]),t._v(" ）表示;  否则，无符号大小的表示的第一个字符将不是零字符。 以下字符用作八进制数字：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("01234567")])])]),t._v(" "),s("p",[t._v("这些是"),s("code",[t._v("'\\u0030'")]),t._v("至"),s("code",[t._v("'\\u0037'")]),t._v(" 。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要转换为字符串的整数。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("由参数以八进制表示的无符号整数值的字符串表示（基数8）。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("JDK1.0.2")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#parseUnsignedInt-java.lang.String-int-"}},[s("code",[t._v("parseUnsignedInt(String, int)")])]),t._v(" ， "),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#toUnsignedString-int-int-"}},[s("code",[t._v("toUnsignedString(int, int)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h4",{attrs:{id:"无符号整数-转换为2进制的字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无符号整数-转换为2进制的字符串"}},[t._v("#")]),t._v(" 无符号整数 转换为2进制的字符串")]),t._v(" "),s("h5",{attrs:{id:"tobinarystring-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tobinarystring-int-i"}},[t._v("#")]),t._v(" toBinaryString(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static String toBinaryString(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("在基数2中返回整数参数的字符串表示形式为无符号整数。")]),t._v(" "),s("p",[t._v("如果参数为负，则无符号整数值为参数加2 32 ; 否则就等于论证。  该值转换为二进制（基数2）的ASCII数字字符串，没有额外的前导"),s("code",[t._v("0")]),t._v(" s。")]),t._v(" "),s("p",[t._v("可以通过调用"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#parseUnsignedInt-java.lang.String-int-"}},[s("code",[t._v("Integer.parseUnsignedInt(s, 2)")])]),t._v("从返回的字符串"),s("code",[t._v("s")]),t._v("中恢复参数的值。")],1),t._v(" "),s("p",[t._v("如果无符号幅度为零，则由单个零字符"),s("code",[t._v("'0'")]),t._v(" （ "),s("code",[t._v("'\\u0030'")]),t._v(" ）表示;  否则，无符号大小的表示的第一个字符将不是零字符。 字符"),s("code",[t._v("'0'")]),t._v(" （  "),s("code",[t._v("'\\u0030'")]),t._v(" ）和"),s("code",[t._v("'1'")]),t._v(" （ "),s("code",[t._v("'\\u0031'")]),t._v("  ）用作二进制数字。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要转换为字符串的整数。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("由二进制（基数2）中的参数表示的无符号整数值的字符串表示形式。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("JDK1.0.2")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#parseUnsignedInt-java.lang.String-int-"}},[s("code",[t._v("parseUnsignedInt(String, int)")])]),t._v(" ， "),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#toUnsignedString-int-int-"}},[s("code",[t._v("toUnsignedString(int, int)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h4",{attrs:{id:"无符号整数-转换为10进制的字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无符号整数-转换为10进制的字符串"}},[t._v("#")]),t._v(" 无符号整数 转换为10进制的字符串")]),t._v(" "),s("h5",{attrs:{id:"tounsignedstring-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tounsignedstring-int-i"}},[t._v("#")]),t._v(" toUnsignedString(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static String toUnsignedString(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("将参数的字符串表示形式返回为无符号十进制值。  参数被转换为无符号十进制表示形式，并作为字符串返回，就像参数和小数10作为"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#toUnsignedString-int-int-"}},[s("code",[t._v("toUnsignedString(int, int)")])]),t._v("方法的参数一样。")],1),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要转换为无符号字符串的整数。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("参数的无符号字符串表示形式。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.8")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#toUnsignedString-int-int-"}},[s("code",[t._v("toUnsignedString(int, int)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"string转int"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string转int"}},[t._v("#")]),t._v(" String转int")]),t._v(" "),s("h4",{attrs:{id:"字符串整数转换为多少进制的int"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串整数转换为多少进制的int"}},[t._v("#")]),t._v(" 字符串整数转换为多少进制的int")]),t._v(" "),s("h5",{attrs:{id:"parseint-string-s-int-radix"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parseint-string-s-int-radix"}},[t._v("#")]),t._v(" parseInt(String s,int radix)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int parseInt(String s,int radix)throws NumberFormatException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("将字符串参数解析为第二个参数指定的基数中的有符号整数。字符串中的字符必须全部是指定基数的数字（由"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#digit-char-int-"}},[s("code",[t._v("Character.digit(char, int)")])]),t._v("返回非负值确定），除了第一个字符可能是ASCII减号"),s("code",[t._v("'-'")]),t._v(" （  "),s("code",[t._v("'\\u002D'")]),t._v(" ）以指示负值或ASCII加号"),s("code",[t._v("'+'")]),t._v(" （ "),s("code",[t._v("'\\u002B'")]),t._v("  ）以表示正值。返回所得到的整数值。")],1),t._v(" "),s("p",[t._v("如果发生以下任何一种情况，则抛出类型"),s("code",[t._v("NumberFormatException")]),t._v("的异常：")]),t._v(" "),s("ul",[s("li",[t._v("第一个参数是"),s("code",[t._v("null")]),t._v("或是长度为零的字符串。")]),t._v(" "),s("li",[t._v("基数小于"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#MIN_RADIX"}},[s("code",[t._v("Character.MIN_RADIX")])]),t._v("或大于"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#MAX_RADIX"}},[s("code",[t._v("Character.MAX_RADIX")])]),t._v("  。")],1),t._v(" "),s("li",[t._v("字符串的任何字符不是指定基数的数字，除了第一个字符可能是减号"),s("code",[t._v("'-'")]),t._v(" （ "),s("code",[t._v("'\\u002D'")]),t._v("  ）或加号"),s("code",[t._v("'+'")]),t._v(" （ "),s("code",[t._v("'\\u002B'")]),t._v(" ），前提是字符串长于长度1。")]),t._v(" "),s("li",[t._v("由字符串表示的值不是"),s("code",[t._v("int")]),t._v("类型的值。")])]),t._v(" "),s("p",[t._v("例子：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v('parseInt("0", 10) returns 0 parseInt("473", 10) returns 473 parseInt("+42", 10) returns 42 parseInt("-0", 10) returns 0 parseInt("-FF", 16) returns -255 parseInt("1100110", 2) returns 102 parseInt("2147483647", 10) returns 2147483647 parseInt("-2147483648", 10) returns -2147483648 parseInt("2147483648", 10) throws a NumberFormatException parseInt("99", 8) throws a NumberFormatException parseInt("Kona", 10) throws a NumberFormatException parseInt("Kona", 27) returns 411787')])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("s")]),t._v(" -所述 "),s("code",[t._v("String")]),t._v("包含整数表示被解析")]),t._v(" "),s("p",[s("code",[t._v("radix")]),t._v(" - 解析时使用的基数 "),s("code",[t._v("s")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("由指定基数中的字符串参数表示的整数。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("NumberFormatException")]),t._v("  - 如果 "),s("code",[t._v("String")]),t._v("不包含可解析的 "),s("code",[t._v("int")]),t._v(" 。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"valueof-string-s-int-radix"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#valueof-string-s-int-radix"}},[t._v("#")]),t._v(" valueOf(String s,int radix)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static Integer valueOf(String s,int radix)throws NumberFormatException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回一个"),s("code",[t._v("Integer")]),t._v("对象，保存从指定的String  "),s("code",[t._v("String")]),t._v("的值，并用第二个参数给出的基数进行解析。第一个参数被解释为在第二个参数指定的基数中表示一个有符号整数，就好像参数被赋予了"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#parseInt-java.lang.String-int-"}},[s("code",[t._v("parseInt(java.lang.String, int)")])]),t._v("方法一样。结果是一个"),s("code",[t._v("Integer")]),t._v("对象，表示由字符串指定的整数值。")],1),t._v(" "),s("p",[t._v("换句话说，该方法返回一个"),s("code",[t._v("Integer")]),t._v("对象的值等于：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("new Integer(Integer.parseInt(s, radix))")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("s")]),t._v(" - 要解析的字符串。")]),t._v(" "),s("p",[s("code",[t._v("radix")]),t._v(" - 用于解释的基数 "),s("code",[t._v("s")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("一个保存由指定基数中的字符串参数表示的值的 "),s("code",[t._v("Integer")]),t._v("对象。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("NumberFormatException")]),t._v("  - 如果 "),s("code",[t._v("String")]),t._v("不包含可解析的 "),s("code",[t._v("int")]),t._v(" 。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h4",{attrs:{id:"字符串整数转换为10进制的int"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串整数转换为10进制的int"}},[t._v("#")]),t._v(" 字符串整数转换为10进制的int")]),t._v(" "),s("h5",{attrs:{id:"parseint-string-s"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parseint-string-s"}},[t._v("#")]),t._v(" parseInt(String s)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int parseInt(String s)throws NumberFormatException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("将字符串参数解析为带符号的十进制整数。  字符串中的字符都必须是十进制数字，除了第一个字符可能是ASCII减号"),s("code",[t._v("'-'")]),t._v(" （ "),s("code",[t._v("'\\u002D'")]),t._v("  ）以指示负值或ASCII加号"),s("code",[t._v("'+'")]),t._v(" （ "),s("code",[t._v("'\\u002B'")]),t._v(" ）以指示正值。  返回所得到的整数值，就像参数和小数10被赋予"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#parseInt-java.lang.String-int-"}},[s("code",[t._v("parseInt(java.lang.String, int)")])]),t._v("方法的参数一样。")],1),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("s")]),t._v(" - 一个 "),s("code",[t._v("String")]),t._v("包含要解析的 "),s("code",[t._v("int")]),t._v("表示")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("由参数以十进制表示的整数值。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("NumberFormatException")]),t._v("  - 如果字符串不包含可解析整数。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h5",{attrs:{id:"valueof-string-s"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#valueof-string-s"}},[t._v("#")]),t._v(" valueOf(String s)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static Integer valueOf(String s)throws NumberFormatException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回一个"),s("code",[t._v("Integer")]),t._v("物体保持在指定的值"),s("code",[t._v("String")]),t._v("  。该参数被解释为表示一个有符号的十进制整数，就像参数给予"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#parseInt-java.lang.String-"}},[s("code",[t._v("parseInt(java.lang.String)")])]),t._v("方法一样。结果是一个"),s("code",[t._v("Integer")]),t._v("对象，表示由字符串指定的整数值。")],1),t._v(" "),s("p",[t._v("换句话说，该方法返回一个"),s("code",[t._v("Integer")]),t._v("对象的值等于：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("new Integer(Integer.parseInt(s))")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("s")]),t._v(" - 要解析的字符串。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("一个保存由string参数表示的值的 "),s("code",[t._v("Integer")]),t._v("对象。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("NumberFormatException")]),t._v("  - 如果字符串不能被解析为整数。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h4",{attrs:{id:"无符号字符串整数转换为多少进制的int"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无符号字符串整数转换为多少进制的int"}},[t._v("#")]),t._v(" 无符号字符串整数转换为多少进制的int")]),t._v(" "),s("h5",{attrs:{id:"parseunsignedint-string-s-int-radix"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parseunsignedint-string-s-int-radix"}},[t._v("#")]),t._v(" parseUnsignedInt(String s,int radix)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int parseUnsignedInt(String s,int radix)throws NumberFormatException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("将字符串参数解析为第二个参数指定的基数中的无符号整数。无符号整数将通常与负数相关联的值映射到大于"),s("code",[t._v("MAX_VALUE")]),t._v("正数。字符串中的字符必须是指定基数的数字（如通过确定是否"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#digit-char-int-"}},[s("code",[t._v("Character.digit(char, int)")])]),t._v("返回一个非负的值），所不同的是第一个字符可以是ASCII加符号"),s("code",[t._v("'+'")]),t._v(" （  "),s("code",[t._v("'\\u002B'")]),t._v(" ）。返回所得到的整数值。")],1),t._v(" "),s("p",[t._v("类型的异常"),s("code",[t._v("NumberFormatException")]),t._v("如果发生下列情况时抛出：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("第一个参数是"),s("code",[t._v("null")]),t._v("或是长度为零的字符串。")])]),t._v(" "),s("li",[s("p",[t._v("基数小于"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#MIN_RADIX"}},[s("code",[t._v("Character.MIN_RADIX")])]),t._v("或大于"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#MAX_RADIX"}},[s("code",[t._v("Character.MAX_RADIX")])]),t._v("  。")],1)]),t._v(" "),s("li",[s("p",[t._v("字符串的任何字符不是指定基数的数字，除了第一个字符可能是加号"),s("code",[t._v("'+'")]),t._v(" （ "),s("code",[t._v("'\\u002B'")]),t._v("  ），前提是该字符串长于长度1。")])]),t._v(" "),s("li",[s("p",[t._v("由字符串表示的值大于最大的无符号"),s("code",[t._v("int")]),t._v(" 32 -1。")])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("s")]),t._v(" -所述 "),s("code",[t._v("String")]),t._v("含有无符号整数表示被解析")]),t._v(" "),s("p",[s("code",[t._v("radix")]),t._v(" - 解析时使用的基数 "),s("code",[t._v("s")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("由指定基数中的字符串参数表示的整数。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("NumberFormatException")]),t._v("  - 如果 "),s("code",[t._v("String")]),t._v("不包含可解析的 "),s("code",[t._v("int")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.8")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h4",{attrs:{id:"无符号字符串整数转换为10进制的int"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无符号字符串整数转换为10进制的int"}},[t._v("#")]),t._v(" 无符号字符串整数转换为10进制的int")]),t._v(" "),s("h5",{attrs:{id:"parseunsignedint-string-s"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#parseunsignedint-string-s"}},[t._v("#")]),t._v(" parseUnsignedInt(String s)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int parseUnsignedInt(String s)throws NumberFormatException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("将字符串参数解析为无符号十进制整数。  字符串中的字符必须都是十进制数字，除了第一个字符可能是ASCII加号"),s("code",[t._v("'+'")]),t._v(" （ "),s("code",[t._v("'\\u002B'")]),t._v("  ）。 返回所得到的整数值，就像参数和小数10被赋予"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#parseUnsignedInt-java.lang.String-int-"}},[s("code",[t._v("parseUnsignedInt(java.lang.String, int)")])]),t._v("方法的参数一样。")],1),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("s")]),t._v(" - a "),s("code",[t._v("String")]),t._v(" ， "),s("code",[t._v("int")]),t._v("包含要解析的无符号  "),s("code",[t._v("int")]),t._v("表示")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("由参数以十进制表示的无符号整数值。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("NumberFormatException")]),t._v("  - 如果字符串不包含可解析的无符号整数。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.8")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"二进制后0的个数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二进制后0的个数"}},[t._v("#")]),t._v(" 二进制后0的个数")]),t._v(" "),s("h4",{attrs:{id:"numberofleadingzeros-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#numberofleadingzeros-int-i"}},[t._v("#")]),t._v(" numberOfLeadingZeros(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int numberOfLeadingZeros(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("给定一个int类型数据，返回这个数据的二进制串中从最左边算起连续的“0”的总数量。因为int类型的数据长度为32所以高位不足的地方会以“0”填充。")])]),t._v(" "),s("p",[t._v("返回的最高阶的（“最左边的”）中所指定的二进制补码表示的一个位前述零个比特的数量"),s("code",[t._v("int")]),t._v("值。如果指定的值在其二进制补码表示中没有1位，换句话说如果它等于零则返回32。")]),t._v(" "),s("p",[t._v("请注意，该方法与对数基数2密切相关。对于所有正值"),s("code",[t._v("int")]),t._v("值x：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("floor（log 2 （x））= "),s("code",[t._v("31 - numberOfLeadingZeros(x)")])])]),t._v(" "),s("li",[s("p",[t._v("ceil（log 2 （x））= "),s("code",[t._v("32 - numberOfLeadingZeros(x - 1)")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要计算前导零数的值")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("的最高阶的（“最左边的”）前面的零位在指定的二进制补码表示的一个比特的数目 "),s("code",[t._v("int")]),t._v("值，或32如果该值等于零。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.5")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  的二进制表示为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  最左边开始数起连续的0的个数为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numberOfLeadingZeros")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  的二进制表示为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  最左边开始数起连续的0的个数为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numberOfLeadingZeros")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  的二进制表示为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  最左边开始数起连续的0的个数为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numberOfLeadingZeros")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("h4",{attrs:{id:"numberoftrailingzeros-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#numberoftrailingzeros-int-i"}},[t._v("#")]),t._v(" numberOfTrailingZeros(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int numberOfTrailingZeros(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("给定一个int类型数据，返回这个数据的二进制串中从最右边算起连续的“0”的总数量。因为int类型的数据长度为32所以高位不足的地方会以“0”填充。")])]),t._v(" "),s("p",[t._v("返回零位以下最低阶（“最右边的”）的数量在指定的二进制补码表示的一个位"),s("code",[t._v("int")]),t._v("值。  如果指定的值在其二进制补码表示中没有1位，换句话说如果它等于零则返回32。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要计算 "),s("code",[t._v("i")]),t._v("零数的值")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("以下最低阶（“最右边的”）的零个比特的数量的一比特在指定的二进制补码表示 "),s("code",[t._v("int")]),t._v("值，或32如果该值等于零。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.5")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  的二进制表示为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  最右边开始数起连续的0的个数为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numberOfTrailingZeros")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  的二进制表示为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  最右边开始数起连续的0的个数为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numberOfTrailingZeros")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  的二进制表示为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  最右边开始数起连续的0的个数为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("numberOfTrailingZeros")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("h3",{attrs:{id:"二进制后1的个数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二进制后1的个数"}},[t._v("#")]),t._v(" 二进制后1的个数")]),t._v(" "),s("h4",{attrs:{id:"bitcount-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bitcount-int-i"}},[t._v("#")]),t._v(" bitCount(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int bitCount(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("给定一个int类型数据，返回这个数据的二进制串中“1”的总数量")])]),t._v(" "),s("p",[t._v("返回指定的int值的二进制补码二进制表示中的"),s("code",[t._v("int")]),t._v("数。  此功能有时称为"),s("em",[t._v("人口数量")]),t._v(" 。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要对其位进行计数的值")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("指定的int值的二进制补码二进制表示中的 "),s("code",[t._v("int")]),t._v("数。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.5")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  的二进制表示为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  1的个数为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bitCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  的二进制表示为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  1的个数为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bitCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  的二进制表示为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  1的个数为："')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bitCount")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("z"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("h3",{attrs:{id:"移位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#移位"}},[t._v("#")]),t._v(" 移位")]),t._v(" "),s("h4",{attrs:{id:"rotateleft-int-i-int-distance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rotateleft-int-i-int-distance"}},[t._v("#")]),t._v(" rotateLeft(int i,int distance)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int rotateLeft(int i,int distance)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("方法返回通过旋转指定int i值左移位的指定数的二进制补码表示法得到的值。 (位移出左侧或高阶，侧重新输入在右边，或低位)。")])]),t._v(" "),s("p",[t._v("返回通过将指定的int值的二进制补码二进制表示旋转指定位数"),s("code",[t._v("int")]),t._v("值。（左侧移位的位或右侧的高位侧重新输入，或低位）。")]),t._v(" "),s("p",[t._v("请注意，具有负距离的左旋转相当于右旋： "),s("code",[t._v("rotateLeft(val, -distance) == rotateRight(val, distance)")]),t._v(" 。  还要注意，32的任意倍数的旋转是无操作的，所以除旋转距离的最后五位之外，除了距离为负值外，也可以忽略旋转距离的最后5位：  "),s("code",[t._v("rotateLeft(val, distance) == rotateLeft(val, distance & 0x1F)")]),t._v("  。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 其位要向左旋转的值")]),t._v(" "),s("p",[s("code",[t._v("distance")]),t._v(" - 向左旋转的位位数")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("通过将指定的int值的二进制补码二进制表示旋转指定的位数 "),s("code",[t._v("int")]),t._v("值。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.5")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rotateLeft")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"rotateright-int-i-int-distance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rotateright-int-i-int-distance"}},[t._v("#")]),t._v(" rotateRight(int i,int distance)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int rotateRight(int i,int distance)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("方法一向右位的指定的数回旋转指定int值的二进制补码表示形式而得到的值。 (移出的位的右边，或低位，再输入侧上的左侧，或高次。)")])]),t._v(" "),s("p",[t._v("返回通过旋转指定的二的补码的二进制表示而得到的值"),s("code",[t._v("int")]),t._v("右移位的指定数值。（右侧移动的位或左侧的低位侧重新输入，或高位）。")]),t._v(" "),s("p",[t._v("请注意，具有负距离的右旋转相当于左旋： "),s("code",[t._v("rotateRight(val, -distance) == rotateLeft(val, distance)")]),t._v(" 。  还要注意，32的任意倍数的旋转是无操作的，因此除旋转距离的最后五位之外，除了距离为负值外，也可以忽略旋转距离的最后5位：  "),s("code",[t._v("rotateRight(val, distance) == rotateRight(val, distance & 0x1F)")]),t._v("  。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 其位要向右旋转的值")]),t._v(" "),s("p",[s("code",[t._v("distance")]),t._v(" - 要向右旋转的位位数")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("通过将指定的int值的二进制补码二进制表示旋转指定的位数 "),s("code",[t._v("int")]),t._v("值。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.5")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        val "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rotateRight")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("val"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h3",{attrs:{id:"reverse-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reverse-int-i"}},[t._v("#")]),t._v(" reverse(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int reverse(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("用于返回通过反转给定参数的二进制2的补码表示形式的位顺序生成的值。")])]),t._v(" "),s("p",[t._v("返回由指定的二进制补码表示反转位的顺序而获得的值 "),s("code",[t._v("int")]),t._v("值。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要反转的值")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("通过在指定的 "),s("code",[t._v("int")]),t._v("值中反转位的顺序 "),s("code",[t._v("int")]),t._v("值。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.5")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Java程序演示示例 ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//类的reverse（int value）方法的说明")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReverseOfIntegerClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1296")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//显示值")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value:"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//它返回给定unsigned的字符串表示形式 ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//由二进制参数表示的整数值")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Integer.toBinaryString(value)")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Integer.toBinaryString(value): "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//生成的值 ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//给定参数值中位的顺序 ")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过调用Integer.reverse(value)")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Integer.reverse(value): "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])]),s("h3",{attrs:{id:"reversebytes-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reversebytes-int-i"}},[t._v("#")]),t._v(" reverseBytes(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int reverseBytes(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回反转指定的二进制补码表示的字节顺序而获得的值 "),s("code",[t._v("int")]),t._v("值。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要颠倒其字节的值")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("通过在指定的 "),s("code",[t._v("int")]),t._v("值中反转字节获得的值。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.5")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1296")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Display value")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value: "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// It returns the string representation of the given")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unsigned integer value denoted by the argument in")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// binary by calling Integer.toBinaryString(value)")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Integer.toBinaryString(value): "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBinaryString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// It returns the value generated by reversing the order of the bytes in the")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//given argument value by calling Integer.reverseBytes(value)")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Integer.reverseBytes(value): "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reverseBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br")])]),s("h2",{attrs:{id:"类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[t._v("#")]),t._v(" 类型转换")]),t._v(" "),s("h3",{attrs:{id:"int-转换为string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#int-转换为string"}},[t._v("#")]),t._v(" int 转换为String")]),t._v(" "),s("h4",{attrs:{id:"tostring-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tostring-int-i"}},[t._v("#")]),t._v(" toString(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static String toString(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回表示指定整数的"),s("code",[t._v("String")]),t._v("对象。  参数被转换为带符号的十进制表示形式，并作为字符串返回，就像参数和小数10作为"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#toString-int-int-"}},[s("code",[t._v("toString(int, int)")])]),t._v("方法的参数一样。")],1),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要转换的整数。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("基数10中的参数的字符串表示形式。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"integer转换为string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integer转换为string"}},[t._v("#")]),t._v(" Integer转换为String")]),t._v(" "),s("h4",{attrs:{id:"tostring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tostring"}},[t._v("#")]),t._v(" toString()")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public String toString()\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回"),s("code",[t._v("String")]),t._v("表示此对象"),s("code",[t._v("Integer")]),t._v("的价值。  该值被转换为带符号的十进制表示形式，并作为字符串返回，就像将整数值作为"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#toString-int-"}},[s("code",[t._v("toString(int)")])]),t._v("方法的参数给出。")],1),t._v(" "),s("ul",[s("li",[s("p",[t._v("重写：")]),t._v(" "),s("p",[s("code",[t._v("toString")]),t._v("在  "),s("code",[t._v("Object")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("这个对象在基数10中的值的字符串表示。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"int转integer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#int转integer"}},[t._v("#")]),t._v(" int转Integer")]),t._v(" "),s("h4",{attrs:{id:"valueof-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#valueof-int-i"}},[t._v("#")]),t._v(" valueOf(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static Integer valueOf(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回一个"),s("code",[t._v("Integer")]),t._v("指定的"),s("code",[t._v("int")]),t._v("值的"),s("code",[t._v("Integer")]),t._v("实例。  如果不需要新的"),s("code",[t._v("Integer")]),t._v("实例，则该方法通常优先于构造函数"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#Integer-int-"}},[s("code",[t._v("Integer(int)")]),t._v("使用")]),t._v("  ，因为该方法可能通过缓存经常请求的值而产生明显更好的空间和时间性能。  此方法将始终缓存-128到127（含）范围内的值，并可能会超出此范围之外的其他值。")],1),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 一个 "),s("code",[t._v("int")]),t._v("价值。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("一个 "),s("code",[t._v("Integer")]),t._v("实例，代表 "),s("code",[t._v("i")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.5")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"integer转byte"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integer转byte"}},[t._v("#")]),t._v(" Integer转byte")]),t._v(" "),s("h4",{attrs:{id:"bytevalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bytevalue"}},[t._v("#")]),t._v(" byteValue()")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public byte byteValue()\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回此值 "),s("code",[t._v("Integer")]),t._v("为 "),s("code",[t._v("byte")]),t._v("的基本收缩转换后。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("重写：")]),t._v(" "),s("p",[s("code",[t._v("byteValue")]),t._v("在类别 "),s("code",[t._v("Number")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("该对象在转换为 "),s("code",[t._v("byte")]),t._v("之后表示的 "),s("code",[t._v("byte")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("See The Java™ Language  Specification:")]),t._v(" "),s("p",[t._v("5.1.3缩小原始转换")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"integer转short"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integer转short"}},[t._v("#")]),t._v(" Integer转short")]),t._v(" "),s("h4",{attrs:{id:"shortvalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shortvalue"}},[t._v("#")]),t._v(" shortValue()")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public short shortValue()\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回此值 "),s("code",[t._v("Integer")]),t._v("为 "),s("code",[t._v("short")]),t._v("的基本收缩转换后。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("重写：")]),t._v(" "),s("p",[s("code",[t._v("shortValue")]),t._v("在类别  "),s("code",[t._v("Number")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("该对象在转换为 "),s("code",[t._v("short")]),t._v("之后表示的 "),s("code",[t._v("short")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("See The Java™ Language  Specification:")]),t._v(" "),s("p",[t._v("5.1.3缩小原始转换")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"integer转int"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integer转int"}},[t._v("#")]),t._v(" Integer转int")]),t._v(" "),s("h4",{attrs:{id:"intvalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#intvalue"}},[t._v("#")]),t._v(" intValue()")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public int intValue()\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("将 "),s("code",[t._v("Integer")]),t._v("的值作为 "),s("code",[t._v("int")]),t._v(" 。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("intValue")]),t._v("在类别 "),s("code",[t._v("Number")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("该对象在转换为 "),s("code",[t._v("int")]),t._v("之后表示的 "),s("code",[t._v("int")]),t._v(" 。")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"integer转long"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integer转long"}},[t._v("#")]),t._v(" Integer转long")]),t._v(" "),s("h4",{attrs:{id:"longvalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#longvalue"}},[t._v("#")]),t._v(" longValue()")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public long longValue()\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回此值 "),s("code",[t._v("Integer")]),t._v("为 "),s("code",[t._v("long")]),t._v("一个宽元转换后。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("longValue")]),t._v("在类别 "),s("code",[t._v("Number")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("该对象在转换为 "),s("code",[t._v("long")]),t._v("之后表示的 "),s("code",[t._v("long")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#toUnsignedLong-int-"}},[s("code",[t._v("toUnsignedLong(int)")])])],1)]),t._v(" "),s("li",[s("p",[t._v("See The Java™ Language  Specification:")]),t._v(" "),s("p",[t._v("5.1.2扩大原始转换")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"integer转flout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integer转flout"}},[t._v("#")]),t._v(" Integer转flout")]),t._v(" "),s("h4",{attrs:{id:"floatvalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#floatvalue"}},[t._v("#")]),t._v(" floatValue()")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public float floatValue()\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回此值 "),s("code",[t._v("Integer")]),t._v("为 "),s("code",[t._v("float")]),t._v("一个宽元转换后。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("floatValue")]),t._v("在类别  "),s("code",[t._v("Number")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("此对象在转换为 "),s("code",[t._v("float")]),t._v("后转换的 "),s("code",[t._v("float")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("See The Java™ Language  Specification:")]),t._v(" "),s("p",[t._v("5.1.2扩大原始转换")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"integer转double"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#integer转double"}},[t._v("#")]),t._v(" Integer转double")]),t._v(" "),s("h4",{attrs:{id:"doublevalue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#doublevalue"}},[t._v("#")]),t._v(" doubleValue()")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public double doubleValue()\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回此值 "),s("code",[t._v("Integer")]),t._v("为 "),s("code",[t._v("double")]),t._v("一个宽元转换后。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("doubleValue")]),t._v("在类别  "),s("code",[t._v("Number")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("该对象在转换为 "),s("code",[t._v("double")]),t._v("之后表示的 "),s("code",[t._v("double")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("See The Java™ Language  Specification:")]),t._v(" "),s("p",[t._v("5.1.2扩大原始转换")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"int转无符号long的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#int转无符号long的值"}},[t._v("#")]),t._v(" int转无符号long的值")]),t._v(" "),s("h4",{attrs:{id:"tounsignedlong-int-x"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tounsignedlong-int-x"}},[t._v("#")]),t._v(" toUnsignedLong(int x)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static long toUnsignedLong(int x)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("参数给转换"),s("code",[t._v("long")]),t._v("由无符号转换。  在一个无符号转换为"),s("code",[t._v("long")]),t._v("  ，所述的高阶32位"),s("code",[t._v("long")]),t._v("是零和低32位等于整数参数的比特。  因此，零和正值"),s("code",[t._v("int")]),t._v("值被映射到数字等于"),s("code",[t._v("long")]),t._v("值，而负值"),s("code",[t._v("int")]),t._v("值被映射到等于输入加上32的"),s("code",[t._v("long")]),t._v("值。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("x")]),t._v(" - 转换为无符号 "),s("code",[t._v("long")]),t._v("的值")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("参数转换为 "),s("code",[t._v("long")]),t._v("由无符号转换")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.8")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h2",{attrs:{id:"哈希码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哈希码"}},[t._v("#")]),t._v(" 哈希码")]),t._v(" "),s("h3",{attrs:{id:"hashcode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashcode"}},[t._v("#")]),t._v(" hashCode()")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public int hashCode()\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回这个 "),s("code",[t._v("Integer")]),t._v("的哈希码。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("重写：")]),t._v(" "),s("p",[s("code",[t._v("hashCode")]),t._v("在类别 "),s("code",[t._v("Object")])])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("该对象的哈希码值等于由此 "),s("code",[t._v("Integer")]),t._v("对象表示的 "),s("code",[t._v("int")]),t._v("值int。")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/Object.html#equals-java.lang.Object-"}},[s("code",[t._v("Object.equals(java.lang.Object)")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#identityHashCode-java.lang.Object-"}},[s("code",[t._v("System.identityHashCode(java.lang.Object)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"hashcode-int-value"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashcode-int-value"}},[t._v("#")]),t._v(" hashCode(int value)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int hashCode(int value)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回一个"),s("code",[t._v("int")]),t._v("值的哈希码;  兼容"),s("code",[t._v("Integer.hashCode()")]),t._v(" 。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("value")]),t._v(" - 哈希值")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[s("code",[t._v("int")]),t._v("值的哈希码值。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.8")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h2",{attrs:{id:"比较"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#比较"}},[t._v("#")]),t._v(" 比较")]),t._v(" "),s("h3",{attrs:{id:"equals-object-obj"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#equals-object-obj"}},[t._v("#")]),t._v(" equals(Object obj)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public boolean equals(Object obj)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("将此对象与指定的对象进行比较。  其结果是"),s("code",[t._v("true")]),t._v("当且仅当该参数不是"),s("code",[t._v("null")]),t._v("并且是"),s("code",[t._v("Integer")]),t._v("对象包含相同"),s("code",[t._v("int")]),t._v("值作为该对象。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("重写：")]),t._v(" "),s("p",[s("code",[t._v("equals")]),t._v("在类别  "),s("code",[t._v("Object")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("obj")]),t._v(" - 要比较的对象。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[s("code",[t._v("true")]),t._v("如果对象是一样的; "),s("code",[t._v("false")]),t._v("否则。")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/Object.html#hashCode--"}},[s("code",[t._v("Object.hashCode()")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/util/HashMap.html"}},[s("code",[t._v("HashMap")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"compareto-integer-anotherinteger"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compareto-integer-anotherinteger"}},[t._v("#")]),t._v(" compareTo(Integer anotherInteger)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public int compareTo(Integer anotherInteger)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("数字比较两个 "),s("code",[t._v("Integer")]),t._v("对象。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Specified by:")]),t._v(" "),s("p",[s("code",[t._v("compareTo")]),t._v("在界面  "),s("code",[t._v("Comparable<Integer>")])])]),t._v(" "),s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("anotherInteger")]),t._v(" - 要比较的 "),s("code",[t._v("Integer")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("值"),s("code",[t._v("0")]),t._v("如果这个"),s("code",[t._v("Integer")]),t._v("等于参数"),s("code",[t._v("Integer")]),t._v("  ;  一个值小于"),s("code",[t._v("0")]),t._v("如果这个"),s("code",[t._v("Integer")]),t._v("数字小于参数"),s("code",[t._v("Integer")]),t._v("  ;  和大于一个值"),s("code",[t._v("0")]),t._v("如果此"),s("code",[t._v("Integer")]),t._v("在数值上大于该参数"),s("code",[t._v("Integer")]),t._v("  （带符号的比较）。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.2")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"compare-int-x-int-y"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compare-int-x-int-y"}},[t._v("#")]),t._v(" compare(int x,int y)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int compare(int x,int y)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("数值比较两个"),s("code",[t._v("int")]),t._v("值。返回的值与以下内容相同：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  Integer.valueOf(x).compareTo(Integer.valueOf(y)) \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("x")]),t._v(" - 第一个 "),s("code",[t._v("int")]),t._v("进行比较")]),t._v(" "),s("p",[s("code",[t._v("y")]),t._v(" - 第二个 "),s("code",[t._v("int")]),t._v("进行比较")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("价值"),s("code",[t._v("0")]),t._v("如果"),s("code",[t._v("x == y")]),t._v(" ;  一个值小于"),s("code",[t._v("0")]),t._v("如果"),s("code",[t._v("x < y")]),t._v(" ;  和值大于"),s("code",[t._v("0")]),t._v("如果"),s("code",[t._v("x > y")])])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.7")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"compareunsigned-int-x-int-y"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#compareunsigned-int-x-int-y"}},[t._v("#")]),t._v(" compareUnsigned(int x,int y)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int compareUnsigned(int x,int y)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("该方法将x，y两个整数转换为无符号整数后比较大小")])]),t._v(" "),s("p",[t._v("比较两个 "),s("code",[t._v("int")]),t._v("值以数字方式将值视为无符号。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("x")]),t._v(" - 第一个 "),s("code",[t._v("int")]),t._v("进行比较")]),t._v(" "),s("p",[s("code",[t._v("y")]),t._v(" - 第二个 "),s("code",[t._v("int")]),t._v("进行比较")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("价值"),s("code",[t._v("0")]),t._v("如果"),s("code",[t._v("x == y")]),t._v(" ; 如果"),s("code",[t._v("x < y")]),t._v("为无符号值，则小于"),s("code",[t._v("0")]),t._v(" ; 如果"),s("code",[t._v("x > y")]),t._v("为无符号值，则值大于"),s("code",[t._v("0")])])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.8")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h2",{attrs:{id:"系统属性的整数值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统属性的整数值"}},[t._v("#")]),t._v(" 系统属性的整数值")]),t._v(" "),s("h3",{attrs:{id:"getinteger-string-nm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getinteger-string-nm"}},[t._v("#")]),t._v(" getInteger(String nm)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static Integer getInteger(String nm)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("确定具有指定名称的系统属性的整数值。")]),t._v(" "),s("p",[t._v("第一个参数被视为系统属性的名称。 系统属性可通过"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[s("code",[t._v("System.getProperty(java.lang.String)")])]),t._v("方法访问。  然后此属性的字符串值被解释为使用由支持的语法的整数值"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#decode-java.lang.String-"}},[s("code",[t._v("decode")])]),t._v("和"),s("code",[t._v("Integer")]),t._v("返回表示此值对象。")],1),t._v(" "),s("p",[t._v("如果没有指定名称的属性，如果指定的名称为空或"),s("code",[t._v("null")]),t._v("  ，或者该属性没有正确的数字格式，则返回"),s("code",[t._v("null")]),t._v(" 。")]),t._v(" "),s("p",[t._v("换句话说，此方法返回一个"),s("code",[t._v("Integer")]),t._v("对象的值等于：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("getInteger(nm, null)")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("nm")]),t._v(" - 属性名称。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("该 "),s("code",[t._v("Integer")]),t._v("价值为 "),s("code",[t._v("Integer")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("SecurityException")]),t._v(" - 原因与  "),s("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[s("code",[t._v("System.getProperty")])]),t._v("相同")],1)]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[s("code",[t._v("System.getProperty(java.lang.String)")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-java.lang.String-"}},[s("code",[t._v("System.getProperty(java.lang.String, java.lang.String)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"getinteger-string-nm-int-val"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getinteger-string-nm-int-val"}},[t._v("#")]),t._v(" getInteger(String nm,int val)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static Integer getInteger(String nm,int val)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("确定具有指定名称的系统属性的整数值。")]),t._v(" "),s("p",[t._v("第一个参数被视为系统属性的名称。 系统属性可通过"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[s("code",[t._v("System.getProperty(java.lang.String)")])]),t._v("方法访问。  然后此属性的字符串值被解释为使用由支持的语法的整数值"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#decode-java.lang.String-"}},[s("code",[t._v("decode")])]),t._v("和"),s("code",[t._v("Integer")]),t._v("返回表示此值对象。")],1),t._v(" "),s("p",[t._v("第二个参数是默认值。  如果没有指定名称的属性，如果该属性没有正确的数字格式，或者指定的名称为空或"),s("code",[t._v("null")]),t._v("  ，则返回表示第二个参数的值的"),s("code",[t._v("Integer")]),t._v("对象。")]),t._v(" "),s("p",[t._v("换句话说，此方法返回一个"),s("code",[t._v("Integer")]),t._v("对象的值等于：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("getInteger(nm, new Integer(val))")])])]),t._v(" "),s("p",[t._v("但实际上可以以下列方式实现：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("Integer result = getInteger(nm, null); return (result == null) ? new Integer(val) : result;")])])]),t._v(" "),s("p",[t._v("以避免在不需要默认值时不必要地分配"),s("code",[t._v("Integer")]),t._v("对象。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("nm")]),t._v(" - 属性名称。")]),t._v(" "),s("p",[s("code",[t._v("val")]),t._v(" - 默认值。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("该 "),s("code",[t._v("Integer")]),t._v("价值 "),s("code",[t._v("Integer")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("SecurityException")]),t._v(" - 原因与  "),s("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[s("code",[t._v("System.getProperty")])]),t._v("相同")],1)]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[s("code",[t._v("System.getProperty(java.lang.String)")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-java.lang.String-"}},[s("code",[t._v("System.getProperty(java.lang.String, java.lang.String)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"getinteger-string-nm-integer-val"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#getinteger-string-nm-integer-val"}},[t._v("#")]),t._v(" getInteger(String nm,Integer val)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static Integer getInteger(String nm,Integer val)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回具有指定名称的系统属性的整数值。第一个参数被视为系统属性的名称。系统属性可通过"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[s("code",[t._v("System.getProperty(java.lang.String)")])]),t._v("方法访问。然后将该属性的字符串值解释为整数值，按照"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#decode-java.lang.String-"}},[s("code",[t._v("decode")])]),t._v("方法，并返回表示此值的"),s("code",[t._v("Integer")]),t._v("对象;综上所述：")],1),t._v(" "),s("ul",[s("li",[t._v("如果属性值以两个ASCII字符"),s("code",[t._v("0x")]),t._v("或ASCII字符# "),s("code",[t._v("#")]),t._v("  ，而不是后面加上减号，则其余部分将"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#valueOf-java.lang.String-int-"}},[t._v("按照")]),t._v("与基数16的方法"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#valueOf-java.lang.String-int-"}},[s("code",[t._v("valueOf(java.lang.String, int)")])]),t._v("完全一样的十六进制整数进行解析。")],1),t._v(" "),s("li",[t._v("如果属性值以ASCII字符0 "),s("code",[t._v("0")]),t._v("后跟另一个字符，则将其解析为八进制整数，与使用"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#valueOf-java.lang.String-int-"}},[t._v("小数")]),t._v(" 8的方法"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#valueOf-java.lang.String-int-"}},[s("code",[t._v("valueOf(java.lang.String, int)")])]),t._v("完全相同。")],1),t._v(" "),s("li",[t._v("否则，属性值将被解析为十进制整数，与基数为10的方法"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#valueOf-java.lang.String-int-"}},[s("code",[t._v("valueOf(java.lang.String, int)")])]),t._v("完全相同。")],1)]),t._v(" "),s("p",[t._v("第二个参数是默认值。  如果没有指定名称的属性，如果该属性没有正确的数字格式，或者指定的名称为空或"),s("code",[t._v("null")]),t._v(" ，则返回默认值。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("nm")]),t._v(" - 属性名称。")]),t._v(" "),s("p",[s("code",[t._v("val")]),t._v(" - 默认值。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("该 "),s("code",[t._v("Integer")]),t._v("价值为 "),s("code",[t._v("Integer")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("SecurityException")]),t._v(" - 原因与  "),s("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[s("code",[t._v("System.getProperty")])]),t._v("相同")],1)]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[s("code",[t._v("System.getProperty(java.lang.String)")])]),t._v("  ， "),s("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-java.lang.String-"}},[s("code",[t._v("System.getProperty(java.lang.String, java.lang.String)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h2",{attrs:{id:"string解码为integer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string解码为integer"}},[t._v("#")]),t._v(" String解码为Integer")]),t._v(" "),s("h3",{attrs:{id:"decode-string-nm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#decode-string-nm"}},[t._v("#")]),t._v(" decode(String nm)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static Integer decode(String nm)throws NumberFormatException\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("将"),s("code",[t._v("String")]),t._v("解码为"),s("code",[t._v("Integer")]),t._v(" 。接受以下语法给出的十进制，十六进制和八进制数：")]),t._v(" "),s("blockquote",[s("p",[s("em",[t._v("DecodableString:")]),t._v(" "),s("em",[t._v("Signopt DecimalNumeral")]),t._v(" "),s("em",[t._v("Signopt")]),t._v(" "),s("code",[t._v("0x")]),t._v(" "),s("em",[t._v("HexDigits")]),t._v(" "),s("em",[t._v("Signopt")]),t._v(" "),s("code",[t._v("0X")]),t._v(" "),s("em",[t._v("HexDigits")]),t._v(" "),s("em",[t._v("Signopt")]),t._v(" "),s("code",[t._v("#")]),t._v(" "),s("em",[t._v("HexDigits")]),t._v(" "),s("em",[t._v("Signopt")]),t._v(" "),s("code",[t._v("0")]),t._v(" "),s("em",[t._v("OctalDigits")]),t._v(" "),s("em",[t._v("Sign:")]),t._v(" "),s("code",[t._v("-")]),t._v(" "),s("code",[t._v("+")])])]),t._v(" "),s("p",[t._v("**DecimalNumeral，HexDigits，**和"),s("em",[t._v("OctalDigits")]),t._v("如在The  Java™ Language Specification 3.10.1部分所定义，所不同的是下划线不数字之间接受。")]),t._v(" "),s("p",[t._v("可选符号和/或基数说明符（“ "),s("code",[t._v("0x")]),t._v(" ”，“ "),s("code",[t._v("0X")]),t._v(" ”，“ "),s("code",[t._v("#")]),t._v("  ”或前导零）之后的字符序列按照指定基数（10,16或8）的"),s("code",[t._v("Integer.parseInt")]),t._v("方法进行解析。  这个字符序列必须表示一个正值或"),s("RouterLink",{attrs:{to:"/01.Java/java/lang/NumberFormatException.html"}},[s("code",[t._v("NumberFormatException")])]),t._v("将被抛出。  如果指定的第一个字符的结果是否定"),s("code",[t._v("String")]),t._v("是减号。  在String中不允许有空白"),s("code",[t._v("String")]),t._v(" 。")],1),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("nm")]),t._v(" - "),s("code",[t._v("String")]),t._v("要解码。")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("一个 "),s("code",[t._v("Integer")]),t._v("对象持有 "),s("code",[t._v("int")]),t._v("值代表 "),s("code",[t._v("nm")])])]),t._v(" "),s("li",[s("p",[t._v("异常")]),t._v(" "),s("p",[s("code",[t._v("NumberFormatException")]),t._v("  - 如果 "),s("code",[t._v("String")]),t._v("不包含可解析整数。")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#parseInt-java.lang.String-int-"}},[s("code",[t._v("parseInt(java.lang.String, int)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5000"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Number = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("decode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"除法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#除法"}},[t._v("#")]),t._v(" 除法")]),t._v(" "),s("h3",{attrs:{id:"divideunsigned-int-dividend-int-divisor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#divideunsigned-int-dividend-int-divisor"}},[t._v("#")]),t._v(" divideUnsigned(int dividend,int divisor)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int divideUnsigned(int dividend,int divisor)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("该方法将x、y两个整数转换为无符号整数后计算他们相除的商")])]),t._v(" "),s("p",[t._v("返回将第一个参数除以秒的无符号商，其中每个参数和结果被解释为无符号值。")]),t._v(" "),s("p",[t._v("注意，在二进制补码算术中，如果两个操作数被认为是被签名的或者两个都是无符号的，则加法，减法和乘法的三个其他基本算术运算是逐位相同的。  因此不提供"),s("code",[t._v("addUnsigned")]),t._v("等方法。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("dividend")]),t._v(" - 要划分的值")]),t._v(" "),s("p",[s("code",[t._v("divisor")]),t._v(" - 做分割的价值")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("第一个参数的无符号商除以第二个参数")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.8")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#remainderUnsigned-int-int-"}},[s("code",[t._v("remainderUnsigned(int, int)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Number = "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("divideUnsigned")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"remainderunsigned-int-dividend-int-divisor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#remainderunsigned-int-dividend-int-divisor"}},[t._v("#")]),t._v(" remainderUnsigned(int dividend,int divisor)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int remainderUnsigned(int dividend,int divisor)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("该方法将x、y两个整数转换为无符号整数后计算他们相除的余数")])]),t._v(" "),s("p",[t._v("返回无符号余数，将第一个参数除以秒，其中每个参数和结果被解释为无符号值。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("dividend")]),t._v(" - 要划分的值")]),t._v(" "),s("p",[s("code",[t._v("divisor")]),t._v(" - 做分割的值")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("第一个参数的无符号余数除以第二个参数")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.8")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#divideUnsigned-int-int-"}},[s("code",[t._v("divideUnsigned(int, int)")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h2",{attrs:{id:"权值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#权值"}},[t._v("#")]),t._v(" 权值")]),t._v(" "),s("h3",{attrs:{id:"highestonebit-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#highestonebit-int-i"}},[t._v("#")]),t._v(" highestOneBit(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int highestOneBit(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("传入一个int参数i，返回其二进制最高位(最左)1的权值。")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("若i为正整数，例如i=9，其二进制为1001，最高位1的权值为8，则返回值为8")])]),t._v(" "),s("li",[s("strong",[t._v("若i为负整数，最高位1为符号位，返回值为-2147483648")])]),t._v(" "),s("li",[s("strong",[t._v("若i为零，返回值为0")])])]),t._v(" "),s("p",[t._v("返回一个"),s("code",[t._v("int")]),t._v("值与至多一个单个1位，在最高阶（“最左侧”）的位置在指定的一个位"),s("code",[t._v("int")]),t._v("值。  如果指定的值在其二进制补码二进制表示中没有1位，也就是说，如果它等于零，则返回零。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要计算其最高一位的值")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("一个 "),s("code",[t._v("int")]),t._v("值，具有单个1位，位于指定值中最高位1位的位置，如果指定值本身等于零，则为零。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.5")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h3",{attrs:{id:"lowestonebit-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lowestonebit-int-i"}},[t._v("#")]),t._v(" lowestOneBit(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int lowestOneBit(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("传入一个int参数i，返回其二进制最低(最右)位1的权值。")])]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("若i非零，返回值为最低位1的权值")])]),t._v(" "),s("li",[s("strong",[t._v("若i为零，返回值为0")])])]),t._v(" "),s("p",[t._v("返回一个"),s("code",[t._v("int")]),t._v("值与至多一个单个1位，在最低阶（“最右边的”）的位置在指定的一个位"),s("code",[t._v("int")]),t._v("值。  如果指定的值在其二进制补码二进制表示中没有1位，也就是说，如果它等于零，则返回零。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要计算最低一位的值")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("一个 "),s("code",[t._v("int")]),t._v("值，具有单个1位，在指定值中的最低位1位的位置，如果指定的值本身等于零，则为零。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.5")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h2",{attrs:{id:"判断是正数-负数-零"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断是正数-负数-零"}},[t._v("#")]),t._v(" 判断是正数,负数,零")]),t._v(" "),s("h3",{attrs:{id:"signum-int-i"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signum-int-i"}},[t._v("#")]),t._v(" signum(int i)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int signum(int i)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回指定的"),s("code",[t._v("int")]),t._v("值的signum函数。  （如果指定的值为负，返回值为-1;如果指定的值为零，返回值为0;如果指定的值为正，返回值为1）。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("i")]),t._v(" - 要计算其 "),s("code",[t._v("i")]),t._v("的值")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("指定功能的指定值为 "),s("code",[t._v("int")]),t._v(" 。")])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.5")])])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("signum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("signum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("signum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h2",{attrs:{id:"合计"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合计"}},[t._v("#")]),t._v(" 合计")]),t._v(" "),s("h3",{attrs:{id:"sum-int-a-int-b"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sum-int-a-int-b"}},[t._v("#")]),t._v(" sum(int a,int b)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int sum(int a,int b)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("根据+运算符将两个整数相加。")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("a")]),t._v(" - 第一个操作数")]),t._v(" "),s("p",[s("code",[t._v("b")]),t._v(" - 第二个操作数")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("总额为 "),s("code",[t._v("a")]),t._v("和 "),s("code",[t._v("b")])])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.8")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/util/function/BinaryOperator.html"}},[s("code",[t._v("BinaryOperator")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h2",{attrs:{id:"取最大值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#取最大值"}},[t._v("#")]),t._v(" 取最大值")]),t._v(" "),s("h3",{attrs:{id:"max-int-a-int-b"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#max-int-a-int-b"}},[t._v("#")]),t._v(" max(int a,int b)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int max(int a,int b)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回两个 "),s("code",[t._v("int")]),t._v("的较大值，就像调用 "),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Math.html#max-int-int-"}},[s("code",[t._v("Math.max")]),t._v("一样")]),t._v(" 。")],1),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("a")]),t._v(" - 第一个操作数")]),t._v(" "),s("p",[s("code",[t._v("b")]),t._v(" - 第二个操作数")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[s("code",[t._v("a")]),t._v("和 "),s("code",[t._v("b")]),t._v("的较大 "),s("code",[t._v("b")])])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.8")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/util/function/BinaryOperator.html"}},[s("code",[t._v("BinaryOperator")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])]),t._v(" "),s("h2",{attrs:{id:"取最小值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#取最小值"}},[t._v("#")]),t._v(" 取最小值")]),t._v(" "),s("h3",{attrs:{id:"min-int-a-int-b"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#min-int-a-int-b"}},[t._v("#")]),t._v(" min(int a,int b)")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("public static int min(int a,int b)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("返回两个 "),s("code",[t._v("int")]),t._v("的较小值，就像调用 "),s("RouterLink",{attrs:{to:"/01.Java/java/lang/Math.html#min-int-int-"}},[s("code",[t._v("Math.min")]),t._v("一样")]),t._v(" 。")],1),t._v(" "),s("ul",[s("li",[s("p",[t._v("参数")]),t._v(" "),s("p",[s("code",[t._v("a")]),t._v(" - 第一个操作数")]),t._v(" "),s("p",[s("code",[t._v("b")]),t._v(" - 第二个操作数")])]),t._v(" "),s("li",[s("p",[t._v("结果")]),t._v(" "),s("p",[t._v("较小的 "),s("code",[t._v("a")]),t._v("和 "),s("code",[t._v("b")])])]),t._v(" "),s("li",[s("p",[t._v("从以下版本开始：")]),t._v(" "),s("p",[t._v("1.8")])]),t._v(" "),s("li",[s("p",[t._v("另请参见：")]),t._v(" "),s("p",[s("RouterLink",{attrs:{to:"/01.Java/java/util/function/BinaryOperator.html"}},[s("code",[t._v("BinaryOperator")])])],1)])]),t._v(" "),s("p",[s("strong",[t._v("代码示例:")])])])}),[],!1,null,null,null);a.default=e.exports}}]);
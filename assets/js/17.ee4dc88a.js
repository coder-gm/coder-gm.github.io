(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{560:function(a,t,e){a.exports=e.p+"assets/img/image-20211023230658068.d44c34f7.png"},561:function(a,t,e){a.exports=e.p+"assets/img/image-20211023231236894.28a593ce.png"},562:function(a,t,e){a.exports=e.p+"assets/img/image-20211108103506054.c8384452.png"},728:function(a,t,e){"use strict";e.r(t);var r=e(33),i=Object(r.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h2",{attrs:{id:"第1章-gateway-介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第1章-gateway-介绍"}},[a._v("#")]),a._v(" 第1章. Gateway 介绍")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("SpringCloud Gateway 是Spring 官方最新退出的一款基于 SpringFrameWork 5, Project Reactor 和SpringBoot 2之上开发的网关,以后会取代zuul")])]),a._v(" "),r("li",[r("p",[a._v("它与第一代网关Zuul不同的是:Gateway 是异步非阻塞的(netty+webflux 实现);Zuul是同步阻塞请求的")])]),a._v(" "),r("li",[r("p",[a._v("Gateway 三大组成部分")]),a._v(" "),r("p",[r("img",{attrs:{src:e(560),alt:"image-20211023230658068"}})])])]),a._v(" "),r("h2",{attrs:{id:"第2章-gateway-工作模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第2章-gateway-工作模型"}},[a._v("#")]),a._v(" 第2章. Gateway 工作模型")]),a._v(" "),r("p",[a._v("SpringCloud Gateway 工作模型图示及解读")]),a._v(" "),r("p",[r("img",{attrs:{src:e(561),alt:"image-20211023231236894"}})]),a._v(" "),r("ul",[r("li",[a._v("**第1步:**请求发送到网关,经由分发器将请求匹配到相应的HandlerMapping")]),a._v(" "),r("li",[a._v("**第2步:**请求和处理器之间有一个映射,路由到网关处理程序,即Web Handler")]),a._v(" "),r("li",[a._v("**第3步:**执行特定的请求过滤器链")]),a._v(" "),r("li",[a._v("**第4步:**最终到达代理的微服务")])]),a._v(" "),r("h2",{attrs:{id:"第3章-gateway-与-zuul-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第3章-gateway-与-zuul-的区别"}},[a._v("#")]),a._v(" 第3章. Gateway 与 Zuul 的区别")]),a._v(" "),r("ul",[r("li",[r("p",[a._v("Zuul是一个基于阻塞I/O的 API Gateway")]),a._v(" "),r("p",[a._v("基于Servlet2.5 使用阻塞架构,不支持任何长链接")]),a._v(" "),r("p",[a._v("Zuul的设计模式与Nginx很像,每次I/O操作都是从工作线程中选择一个执行,请求线程被阻塞到工作线程完成")])]),a._v(" "),r("li",[r("p",[a._v("SpringCloud Gateway (官方推荐) 建立Spring5、Project Reactor 和 SpringBoot2之上,使用非阻塞API")]),a._v(" "),r("p",[a._v("SpringCloud Gateway支持WebSocket,并且与Spring紧密集成拥有更好的开发体验")])])]),a._v(" "),r("h2",{attrs:{id:"第4章-gateway-三大核心概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第4章-gateway-三大核心概念"}},[a._v("#")]),a._v(" 第4章. Gateway 三大核心概念")]),a._v(" "),r("p",[a._v("Route (路由) :是构建网关的基本模块,由ID、URI、一系列的断言和过滤器组成")]),a._v(" "),r("p",[a._v("Predicate （断言）：可以匹配HTTP 请求中所有的内容（请求头、参数等等），请求与断言相匹配通过当前断言")]),a._v(" "),r("p",[a._v("Filter（过滤器）：包括全局和局部过滤器，可以在请求被路由前后对请求进行更改")]),a._v(" "),r("h2",{attrs:{id:"第5章-gateway-执行流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第5章-gateway-执行流程"}},[a._v("#")]),a._v(" 第5章. Gateway 执行流程")]),a._v(" "),r("p",[a._v("执行流程大体如下：")]),a._v(" "),r("ol",[r("li",[a._v("Gateway Client向Gateway Server发送请求")]),a._v(" "),r("li",[a._v("请求首先会被HttpWebHandlerAdapter进行提取组装成网关上下文")]),a._v(" "),r("li",[a._v("然后网关的上下文会传递到DispatcherHandler，它负责将请求分发给RoutePredicateHandlerMapping")]),a._v(" "),r("li",[a._v("RoutePredicateHandlerMapping负责路由查找，并根据路由断言判断路由是否可用")]),a._v(" "),r("li",[a._v("如果过断言成功，由FilteringWebHandler创建过滤器链并调用")]),a._v(" "),r("li",[a._v("请求会一次经过PreFilter--微服务-PostFilter的方法，最终返回响应")])]),a._v(" "),r("p",[r("img",{attrs:{src:e(562),alt:"image-20211108103506054"}})])])}),[],!1,null,null,null);t.default=i.exports}}]);
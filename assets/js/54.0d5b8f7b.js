(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{654:function(v,a,e){"use strict";e.r(a);var t=e(33),_=Object(t.a)({},(function(){var v=this,a=v.$createElement,e=v._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"构造方法详细信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#构造方法详细信息"}},[v._v("#")]),v._v(" 构造方法详细信息")]),v._v(" "),e("h2",{attrs:{id:"long-long-value"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#long-long-value"}},[v._v("#")]),v._v(" Long(long value)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public Long(long value)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("构造一个新分配的 "),e("code",[v._v("Long")]),v._v("对象，该对象表示指定的 "),e("code",[v._v("long")]),v._v("参数。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("value")]),v._v(" - 由 "),e("code",[v._v("Long")]),v._v("对象表示的值。")])])]),v._v(" "),e("h2",{attrs:{id:"long-string-s"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#long-string-s"}},[v._v("#")]),v._v(" Long(String s)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public Long(String s) throws NumberFormatException\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("构造一个新分配"),e("code",[v._v("Long")]),v._v("对象，表示"),e("code",[v._v("long")]),v._v("由指示值"),e("code",[v._v("String")]),v._v("参数。  该字符串被转换为一个"),e("code",[v._v("long")]),v._v("在恰好使用的方式值"),e("code",[v._v("parseLong")]),v._v("为基数10的方法。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("s")]),v._v(" - "),e("code",[v._v("String")]),v._v("要转换为 "),e("code",[v._v("Long")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("异常")]),v._v(" "),e("p",[e("code",[v._v("NumberFormatException")]),v._v("  - 如果 "),e("code",[v._v("String")]),v._v("不包含可解析的 "),e("code",[v._v("long")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#parseLong-java.lang.String-int-"}},[e("code",[v._v("parseLong(java.lang.String, int)")])])],1)])]),v._v(" "),e("h1",{attrs:{id:"方法详细信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方法详细信息"}},[v._v("#")]),v._v(" 方法详细信息")]),v._v(" "),e("h2",{attrs:{id:"类型转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型转换"}},[v._v("#")]),v._v(" 类型转换")]),v._v(" "),e("h3",{attrs:{id:"long转string"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#long转string"}},[v._v("#")]),v._v(" long转String")]),v._v(" "),e("h4",{attrs:{id:"tostring-long-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tostring-long-i"}},[v._v("#")]),v._v(" toString(long i)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static String toString(long i)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回一个"),e("code",[v._v("String")]),v._v("对象，表示指定的"),e("code",[v._v("long")]),v._v(" 。  参数转换为带符号的十进制表示形式，并作为字符串返回，就像参数和基数10作为"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#toString-long-int-"}},[e("code",[v._v("toString(long, int)")])]),v._v("方法的参数一样。")],1),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" -一个 "),e("code",[v._v("long")]),v._v("进行转换。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("基数10中的参数的字符串表示形式。")])])]),v._v(" "),e("h4",{attrs:{id:"tostring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tostring"}},[v._v("#")]),v._v(" toString()")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public String toString()\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回"),e("code",[v._v("String")]),v._v("表示此对象"),e("code",[v._v("Long")]),v._v("的价值。  该值被转换为带符号的十进制表示形式，并作为字符串返回，就像"),e("code",[v._v("long")]),v._v("值作为"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#toString-long-"}},[e("code",[v._v("toString(long)")])]),v._v("方法的参数"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#toString-long-"}},[v._v("一样")]),v._v(" 。")],1),v._v(" "),e("ul",[e("li",[e("p",[v._v("重写：")]),v._v(" "),e("p",[e("code",[v._v("toString")]),v._v("在类别 "),e("code",[v._v("Object")])])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("这个对象在基数10中的值的字符串表示。")])])]),v._v(" "),e("h3",{attrs:{id:"long转byte"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#long转byte"}},[v._v("#")]),v._v(" Long转byte")]),v._v(" "),e("h4",{attrs:{id:"bytevalue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bytevalue"}},[v._v("#")]),v._v(" byteValue()")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public byte byteValue()\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回此值 "),e("code",[v._v("Long")]),v._v("为 "),e("code",[v._v("byte")]),v._v("的基本收缩转换后。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("重写：")]),v._v(" "),e("p",[e("code",[v._v("byteValue")]),v._v("在类别 "),e("code",[v._v("Number")])])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("该对象在转换为 "),e("code",[v._v("byte")]),v._v("之后表示的 "),e("code",[v._v("byte")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("See The Java™ Language  Specification:")]),v._v(" "),e("p",[v._v("5.1.3缩小原始转换")])])]),v._v(" "),e("h3",{attrs:{id:"long转short"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#long转short"}},[v._v("#")]),v._v(" Long转short")]),v._v(" "),e("h4",{attrs:{id:"shortvalue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shortvalue"}},[v._v("#")]),v._v(" shortValue()")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public short shortValue()\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回此值 "),e("code",[v._v("Long")]),v._v("为 "),e("code",[v._v("short")]),v._v("的基本收缩转换后。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("重写：")]),v._v(" "),e("p",[e("code",[v._v("shortValue")]),v._v("在 "),e("code",[v._v("Number")])])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("该对象在转换为 "),e("code",[v._v("short")]),v._v("之后表示的 "),e("code",[v._v("short")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("See The Java™ Language  Specification:")]),v._v(" "),e("p",[v._v("5.1.3缩小原始转换")])])]),v._v(" "),e("h3",{attrs:{id:"long转int"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#long转int"}},[v._v("#")]),v._v(" Long转int")]),v._v(" "),e("h4",{attrs:{id:"intvalue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#intvalue"}},[v._v("#")]),v._v(" intValue()")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public int intValue()\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回此的值 "),e("code",[v._v("Long")]),v._v("作为 "),e("code",[v._v("int")]),v._v("的基本收缩转换之后。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Specified by:")]),v._v(" "),e("p",[e("code",[v._v("intValue")]),v._v("在类别 "),e("code",[v._v("Number")])])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("该对象在转换为 "),e("code",[v._v("int")]),v._v("之后表示的 "),e("code",[v._v("int")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("See The Java™ Language  Specification:")]),v._v(" "),e("p",[v._v("5.1.3缩小原始转换")])])]),v._v(" "),e("h3",{attrs:{id:"long转long"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#long转long"}},[v._v("#")]),v._v(" Long转long")]),v._v(" "),e("h4",{attrs:{id:"longvalue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#longvalue"}},[v._v("#")]),v._v(" longValue()")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public long longValue()\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回此值 "),e("code",[v._v("Long")]),v._v("为 "),e("code",[v._v("long")]),v._v("值。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Specified by:")]),v._v(" "),e("p",[e("code",[v._v("longValue")]),v._v("在类别 "),e("code",[v._v("Number")])])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("该对象在转换为 "),e("code",[v._v("long")]),v._v("之后表示的 "),e("code",[v._v("long")]),v._v(" 。")])])]),v._v(" "),e("h3",{attrs:{id:"long转float"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#long转float"}},[v._v("#")]),v._v(" Long转float")]),v._v(" "),e("h4",{attrs:{id:"floatvalue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#floatvalue"}},[v._v("#")]),v._v(" floatValue()")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public float floatValue()\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回此值 "),e("code",[v._v("Long")]),v._v("为 "),e("code",[v._v("float")]),v._v("一个宽元转换后。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Specified by:")]),v._v(" "),e("p",[e("code",[v._v("floatValue")]),v._v("在 "),e("code",[v._v("Number")])])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("该对象在转换为 "),e("code",[v._v("float")]),v._v("之后表示的 "),e("code",[v._v("float")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("See The Java™ Language  Specification:")]),v._v(" "),e("p",[v._v("5.1.2扩大原始转换")])])]),v._v(" "),e("h3",{attrs:{id:"long转double"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#long转double"}},[v._v("#")]),v._v(" Long转double")]),v._v(" "),e("h4",{attrs:{id:"doublevalue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#doublevalue"}},[v._v("#")]),v._v(" doubleValue()")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public double doubleValue()\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回此值 "),e("code",[v._v("Long")]),v._v("为 "),e("code",[v._v("double")]),v._v("一个宽元转换后。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Specified by:")]),v._v(" "),e("p",[e("code",[v._v("doubleValue")]),v._v("在类别  "),e("code",[v._v("Number")])])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("该对象在转换为 "),e("code",[v._v("double")]),v._v("之后表示的 "),e("code",[v._v("double")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("See The Java™ Language  Specification:")]),v._v(" "),e("p",[v._v("5.1.2扩大原始转换")])])]),v._v(" "),e("h3",{attrs:{id:"long转string-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#long转string-2"}},[v._v("#")]),v._v(" Long转String")]),v._v(" "),e("h4",{attrs:{id:"long转为无符号十进制字符串"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#long转为无符号十进制字符串"}},[v._v("#")]),v._v(" long转为无符号十进制字符串")]),v._v(" "),e("h5",{attrs:{id:"tounsignedstring-long-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tounsignedstring-long-i"}},[v._v("#")]),v._v(" toUnsignedString(long i)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static String toUnsignedString(long i)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("将参数的字符串表示形式返回为无符号十进制值。  参数转换为无符号十进制表示形式，并作为字符串返回，正如参数和小数10作为"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#toUnsignedString-long-int-"}},[e("code",[v._v("toUnsignedString(long, int)")])]),v._v("方法的参数一样。")],1),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 要转换为无符号字符串的整数。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("参数的无符号字符串表示形式。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.8")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#toUnsignedString-long-int-"}},[e("code",[v._v("toUnsignedString(long, int)")])])],1)])]),v._v(" "),e("h4",{attrs:{id:"tostring-long-i-int-radix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tostring-long-i-int-radix"}},[v._v("#")]),v._v(" toString(long i,int radix)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static String toString(long i,int radix)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回由第二个参数指定的基数中的第一个参数的字符串表示形式。")]),v._v(" "),e("p",[v._v("如果基数小于"),e("code",[v._v("Character.MIN_RADIX")]),v._v("或大于"),e("code",[v._v("Character.MAX_RADIX")]),v._v("  ，则使用基数"),e("code",[v._v("10")]),v._v(" 。")]),v._v(" "),e("p",[v._v("如果第一个参数为负，结果的第一个元素是ASCII减号"),e("code",[v._v("'-'")]),v._v(" （ "),e("code",[v._v("'\\u002d'")]),v._v("  ）。 如果第一个参数不为负，则结果中不会出现符号字符。")]),v._v(" "),e("p",[v._v("结果的剩余字符表示第一个参数的大小。 如果幅度为零，则由单个零字符"),e("code",[v._v("'0'")]),v._v(" （  "),e("code",[v._v("'\\u0030'")]),v._v(" ）表示; 否则，幅度的表示的第一个字符将不是零字符。  以下ASCII字符用作数字：")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("0123456789abcdefghijklmnopqrstuvwxyz")])])]),v._v(" "),e("p",[v._v("这些是"),e("code",[v._v("'\\u0030'")]),v._v("至"),e("code",[v._v("'\\u0039'")]),v._v("和"),e("code",[v._v("'\\u0061'")]),v._v("至"),e("code",[v._v("'\\u007a'")]),v._v("  。如果"),e("code",[v._v("radix")]),v._v("是N  ，则这些字符的前N个按照所示的顺序用作小数N位。因此，十六进制（小数16）的数字是"),e("code",[v._v("0123456789abcdef")]),v._v(" 。如果需要大写字母，则可以对结果调用"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/String.html#toUpperCase--"}},[e("code",[v._v("String.toUpperCase()")])]),v._v("方法：")],1),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("Long.toString(n, 16).toUpperCase()")])])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" -一个 "),e("code",[v._v("long")]),v._v("被转换为字符串。")]),v._v(" "),e("p",[e("code",[v._v("radix")]),v._v(" - 在字符串表示中使用的基数。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("指定基数中的参数的字符串表示形式。")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#MAX_RADIX"}},[e("code",[v._v("Character.MAX_RADIX")])]),v._v("  ， "),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#MIN_RADIX"}},[e("code",[v._v("Character.MIN_RADIX")])])],1)])]),v._v(" "),e("h4",{attrs:{id:"tounsignedstring-long-i-int-radix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tounsignedstring-long-i-int-radix"}},[v._v("#")]),v._v(" toUnsignedString(long i,int radix)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static String toUnsignedString(long i,int radix)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("以第二个参数指定的基数中的无符号整数值返回第一个参数的字符串表示形式。")]),v._v(" "),e("p",[v._v("如果基数小于"),e("code",[v._v("Character.MIN_RADIX")]),v._v("或大于"),e("code",[v._v("Character.MAX_RADIX")]),v._v("  ，则使用基数"),e("code",[v._v("10")]),v._v(" 。")]),v._v(" "),e("p",[v._v("请注意，由于第一个参数被视为无符号值，因此不会打印前导符号。")]),v._v(" "),e("p",[v._v("如果幅度为零，则由单个零字符"),e("code",[v._v("'0'")]),v._v(" （ "),e("code",[v._v("'\\u0030'")]),v._v(" ）表示;  否则，幅度的表示的第一个字符将不是零字符。")]),v._v(" "),e("p",[v._v("基数的行为和用作数字的字符与"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#toString-long-int-"}},[e("code",[v._v("toString")])]),v._v("相同。")],1),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 要转换为无符号字符串的整数。")]),v._v(" "),e("p",[e("code",[v._v("radix")]),v._v(" - 在字符串表示中使用的基数。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("指定基数中的参数的无符号字符串表示形式。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.8")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#toString-long-int-"}},[e("code",[v._v("toString(long, int)")])])],1)])]),v._v(" "),e("h4",{attrs:{id:"tohexstring-long-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tohexstring-long-i"}},[v._v("#")]),v._v(" toHexString(long i)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static String toHexString(long i)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回"),e("code",[v._v("long")]),v._v("参数的字符串表示形式，作为16位中的无符号整数。")]),v._v(" "),e("p",[v._v("无符号"),e("code",[v._v("long")]),v._v("值是参数加上2 64，如果参数为负数;  否则，它等于论证。 该值被转换为十六进制（基数16）的ASCII数字串，没有额外的前导"),e("code",[v._v("0")]),v._v("  s。")]),v._v(" "),e("p",[v._v("可以通过调用"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#parseUnsignedLong-java.lang.String-int-"}},[e("code",[v._v("Long.parseUnsignedLong(s, 16)")])]),v._v("从返回的字符串"),e("code",[v._v("s")]),v._v("中恢复参数的值。")],1),v._v(" "),e("p",[v._v("如果无符号幅度为零，则由单个零字符"),e("code",[v._v("'0'")]),v._v(" （ "),e("code",[v._v("'\\u0030'")]),v._v(" ）表示;  否则，无符号大小的表示的第一个字符将不是零字符。 以下字符用作十六进制数字：")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("0123456789abcdef")])])]),v._v(" "),e("p",[v._v("这些是"),e("code",[v._v("'\\u0030'")]),v._v("至"),e("code",[v._v("'\\u0039'")]),v._v("和"),e("code",[v._v("'\\u0061'")]),v._v("至"),e("code",[v._v("'\\u0066'")]),v._v("  。如果需要大写字母，则可以对结果调用"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/String.html#toUpperCase--"}},[e("code",[v._v("String.toUpperCase()")])]),v._v("方法：")],1),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("Long.toHexString(n).toUpperCase()")])])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 一个 "),e("code",[v._v("long")]),v._v("要转换成一个字符串。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("无符号 "),e("code",[v._v("long")]),v._v("值由 "),e("code",[v._v("long")]),v._v("进制参数（基数16）表示。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("JDK 1.0.2")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#parseUnsignedLong-java.lang.String-int-"}},[e("code",[v._v("parseUnsignedLong(String, int)")])]),v._v(" ， "),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#toUnsignedString-long-int-"}},[e("code",[v._v("toUnsignedString(long, int)")])])],1)])]),v._v(" "),e("h4",{attrs:{id:"tooctalstring-long-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tooctalstring-long-i"}},[v._v("#")]),v._v(" toOctalString(long i)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static String toOctalString(long i)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回"),e("code",[v._v("long")]),v._v("参数的字符串表示形式，作为基数8中的无符号整数。")]),v._v(" "),e("p",[v._v("无符号"),e("code",[v._v("long")]),v._v("值是参数加上2 64，如果参数为负数;  否则，它等于论证。 该值转换为八进制（基数8）中的ASCII数字字符串，没有额外的前导"),e("code",[v._v("0")]),v._v("  s。")]),v._v(" "),e("p",[v._v("可以通过调用"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#parseUnsignedLong-java.lang.String-int-"}},[e("code",[v._v("Long.parseUnsignedLong(s, 8)")])]),v._v("从返回的字符串"),e("code",[v._v("s")]),v._v("中恢复参数的值。")],1),v._v(" "),e("p",[v._v("如果无符号幅度为零，则由单个零字符"),e("code",[v._v("'0'")]),v._v(" （ "),e("code",[v._v("'\\u0030'")]),v._v(" ）表示;  否则，无符号大小的表示的第一个字符将不是零字符。 以下字符用作八进制数字：")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("01234567")])])]),v._v(" "),e("p",[v._v("这些人物"),e("code",[v._v("'\\u0030'")]),v._v("通过"),e("code",[v._v("'\\u0037'")]),v._v(" 。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - a "),e("code",[v._v("long")]),v._v("要转换为字符串。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("由八进制（基数8）中的参数表示的无符号 "),e("code",[v._v("long")]),v._v("的字符串表示形式。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("JDK 1.0.2")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#parseUnsignedLong-java.lang.String-int-"}},[e("code",[v._v("parseUnsignedLong(String, int)")])]),v._v(" ， "),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#toUnsignedString-long-int-"}},[e("code",[v._v("toUnsignedString(long, int)")])])],1)])]),v._v(" "),e("h4",{attrs:{id:"tobinarystring-long-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tobinarystring-long-i"}},[v._v("#")]),v._v(" toBinaryString(long i)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static String toBinaryString(long i)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回"),e("code",[v._v("long")]),v._v("参数的字符串表示形式为基数2中的无符号整数。")]),v._v(" "),e("p",[v._v("无符号"),e("code",[v._v("long")]),v._v("值是参数加上2 64，如果参数为负数;  否则，它等于论证。 该值转换为二进制（基数2）的ASCII数字字符串，没有额外的前导"),e("code",[v._v("0")]),v._v("  s。")]),v._v(" "),e("p",[v._v("可以通过调用"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#parseUnsignedLong-java.lang.String-int-"}},[e("code",[v._v("Long.parseUnsignedLong(s, 2)")])]),v._v("从返回的字符串"),e("code",[v._v("s")]),v._v("中恢复参数的值。")],1),v._v(" "),e("p",[v._v("如果无符号幅度为零，则由单个零字符"),e("code",[v._v("'0'")]),v._v(" （ "),e("code",[v._v("'\\u0030'")]),v._v(" ）表示;  否则，无符号大小的表示的第一个字符将不是零字符。 字符"),e("code",[v._v("'0'")]),v._v(" （  "),e("code",[v._v("'\\u0030'")]),v._v(" ）和"),e("code",[v._v("'1'")]),v._v(" （ "),e("code",[v._v("'\\u0031'")]),v._v("  ）用作二进制数字。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 一个 "),e("code",[v._v("long")]),v._v("要转换成一个字符串。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("由二进制（基数2）中的参数表示的无符号 "),e("code",[v._v("long")]),v._v("值的字符串表示。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("JDK 1.0.2")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#parseUnsignedLong-java.lang.String-int-"}},[e("code",[v._v("parseUnsignedLong(String, int)")])]),v._v(" ， "),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#toUnsignedString-long-int-"}},[e("code",[v._v("toUnsignedString(long, int)")])])],1)])]),v._v(" "),e("h4",{attrs:{id:"valueof-string-s-int-radix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#valueof-string-s-int-radix"}},[v._v("#")]),v._v(" valueOf(String s,int radix)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static Long valueOf(String s,int radix)  throws NumberFormatException\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回一个"),e("code",[v._v("Long")]),v._v("对象，该对象保存从指定的String  "),e("code",[v._v("String")]),v._v("的值，并用第二个参数给出的基数进行解析。第一个参数被解释为在第二个参数指定的基数中表示一个签名的"),e("code",[v._v("long")]),v._v(" ，就好像参数被赋予"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#parseLong-java.lang.String-int-"}},[e("code",[v._v("parseLong(java.lang.String, int)")])]),v._v("方法一样。结果是一个"),e("code",[v._v("Long")]),v._v("对象，表示由字符串指定的"),e("code",[v._v("long")]),v._v("值。")],1),v._v(" "),e("p",[v._v("换句话说，该方法返回一个"),e("code",[v._v("Long")]),v._v("对象的值等于：")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("new Long(Long.parseLong(s, radix))")])])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("s")]),v._v(" - 要解析的字符串")]),v._v(" "),e("p",[e("code",[v._v("radix")]),v._v(" - 用于解释的基数 "),e("code",[v._v("s")])])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("一个保存由指定基数中的字符串参数表示的值的 "),e("code",[v._v("Long")]),v._v("对象。")])]),v._v(" "),e("li",[e("p",[v._v("异常")]),v._v(" "),e("p",[e("code",[v._v("NumberFormatException")]),v._v("  - 如果 "),e("code",[v._v("String")]),v._v("不包含可解析的 "),e("code",[v._v("long")]),v._v(" 。")])])]),v._v(" "),e("h4",{attrs:{id:"valueof-string-s"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#valueof-string-s"}},[v._v("#")]),v._v(" valueOf(String s)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static Long valueOf(String s) throws NumberFormatException\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回一个"),e("code",[v._v("Long")]),v._v("指定的"),e("code",[v._v("Long")]),v._v("的值的Long  "),e("code",[v._v("String")]),v._v(" 。该参数被解释为表示一个有符号的十进制"),e("code",[v._v("long")]),v._v("  ，正如参数被赋予"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#parseLong-java.lang.String-"}},[e("code",[v._v("parseLong(java.lang.String)")])]),v._v("方法一样。结果是一个表示由字符串指定的整数值的"),e("code",[v._v("Long")]),v._v("对象。")],1),v._v(" "),e("p",[v._v("换句话说，此方法返回一个"),e("code",[v._v("Long")]),v._v("对象的值等于：")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("new Long(Long.parseLong(s))")])])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("s")]),v._v(" - 要解析的字符串。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("一个保存由string参数表示的值的 "),e("code",[v._v("Long")]),v._v("对象。")])]),v._v(" "),e("li",[e("p",[v._v("异常")]),v._v(" "),e("p",[e("code",[v._v("NumberFormatException")]),v._v("  - 如果字符串不能被解析为 "),e("code",[v._v("long")]),v._v(" 。")])])]),v._v(" "),e("h4",{attrs:{id:"valueof-long-l"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#valueof-long-l"}},[v._v("#")]),v._v(" valueOf(long l)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static Long valueOf(long l)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回一个"),e("code",[v._v("Long")]),v._v(" "),e("code",[v._v("long")]),v._v("值的"),e("code",[v._v("Long")]),v._v("实例。  如果不需要新的"),e("code",[v._v("Long")]),v._v("实例，则该方法通常优先于构造函数"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#Long-long-"}},[e("code",[v._v("Long(long)")]),v._v("使用")]),v._v("  ，因为该方法可能通过缓存经常请求的值而产生明显更好的空间和时间性能。 请注意，与"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Integer.html#valueOf-int-"}},[v._v("corresponding  method")]),v._v("在"),e("code",[v._v("Integer")]),v._v("类，这种方法"),e("em",[v._v("不需要")]),v._v("缓存值的特定范围内。")],1),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("l")]),v._v(" - 一个长的价值。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("一个 "),e("code",[v._v("Long")]),v._v("实例，代表 "),e("code",[v._v("l")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.5")])])]),v._v(" "),e("h3",{attrs:{id:"string转long"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string转long"}},[v._v("#")]),v._v(" String转Long")]),v._v(" "),e("h4",{attrs:{id:"parselong-string-s-int-radix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parselong-string-s-int-radix"}},[v._v("#")]),v._v(" parseLong(String s,int radix)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long parseLong(String s,int radix) throws NumberFormatException\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("将字符串参数解析为由第二个参数指定的基数中的带符号的"),e("code",[v._v("long")]),v._v(" 。字符串中的字符必须是指定基数的数字（如通过是否确定"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#digit-char-int-"}},[e("code",[v._v("Character.digit(char, int)")])]),v._v("返回一个非负的值），所不同的是第一个字符可以是ASCII减号"),e("code",[v._v("'-'")]),v._v(" （  "),e("code",[v._v("'\\u002D'")]),v._v(" ），以指示一个负值或ASCII加号"),e("code",[v._v("'+'")]),v._v(" （ "),e("code",[v._v("'\\u002B'")]),v._v("  ）以表示正值。返回的结果为"),e("code",[v._v("long")]),v._v(" 。")],1),v._v(" "),e("p",[v._v("请注意，字符"),e("code",[v._v("L")]),v._v(" （ "),e("code",[v._v("'\\u004C'")]),v._v(" ）和"),e("code",[v._v("l")]),v._v(" （  "),e("code",[v._v("'\\u006C'")]),v._v(" ）均不允许作为类型指示符出现在字符串的末尾，如Java编程语言源代码中允许的"),e("code",[v._v("L")]),v._v("  ，除了"),e("code",[v._v("L")]),v._v("或"),e("code",[v._v("l")]),v._v("可能显示为数字为大于或等于22的基数。")]),v._v(" "),e("p",[v._v("如果发生以下任何一种情况，则抛出类型"),e("code",[v._v("NumberFormatException")]),v._v("的异常：")]),v._v(" "),e("ul",[e("li",[v._v("第一个参数是"),e("code",[v._v("null")]),v._v("或是长度为零的字符串。")]),v._v(" "),e("li",[e("code",[v._v("radix")]),v._v("或小于"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#MIN_RADIX"}},[e("code",[v._v("Character.MIN_RADIX")])]),v._v("或大于"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#MAX_RADIX"}},[e("code",[v._v("Character.MAX_RADIX")])]),v._v("  。")],1),v._v(" "),e("li",[v._v("字符串的任何字符不是指定基数的数字，除了第一个字符可能是减号"),e("code",[v._v("'-'")]),v._v(" （ "),e("code",[v._v("'\\u002d'")]),v._v("  ）或加号"),e("code",[v._v("'+'")]),v._v(" （ "),e("code",[v._v("'\\u002B'")]),v._v(" ），前提是字符串长于长度1。")]),v._v(" "),e("li",[v._v("由字符串表示的值不是"),e("code",[v._v("long")]),v._v("类型的值。")])]),v._v(" "),e("p",[v._v("例子：")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v('parseLong("0", 10) returns 0L parseLong("473", 10) returns 473L parseLong("+42", 10) returns 42L parseLong("-0", 10) returns 0L parseLong("-FF", 16) returns -255L parseLong("1100110", 2) returns 102L parseLong("99", 8) throws a NumberFormatException parseLong("Hazelnut", 10) throws a NumberFormatException parseLong("Hazelnut", 36) returns 1356099454469L')])])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("s")]),v._v(" - 包含要解析的 "),e("code",[v._v("String")]),v._v("表示的 "),e("code",[v._v("long")]),v._v(" 。")]),v._v(" "),e("p",[e("code",[v._v("radix")]),v._v(" - 解析时使用的基数 "),e("code",[v._v("s")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("所述 "),e("code",[v._v("long")]),v._v("通过指定基数字符串参数表示。")])]),v._v(" "),e("li",[e("p",[v._v("异常")]),v._v(" "),e("p",[e("code",[v._v("NumberFormatException")]),v._v("  - 如果字符串不包含可解析的 "),e("code",[v._v("long")]),v._v(" 。")])])]),v._v(" "),e("h4",{attrs:{id:"parselong-string-s"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parselong-string-s"}},[v._v("#")]),v._v(" parseLong(String s)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long parseLong(String s) throws NumberFormatException\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("将字符串参数解析为带符号的十进制"),e("code",[v._v("long")]),v._v(" 。字符串中的字符必须都是十进制数字，除了第一个字符可能是ASCII减号"),e("code",[v._v("'-'")]),v._v(" （ "),e("code",[v._v("\\u002D'")]),v._v("  ）以指示负值或ASCII加号"),e("code",[v._v("'+'")]),v._v(" （ "),e("code",[v._v("'\\u002B'")]),v._v(" ）以指示正值。将所得"),e("code",[v._v("long")]),v._v("值被返回，就好像该参数和基数"),e("code",[v._v("10")]),v._v("分别给予作为参数传递给"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#parseLong-java.lang.String-int-"}},[e("code",[v._v("parseLong(java.lang.String, int)")])]),v._v("方法。")],1),v._v(" "),e("p",[v._v("请注意，字符"),e("code",[v._v("L")]),v._v(" （ "),e("code",[v._v("'\\u004C'")]),v._v(" ）和"),e("code",[v._v("l")]),v._v(" （  "),e("code",[v._v("'\\u006C'")]),v._v(" ）均不允许作为类型指示符出现在字符串的末尾，如Java编程语言源代码中允许的那样。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("s")]),v._v(" - 一个 "),e("code",[v._v("String")]),v._v("要解析的 "),e("code",[v._v("String")]),v._v("表示的  "),e("code",[v._v("long")])])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("所述 "),e("code",[v._v("long")]),v._v("由十进制参数表示。")])]),v._v(" "),e("li",[e("p",[v._v("异常")]),v._v(" "),e("p",[e("code",[v._v("NumberFormatException")]),v._v("  - 如果字符串不包含可解析的 "),e("code",[v._v("long")]),v._v(" 。")])])]),v._v(" "),e("h4",{attrs:{id:"parseunsignedlong-string-s-int-radix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parseunsignedlong-string-s-int-radix"}},[v._v("#")]),v._v(" parseUnsignedLong(String s,int radix)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long parseUnsignedLong(String s,int radix) throws NumberFormatException\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("在第二个参数指定的基数中将字符串参数解析为无符号"),e("code",[v._v("long")]),v._v(" 。无符号整数将通常与负数相关联的值映射到大于"),e("code",[v._v("MAX_VALUE")]),v._v("正数。字符串中的字符必须是指定基数的数字（如通过确定是否"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#digit-char-int-"}},[e("code",[v._v("Character.digit(char, int)")])]),v._v("返回一个非负的值），所不同的是第一个字符可以是ASCII加符号"),e("code",[v._v("'+'")]),v._v(" （  "),e("code",[v._v("'\\u002B'")]),v._v(" ）。返回所得到的整数值。")],1),v._v(" "),e("p",[v._v("如果发生以下任何一种情况，则抛出类型"),e("code",[v._v("NumberFormatException")]),v._v("的异常：")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("第一个参数是"),e("code",[v._v("null")]),v._v("或是长度为零的字符串。")])]),v._v(" "),e("li",[e("p",[v._v("基数小于"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#MIN_RADIX"}},[e("code",[v._v("Character.MIN_RADIX")])]),v._v("或大于"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Character.html#MAX_RADIX"}},[e("code",[v._v("Character.MAX_RADIX")])]),v._v("  。")],1)]),v._v(" "),e("li",[e("p",[v._v("字符串的任何字符不是指定基数的数字，除了第一个字符可能是加号"),e("code",[v._v("'+'")]),v._v(" （ "),e("code",[v._v("'\\u002B'")]),v._v("  ），前提是该字符串长于长度1。")])]),v._v(" "),e("li",[e("p",[v._v("由字符串表示的值大于最大的无符号"),e("code",[v._v("long")]),v._v(" 64 -1。")])]),v._v(" "),e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("s")]),v._v(" -所述 "),e("code",[v._v("String")]),v._v("含有无符号整数表示被解析")]),v._v(" "),e("p",[e("code",[v._v("radix")]),v._v(" - 解析时使用的基数 "),e("code",[v._v("s")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("未 "),e("code",[v._v("long")]),v._v(" long由指定基数中的字符串参数表示。")])]),v._v(" "),e("li",[e("p",[v._v("异常")]),v._v(" "),e("p",[e("code",[v._v("NumberFormatException")]),v._v("  - 如果 "),e("code",[v._v("String")]),v._v("不包含可解析的 "),e("code",[v._v("long")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.8")])])]),v._v(" "),e("h4",{attrs:{id:"parseunsignedlong-string-s"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parseunsignedlong-string-s"}},[v._v("#")]),v._v(" parseUnsignedLong(String s)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long parseUnsignedLong(String s)  throws NumberFormatException\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("将字符串参数解析为无符号十进制"),e("code",[v._v("long")]),v._v(" 。  字符串中的字符必须都是十进制数字，除了第一个字符可能是ASCII加号"),e("code",[v._v("'+'")]),v._v(" （ "),e("code",[v._v("'\\u002B'")]),v._v("  ）。 返回所得到的整数值，就像参数和基数10作为"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#parseUnsignedLong-java.lang.String-int-"}},[e("code",[v._v("parseUnsignedLong(java.lang.String, int)")])]),v._v("方法的参数一样。")],1),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("s")]),v._v(" - 一个 "),e("code",[v._v("String")]),v._v("包含待分析的无符号 "),e("code",[v._v("long")]),v._v("表示")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("无符号的 "),e("code",[v._v("long")]),v._v("值由十进制字符串参数表示")])]),v._v(" "),e("li",[e("p",[v._v("异常")]),v._v(" "),e("p",[e("code",[v._v("NumberFormatException")]),v._v("  - 如果该字符串不包含可分析的无符号整数。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.8")])])]),v._v(" "),e("h2",{attrs:{id:"进制转换"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进制转换"}},[v._v("#")]),v._v(" 进制转换")]),v._v(" "),e("h3",{attrs:{id:"二进制后0的个数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二进制后0的个数"}},[v._v("#")]),v._v(" 二进制后0的个数")]),v._v(" "),e("h4",{attrs:{id:"numberofleadingzeros-long-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#numberofleadingzeros-long-i"}},[v._v("#")]),v._v(" numberOfLeadingZeros(long i)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static int numberOfLeadingZeros(long i)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回的最高阶的（“最左边的”）中所指定的二进制补码表示的一个位前述零个比特的数量"),e("code",[v._v("long")]),v._v("值。如果指定的值在其二进制补码表示中没有一位，换句话说如果它等于零则返回64。")]),v._v(" "),e("p",[v._v("请注意，该方法与对数基数2密切相关。对于所有正值"),e("code",[v._v("long")]),v._v("值x：")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("floor（log 2 （x））= "),e("code",[v._v("63 - numberOfLeadingZeros(x)")])])]),v._v(" "),e("li",[e("p",[v._v("ceil（log 2 （x））= "),e("code",[v._v("64 - numberOfLeadingZeros(x - 1)")])])]),v._v(" "),e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 要计算前导零数的值")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("的最高阶的（“最左边的”）前面的零位在指定的二进制补码表示的一个比特的数目 "),e("code",[v._v("long")]),v._v("值，或64如果该值等于零。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.5")])])]),v._v(" "),e("h4",{attrs:{id:"numberoftrailingzeros-long-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#numberoftrailingzeros-long-i"}},[v._v("#")]),v._v(" numberOfTrailingZeros(long i)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static int numberOfTrailingZeros(long i)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回零位以下最低阶（“最右边的”）的数量在指定的二进制补码表示的一个位"),e("code",[v._v("long")]),v._v("值。  如果指定的值在其二进制补码表示中没有一位，换句话说如果它等于零则返回64。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 要计算 "),e("code",[v._v("i")]),v._v("零的值")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("以下最低阶（“最右边的”）的零个比特的数量的一比特在指定的二进制补码表示 "),e("code",[v._v("long")]),v._v("值，或64如果该值等于零。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.5")])])]),v._v(" "),e("h3",{attrs:{id:"二进制后1的个数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二进制后1的个数"}},[v._v("#")]),v._v(" 二进制后1的个数")]),v._v(" "),e("h4",{attrs:{id:"bitcount-long-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bitcount-long-i"}},[v._v("#")]),v._v(" bitCount(long i)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static int bitCount(long i)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回指定的long值的二进制补码二进制表示中的"),e("code",[v._v("long")]),v._v("数。  此功能有时称为"),e("em",[v._v("人口数量")]),v._v(" 。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 要对其位进行计数的值")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("指定的long值的二进制补码二进制表示中的 "),e("code",[v._v("long")]),v._v("数。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.5")])])]),v._v(" "),e("h3",{attrs:{id:"移位"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移位"}},[v._v("#")]),v._v(" 移位")]),v._v(" "),e("h4",{attrs:{id:"rotateleft-long-i-int-distance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rotateleft-long-i-int-distance"}},[v._v("#")]),v._v(" rotateLeft(long i,int distance)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long rotateLeft(long i,int distance)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回通过将指定的long值的二进制补码二进制表示旋转指定的位数"),e("code",[v._v("long")]),v._v("值。（左侧移位的位或右侧的高位侧重新输入，或低位）。")]),v._v(" "),e("p",[v._v("请注意，具有负距离的左旋转相当于右旋转： "),e("code",[v._v("rotateLeft(val, -distance) == rotateRight(val, distance)")]),v._v(" 。  还要注意，通过64的任意倍数的旋转是无操作的，因此除旋转距离的最后六位之外，除了距离为负值外，也可以忽略旋转距离的最后六位：  "),e("code",[v._v("rotateLeft(val, distance) == rotateLeft(val, distance & 0x3F)")]),v._v("  。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 其位要向左旋转的值")]),v._v(" "),e("p",[e("code",[v._v("distance")]),v._v(" - 要向左旋转的位位数")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("通过将指定的long值的二进制补码二进制表示旋转指定的位数 "),e("code",[v._v("long")]),v._v("值。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.5")])])]),v._v(" "),e("h4",{attrs:{id:"rotateright-long-i-int-distance"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rotateright-long-i-int-distance"}},[v._v("#")]),v._v(" rotateRight(long i,int distance)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long rotateRight(long i,int distance)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回通过旋转指定的二的补码的二进制表示而得到的值"),e("code",[v._v("long")]),v._v("右移位的指定数值。（右侧移动的位或左侧的低位侧重新输入，或高位）。")]),v._v(" "),e("p",[v._v("请注意，具有负距离的右旋转相当于左旋： "),e("code",[v._v("rotateRight(val, -distance) == rotateLeft(val, distance)")]),v._v(" 。  还要注意，通过64的任意倍数的旋转是无操作的，因此除旋转距离的最后六位以外，除了距离为负值外，也可以忽略旋转距离的最后六位：  "),e("code",[v._v("rotateRight(val, distance) == rotateRight(val, distance & 0x3F)")]),v._v("  。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 其位要向右旋转的值")]),v._v(" "),e("p",[e("code",[v._v("distance")]),v._v(" - 要向右旋转的位位数")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("通过将指定的long值的二进制补码二进制表示旋转指定的位数 "),e("code",[v._v("long")]),v._v("值。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.5")])])]),v._v(" "),e("h3",{attrs:{id:"reverse-long-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reverse-long-i"}},[v._v("#")]),v._v(" reverse(long i)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long reverse(long i)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回由指定的二进制补码表示反转位的顺序而获得的值 "),e("code",[v._v("long")]),v._v("值。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 要反转的值")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("通过在指定的 "),e("code",[v._v("long")]),v._v("值中反转位的顺序 "),e("code",[v._v("long")]),v._v("值。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.5")])])]),v._v(" "),e("h3",{attrs:{id:"reversebytes-long-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reversebytes-long-i"}},[v._v("#")]),v._v(" reverseBytes(long i)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long reverseBytes(long i)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回反转指定的二进制补码表示的字节顺序而获得的值 "),e("code",[v._v("long")]),v._v("值。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 要颠倒其字节的值")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("通过在指定的 "),e("code",[v._v("long")]),v._v("值中反转字节获得的值。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.5")])])]),v._v(" "),e("h2",{attrs:{id:"string解码为long"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string解码为long"}},[v._v("#")]),v._v(" String解码为Long")]),v._v(" "),e("h3",{attrs:{id:"decode-string-nm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#decode-string-nm"}},[v._v("#")]),v._v(" decode(String nm)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static Long decode(String nm) throws NumberFormatException\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("将"),e("code",[v._v("String")]),v._v("解码成"),e("code",[v._v("Long")]),v._v(" 。接受以下语法给出的十进制，十六进制和八进制数：")]),v._v(" "),e("blockquote",[e("p",[e("em",[v._v("DecodableString:")]),v._v(" "),e("em",[v._v("Signopt DecimalNumeral")]),v._v(" "),e("em",[v._v("Signopt")]),v._v(" "),e("code",[v._v("0x")]),v._v(" "),e("em",[v._v("HexDigits")]),v._v(" "),e("em",[v._v("Signopt")]),v._v(" "),e("code",[v._v("0X")]),v._v(" "),e("em",[v._v("HexDigits")]),v._v(" "),e("em",[v._v("Signopt")]),v._v(" "),e("code",[v._v("#")]),v._v(" "),e("em",[v._v("HexDigits")]),v._v(" "),e("em",[v._v("Signopt")]),v._v(" "),e("code",[v._v("0")]),v._v(" "),e("em",[v._v("OctalDigits")]),v._v(" "),e("em",[v._v("Sign:")]),v._v(" "),e("code",[v._v("-")]),v._v(" "),e("code",[v._v("+")])])]),v._v(" "),e("p",[v._v("**DecimalNumeral，HexDigits，**和"),e("em",[v._v("OctalDigits")]),v._v("如在The  Java™ Language Specification 3.10.1部分所定义，所不同的是下划线不数字之间接受。")]),v._v(" "),e("p",[v._v("可选符号和/或基数说明符（“ "),e("code",[v._v("0x")]),v._v(" ”，“ "),e("code",[v._v("0X")]),v._v(" ”，“ "),e("code",[v._v("#")]),v._v("  ”或前导零）之后的"),e("code",[v._v("Long.parseLong")]),v._v("按"),e("code",[v._v("Long.parseLong")]),v._v("方法用指定的基数（10,16或8）进行解析。  这个字符序列必须表示一个正值或"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/NumberFormatException.html"}},[e("code",[v._v("NumberFormatException")])]),v._v("将被抛出。  如果指定的第一个字符的结果是否定"),e("code",[v._v("String")]),v._v("是减号。  在String中不允许使用"),e("code",[v._v("String")]),v._v(" 。")],1),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("nm")]),v._v(" - 要解码的 "),e("code",[v._v("String")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("一个 "),e("code",[v._v("Long")]),v._v("对象持有 "),e("code",[v._v("long")]),v._v("值代表 "),e("code",[v._v("nm")])])]),v._v(" "),e("li",[e("p",[v._v("异常")]),v._v(" "),e("p",[e("code",[v._v("NumberFormatException")]),v._v("  - 如果 "),e("code",[v._v("String")]),v._v("不包含可解析的 "),e("code",[v._v("long")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.2")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#parseLong-java.lang.String-int-"}},[e("code",[v._v("parseLong(String, int)")])])],1)])]),v._v(" "),e("h2",{attrs:{id:"哈希码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#哈希码"}},[v._v("#")]),v._v(" 哈希码")]),v._v(" "),e("h3",{attrs:{id:"hashcode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hashcode"}},[v._v("#")]),v._v(" hashCode()")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public int hashCode()\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回此"),e("code",[v._v("Long")]),v._v("的哈希码。结果是这个"),e("code",[v._v("Long")]),v._v("对象持有的原始"),e("code",[v._v("long")]),v._v("值的两半的异或。也就是说，hashcode是表达式的值：")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("(int)(this.longValue()^(this.longValue()>>>32))")])])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("重写：")]),v._v(" "),e("p",[e("code",[v._v("hashCode")]),v._v("在类别 "),e("code",[v._v("Object")])])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("该对象的哈希码值。")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/Object.html#equals-java.lang.Object-"}},[e("code",[v._v("Object.equals(java.lang.Object)")])]),v._v("  ， "),e("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#identityHashCode-java.lang.Object-"}},[e("code",[v._v("System.identityHashCode(java.lang.Object)")])])],1)])]),v._v(" "),e("h3",{attrs:{id:"hashcode-long-value"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hashcode-long-value"}},[v._v("#")]),v._v(" hashCode(long value)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static int hashCode(long value)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回一个"),e("code",[v._v("long")]),v._v("值的哈希码;  兼容"),e("code",[v._v("Long.hashCode()")]),v._v(" 。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("value")]),v._v(" - 哈希值")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("一个哈希码值为 "),e("code",[v._v("long")]),v._v("值。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.8")])])]),v._v(" "),e("h2",{attrs:{id:"比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#比较"}},[v._v("#")]),v._v(" 比较")]),v._v(" "),e("h3",{attrs:{id:"equals-object-obj"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#equals-object-obj"}},[v._v("#")]),v._v(" equals(Object obj)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public boolean equals(Object obj)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("将此对象与指定的对象进行比较。  如果且仅当参数不是"),e("code",[v._v("null")]),v._v("并且是"),e("code",[v._v("Long")]),v._v("对象，其中包含与此对象相同的"),e("code",[v._v("long")]),v._v("值，则结果为"),e("code",[v._v("true")]),v._v("  。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("重写：")]),v._v(" "),e("p",[e("code",[v._v("equals")]),v._v("在类别  "),e("code",[v._v("Object")])])]),v._v(" "),e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("obj")]),v._v(" - 要比较的对象。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[e("code",[v._v("true")]),v._v("如果对象相同; "),e("code",[v._v("false")]),v._v("否则。")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/Object.html#hashCode--"}},[e("code",[v._v("Object.hashCode()")])]),v._v("  ， "),e("RouterLink",{attrs:{to:"/01.Java/java/util/HashMap.html"}},[e("code",[v._v("HashMap")])])],1)])]),v._v(" "),e("h3",{attrs:{id:"compareto-long-anotherlong"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compareto-long-anotherlong"}},[v._v("#")]),v._v(" compareTo(Long anotherLong)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public int compareTo(Long anotherLong)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("数字比较两个 "),e("code",[v._v("Long")]),v._v("对象。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("Specified by:")]),v._v(" "),e("p",[e("code",[v._v("compareTo")]),v._v("在界面  "),e("code",[v._v("Comparable<Long>")])])]),v._v(" "),e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("anotherLong")]),v._v(" - 要比较的 "),e("code",[v._v("Long")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("值"),e("code",[v._v("0")]),v._v("如果这个"),e("code",[v._v("Long")]),v._v("等于参数"),e("code",[v._v("Long")]),v._v(" ;  的值小于"),e("code",[v._v("0")]),v._v("如果这"),e("code",[v._v("Long")]),v._v("在数值上小于该参数"),e("code",[v._v("Long")]),v._v(" ;  和大于一个值"),e("code",[v._v("0")]),v._v("如果此"),e("code",[v._v("Long")]),v._v("在数值上大于该参数"),e("code",[v._v("Long")]),v._v("  （带符号的比较）。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.2")])])]),v._v(" "),e("h3",{attrs:{id:"compare-long-x-long-y"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compare-long-x-long-y"}},[v._v("#")]),v._v(" compare(long x,long y)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static int compare(long x,long y)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("数值比较两个"),e("code",[v._v("long")]),v._v("数值。返回的值与以下内容相同：")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("  Long.valueOf(x).compareTo(Long.valueOf(y)) \n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("x")]),v._v(" - 第一个 "),e("code",[v._v("long")]),v._v("进行比较")]),v._v(" "),e("p",[e("code",[v._v("y")]),v._v(" - 第二个 "),e("code",[v._v("long")]),v._v("进行比较")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("价值"),e("code",[v._v("0")]),v._v("如果"),e("code",[v._v("x == y")]),v._v(" ;  一个值小于"),e("code",[v._v("0")]),v._v("如果"),e("code",[v._v("x < y")]),v._v(" ;  和值大于"),e("code",[v._v("0")]),v._v("如果"),e("code",[v._v("x > y")])])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.7")])])]),v._v(" "),e("h3",{attrs:{id:"compareunsigned-long-x-long-y"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compareunsigned-long-x-long-y"}},[v._v("#")]),v._v(" compareUnsigned(long x,long y)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static int compareUnsigned(long x,long y)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("将两个 "),e("code",[v._v("long")]),v._v("值进行比较，数值将值视为无符号。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("x")]),v._v(" - 第一个 "),e("code",[v._v("long")]),v._v("进行比较")]),v._v(" "),e("p",[e("code",[v._v("y")]),v._v(" - 第二个 "),e("code",[v._v("long")]),v._v("进行比较")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("价值"),e("code",[v._v("0")]),v._v("如果"),e("code",[v._v("x == y")]),v._v(" ; 如果"),e("code",[v._v("x < y")]),v._v("为无符号值，则小于"),e("code",[v._v("0")]),v._v("值; 如果"),e("code",[v._v("x > y")]),v._v("为无符号值，则值大于"),e("code",[v._v("0")])])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.8")])])]),v._v(" "),e("h2",{attrs:{id:"系统属性的整数值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#系统属性的整数值"}},[v._v("#")]),v._v(" 系统属性的整数值")]),v._v(" "),e("h3",{attrs:{id:"getlong-string-nm"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getlong-string-nm"}},[v._v("#")]),v._v(" getLong(String nm)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static Long getLong(String nm)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("确定"),e("code",[v._v("long")]),v._v("具有指定名称的系统属性的值。")]),v._v(" "),e("p",[v._v("第一个参数被视为系统属性的名称。 系统属性可通过"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[e("code",[v._v("System.getProperty(java.lang.String)")])]),v._v("方法访问。  然后此属性的字符串值被解释为"),e("code",[v._v("long")]),v._v("使用由支持的语法值"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#decode-java.lang.String-"}},[e("code",[v._v("decode")])]),v._v("和"),e("code",[v._v("Long")]),v._v("返回表示此值对象。")],1),v._v(" "),e("p",[v._v("如果没有指定名称的属性，如果指定的名称为空或"),e("code",[v._v("null")]),v._v("  ，或者如果该属性没有正确的数字格式，则返回"),e("code",[v._v("null")]),v._v(" 。")]),v._v(" "),e("p",[v._v("换句话说，此方法返回一个"),e("code",[v._v("Long")]),v._v("对象的值等于：")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("getLong(nm, null)")])])]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("nm")]),v._v(" - 房产名称。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("该 "),e("code",[v._v("Long")]),v._v("价值为 "),e("code",[v._v("Long")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("异常")]),v._v(" "),e("p",[e("code",[v._v("SecurityException")]),v._v(" - 原因与  "),e("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[e("code",[v._v("System.getProperty")])]),v._v("相同")],1)]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[e("code",[v._v("System.getProperty(java.lang.String)")])]),v._v("  ， "),e("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-java.lang.String-"}},[e("code",[v._v("System.getProperty(java.lang.String, java.lang.String)")])])],1)])]),v._v(" "),e("h3",{attrs:{id:"getlong-string-nm-long-val"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getlong-string-nm-long-val"}},[v._v("#")]),v._v(" getLong(String nm,long val)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static Long getLong(String nm,long val)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("确定"),e("code",[v._v("long")]),v._v("具有指定名称的系统属性的值。")]),v._v(" "),e("p",[v._v("第一个参数被视为系统属性的名称。 系统属性可通过"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[e("code",[v._v("System.getProperty(java.lang.String)")])]),v._v("方法访问。  然后此属性的字符串值被解释为"),e("code",[v._v("long")]),v._v("使用由支持的语法值"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#decode-java.lang.String-"}},[e("code",[v._v("decode")])]),v._v("和"),e("code",[v._v("Long")]),v._v("返回表示此值对象。")],1),v._v(" "),e("p",[v._v("第二个参数是默认值。  如果没有指定名称的属性，如果该属性没有正确的数字格式，或者指定的名称为空或为空，则返回表示第二个参数值的"),e("code",[v._v("Long")]),v._v("对象。")]),v._v(" "),e("p",[v._v("换句话说，此方法返回一个"),e("code",[v._v("Long")]),v._v("对象的值等于：")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("getLong(nm, new Long(val))")])])]),v._v(" "),e("p",[v._v("但实际上可以以下列方式实现：")]),v._v(" "),e("blockquote",[e("p",[e("code",[v._v("Long result = getLong(nm, null); return (result == null) ? new Long(val) : result;")])])]),v._v(" "),e("p",[v._v("以避免在不需要默认值时不必要地分配"),e("code",[v._v("Long")]),v._v("对象。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("nm")]),v._v(" - 属性名称。")]),v._v(" "),e("p",[e("code",[v._v("val")]),v._v(" - 默认值。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("该 "),e("code",[v._v("Long")]),v._v("价值 "),e("code",[v._v("Long")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("异常")]),v._v(" "),e("p",[e("code",[v._v("SecurityException")]),v._v(" - 原因与  "),e("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[e("code",[v._v("System.getProperty")])]),v._v("相同")],1)]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[e("code",[v._v("System.getProperty(java.lang.String)")])]),v._v("  ， "),e("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-java.lang.String-"}},[e("code",[v._v("System.getProperty(java.lang.String, java.lang.String)")])])],1)])]),v._v(" "),e("h3",{attrs:{id:"getlong-string-nm-long-val-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getlong-string-nm-long-val-2"}},[v._v("#")]),v._v(" getLong(String nm,Long val)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static Long getLong(String nm,Long val)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回具有指定名称的系统属性的"),e("code",[v._v("long")]),v._v("值。第一个参数被视为系统属性的名称。系统属性可通过"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[e("code",[v._v("System.getProperty(java.lang.String)")])]),v._v("方法访问。然后将该属性的字符串值解释为"),e("code",[v._v("long")]),v._v("值，按照"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#decode-java.lang.String-"}},[e("code",[v._v("decode")])]),v._v("方法，并返回表示此值的"),e("code",[v._v("Long")]),v._v("对象;综上所述：")],1),v._v(" "),e("ul",[e("li",[v._v("如果属性值以两个ASCII字符"),e("code",[v._v("0x")]),v._v("或ASCII字符# "),e("code",[v._v("#")]),v._v("  ，而不是后跟减号，则其余值将被解析为与基数为16的方法"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#valueOf-java.lang.String-int-"}},[e("code",[v._v("valueOf(java.lang.String, int)")])]),v._v("完全一样的十六进制整数。")],1),v._v(" "),e("li",[v._v("如果属性值与ASCII字符开始"),e("code",[v._v("0")]),v._v("后跟另一个字符时，它被解析为一个八进制整数精确地，通过方法"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#valueOf-java.lang.String-int-"}},[e("code",[v._v("valueOf(java.lang.String, int)")])]),v._v("用基数8。")],1),v._v(" "),e("li",[v._v("否则，属性值将被解析为十进制整数，完全符合基数为10的方法"),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#valueOf-java.lang.String-int-"}},[e("code",[v._v("valueOf(java.lang.String, int)")])]),v._v(" 。")],1)]),v._v(" "),e("p",[v._v("请注意，在每种情况下， "),e("code",[v._v("L")]),v._v(" （ "),e("code",[v._v("'\\u004C'")]),v._v(" ）和"),e("code",[v._v("l")]),v._v(" （  "),e("code",[v._v("'\\u006C'")]),v._v(" ）都不允许出现在属性值的末尾作为类型指示符，如Java编程语言源代码中允许的那样。")]),v._v(" "),e("p",[v._v("第二个参数是默认值。  如果没有指定名称的属性，如果该属性没有正确的数字格式，或者指定的名称为空或"),e("code",[v._v("null")]),v._v(" ，则返回默认值。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("nm")]),v._v(" - 属性名称。")]),v._v(" "),e("p",[e("code",[v._v("val")]),v._v(" - 默认值。")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("该 "),e("code",[v._v("Long")]),v._v("价值为 "),e("code",[v._v("Long")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("异常")]),v._v(" "),e("p",[e("code",[v._v("SecurityException")]),v._v(" - 原因与  "),e("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[e("code",[v._v("System.getProperty")])]),v._v("相同")],1)]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-"}},[e("code",[v._v("System.getProperty(java.lang.String)")])]),v._v("  ， "),e("RouterLink",{attrs:{to:"/01.Java/java/lang/System.html#getProperty-java.lang.String-java.lang.String-"}},[e("code",[v._v("System.getProperty(java.lang.String, java.lang.String)")])])],1)])]),v._v(" "),e("h2",{attrs:{id:"除法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#除法"}},[v._v("#")]),v._v(" 除法")]),v._v(" "),e("h3",{attrs:{id:"divideunsigned-long-dividend-long-divisor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#divideunsigned-long-dividend-long-divisor"}},[v._v("#")]),v._v(" divideUnsigned(long dividend,long divisor)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long divideUnsigned(long dividend,long divisor)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回将第一个参数除以秒的无符号商，其中每个参数和结果被解释为无符号值。")]),v._v(" "),e("p",[v._v("注意，在二进制补码算术中，如果两个操作数被认为是被签名的或者两个都是无符号的，则加法，减法和乘法的三个其他基本算术运算是逐位相同的。  因此不提供"),e("code",[v._v("addUnsigned")]),v._v("等方法。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("dividend")]),v._v(" - 要划分的值")]),v._v(" "),e("p",[e("code",[v._v("divisor")]),v._v(" - 做分割的值")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("第一个参数的无符号商除以第二个参数")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.8")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#remainderUnsigned-long-long-"}},[e("code",[v._v("remainderUnsigned(long, long)")])])],1)])]),v._v(" "),e("h3",{attrs:{id:"remainderunsigned-long-dividend-long-divisor"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remainderunsigned-long-dividend-long-divisor"}},[v._v("#")]),v._v(" remainderUnsigned(long dividend,long divisor)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long remainderUnsigned(long dividend,long divisor)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回无符号余数，将第一个参数除以秒，其中每个参数和结果被解释为无符号值。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("dividend")]),v._v(" - 要分割的值")]),v._v(" "),e("p",[e("code",[v._v("divisor")]),v._v(" - 做分割的值")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("第一个参数的无符号余数除以第二个参数")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.8")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/lang/Long.html#divideUnsigned-long-long-"}},[e("code",[v._v("divideUnsigned(long, long)")])])],1)])]),v._v(" "),e("h2",{attrs:{id:"权值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#权值"}},[v._v("#")]),v._v(" 权值")]),v._v(" "),e("h3",{attrs:{id:"highestonebit-long-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#highestonebit-long-i"}},[v._v("#")]),v._v(" highestOneBit(long i)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long highestOneBit(long i)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("在指定的"),e("code",[v._v("long")]),v._v("值中，最高位（最左侧）为1位，最多"),e("code",[v._v("long")]),v._v("返回一个"),e("code",[v._v("long")]),v._v("值。  如果指定的值在其二进制补码二进制表示中没有1位，也就是说，如果它等于零，则返回零。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 要计算最高一位的值")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("一个 "),e("code",[v._v("long")]),v._v("值，具有单个1位，位于指定值中最高位1位的位置，如果指定值本身等于零，则为零。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.5")])])]),v._v(" "),e("h3",{attrs:{id:"lowestonebit-long-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lowestonebit-long-i"}},[v._v("#")]),v._v(" lowestOneBit(long i)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long lowestOneBit(long i)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回一个"),e("code",[v._v("long")]),v._v("值至多一个单个1位，在最低阶（“最右边的”）的位置在指定的一个位"),e("code",[v._v("long")]),v._v("值。  如果指定的值在其二进制补码二进制表示中没有1位，也就是说，如果它等于零，则返回零。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 要计算最低一位的值")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("一个 "),e("code",[v._v("long")]),v._v("值，具有单个1位，在指定值中的最低位1位的位置，如果指定的值本身等于零，则为零。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.5")])])]),v._v(" "),e("h2",{attrs:{id:"判断是正数-负数-零"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#判断是正数-负数-零"}},[v._v("#")]),v._v(" 判断是正数,负数,零")]),v._v(" "),e("h3",{attrs:{id:"signum-long-i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#signum-long-i"}},[v._v("#")]),v._v(" signum(long i)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static int signum(long i)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回指定值为"),e("code",[v._v("long")]),v._v("的signum函数。  （如果指定的值为负，返回值为-1;如果指定的值为零，返回值为0;如果指定的值为正，返回值为1）。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("i")]),v._v(" - 要计算其 "),e("code",[v._v("i")]),v._v("的值")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("指定功能的指标为 "),e("code",[v._v("long")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.5")])])]),v._v(" "),e("h2",{attrs:{id:"合计值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合计值"}},[v._v("#")]),v._v(" 合计值")]),v._v(" "),e("h3",{attrs:{id:"sum-long-a-long-b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sum-long-a-long-b"}},[v._v("#")]),v._v(" sum(long a,long b)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long sum(long a,long b)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("根据+运算符将两个 "),e("code",[v._v("long")]),v._v("值一起添加。")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("a")]),v._v(" - 第一个操作数")]),v._v(" "),e("p",[e("code",[v._v("b")]),v._v(" - 第二个操作数")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[e("code",[v._v("a")]),v._v("和 "),e("code",[v._v("b")]),v._v("的总和")])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.8")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/util/function/BinaryOperator.html"}},[e("code",[v._v("BinaryOperator")])])],1)])]),v._v(" "),e("h2",{attrs:{id:"最大值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最大值"}},[v._v("#")]),v._v(" 最大值")]),v._v(" "),e("h3",{attrs:{id:"max-long-a-long-b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#max-long-a-long-b"}},[v._v("#")]),v._v(" max(long a,long b)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long max(long a,long b)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回两个 "),e("code",[v._v("long")]),v._v("的较大值，就像调用 "),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Math.html#max-long-long-"}},[e("code",[v._v("Math.max")]),v._v("一样")]),v._v(" 。")],1),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("a")]),v._v(" - 第一个操作数")]),v._v(" "),e("p",[e("code",[v._v("b")]),v._v(" - 第二个操作数")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[e("code",[v._v("a")]),v._v("和 "),e("code",[v._v("b")])])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.8")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/util/function/BinaryOperator.html"}},[e("code",[v._v("BinaryOperator")])])],1)])]),v._v(" "),e("h2",{attrs:{id:"最小值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最小值"}},[v._v("#")]),v._v(" 最小值")]),v._v(" "),e("h3",{attrs:{id:"min-long-a-long-b"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#min-long-a-long-b"}},[v._v("#")]),v._v(" min(long a,long b)")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("public static long min(long a,long b)\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[v._v("返回两个 "),e("code",[v._v("long")]),v._v("的较小值，就像调用 "),e("RouterLink",{attrs:{to:"/01.Java/java/lang/Math.html#min-long-long-"}},[e("code",[v._v("Math.min")]),v._v("一样")]),v._v(" 。")],1),v._v(" "),e("ul",[e("li",[e("p",[v._v("参数")]),v._v(" "),e("p",[e("code",[v._v("a")]),v._v(" - 第一个操作数")]),v._v(" "),e("p",[e("code",[v._v("b")]),v._v(" - 第二个操作数")])]),v._v(" "),e("li",[e("p",[v._v("结果")]),v._v(" "),e("p",[v._v("较小的 "),e("code",[v._v("a")]),v._v("和 "),e("code",[v._v("b")])])]),v._v(" "),e("li",[e("p",[v._v("从以下版本开始：")]),v._v(" "),e("p",[v._v("1.8")])]),v._v(" "),e("li",[e("p",[v._v("另请参见：")]),v._v(" "),e("p",[e("RouterLink",{attrs:{to:"/01.Java/java/util/function/BinaryOperator.html"}},[e("code",[v._v("BinaryOperator")])])],1)])])])}),[],!1,null,null,null);a.default=_.exports}}]);
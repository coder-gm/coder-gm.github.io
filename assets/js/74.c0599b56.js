(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{692:function(t,s,a){"use strict";a.r(s);var n=a(33),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"构造方法详细信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造方法详细信息"}},[t._v("#")]),t._v(" 构造方法详细信息")]),t._v(" "),a("h2",{attrs:{id:"random"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#random"}},[t._v("#")]),t._v(" Random()")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public Random()\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("创建一个新的随机数生成器。  该构造函数将随机数生成器的种子设置为非常可能与该构造函数的任何其他调用不同的值。")]),t._v(" "),a("h2",{attrs:{id:"random-long-seed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#random-long-seed"}},[t._v("#")]),t._v(" Random(long seed)")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public Random(long seed)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("使用单个"),a("code",[t._v("long")]),t._v("种子创建新的随机数生成器。种子是通过方法"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#next-int-"}},[a("code",[t._v("next(int)")]),t._v("维护")]),t._v("的伪随机数发生器的内部状态的初始值。")],1),t._v(" "),a("p",[t._v("调用"),a("code",[t._v("new Random(seed)")]),t._v("相当于：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   Random rnd = new Random(); rnd.setSeed(seed); \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[a("code",[t._v("seed")]),t._v(" - 初始种子")])]),t._v(" "),a("li",[a("p",[t._v("另请参见：")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#setSeed-long-"}},[a("code",[t._v("setSeed(long)")])])],1)])]),t._v(" "),a("h1",{attrs:{id:"方法详细信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法详细信息"}},[t._v("#")]),t._v(" 方法详细信息")]),t._v(" "),a("h2",{attrs:{id:"设置种子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置种子"}},[t._v("#")]),t._v(" 设置种子")]),t._v(" "),a("h3",{attrs:{id:"setseed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setseed"}},[t._v("#")]),t._v(" setSeed")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public void setSeed(long seed)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("注:相同种子数产生的随机数在顺序上是相同的。比如说两个Random类a,b种子都是5.那么a第一次产生随机数c,那么b第一次产生的随机数也是c.")])]),t._v(" "),a("p",[t._v("使用单个"),a("code",[t._v("long")]),t._v("种子设置此随机数生成器的种子。"),a("code",[t._v("setSeed")]),t._v("的一般合同是它改变这个随机数生成器对象的状态，使其处于完全相同的状态，就好像刚刚使用参数"),a("code",[t._v("seed")]),t._v("作为种子创建的那样。该方法"),a("code",[t._v("setSeed")]),t._v("由类实现"),a("code",[t._v("Random")]),t._v("通过原子地更新所述种子")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   (seed ^ 0x5DEECE66DL) & ((1L << 48) - 1) \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("并清除"),a("code",[t._v("haveNextNextGaussian")]),t._v("使用的标志"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#nextGaussian--"}},[a("code",[t._v("nextGaussian()")])]),t._v("  。")],1),t._v(" "),a("p",[t._v("实施"),a("code",[t._v("setSeed")]),t._v("由类"),a("code",[t._v("Random")]),t._v("碰巧只使用48给定的种子的比特。  然而，一般来说，重写方法可以使用"),a("code",[t._v("long")]),t._v("参数的所有64位作为种子值。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[a("code",[t._v("seed")]),t._v(" - 初始种子")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),t._v(" random0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    random0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" random0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),t._v(" random1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    random1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setSeed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" random1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br")])]),a("h2",{attrs:{id:"生成随机字节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成随机字节"}},[t._v("#")]),t._v(" 生成随机字节")]),t._v(" "),a("h3",{attrs:{id:"nextbytes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nextbytes"}},[t._v("#")]),t._v(" nextBytes")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public void nextBytes(byte[] bytes)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("生成随机字节并将它们放入用户提供的字节数组中。产生的随机字节数等于字节数组的长度。")]),t._v(" "),a("p",[t._v("方法"),a("code",[t._v("nextBytes")]),t._v("由类别"),a("code",[t._v("Random")]),t._v(" ，如同通过：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   public void nextBytes(byte[] bytes) { for (int i = 0; i < bytes.length; ) for (int rnd = nextInt(), n = Math.min(bytes.length - i, 4); n-- > 0; rnd >>= 8) bytes[i++] = (byte)rnd; } \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[a("code",[t._v("bytes")]),t._v(" - 用随机字节填充的字节数组")])]),t._v(" "),a("li",[a("p",[t._v("异常")]),t._v(" "),a("p",[a("code",[t._v("NullPointerException")]),t._v("  - 如果字节数组为空")])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.1")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),t._v(" r "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        r"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextBytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"生成随机整数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成随机整数"}},[t._v("#")]),t._v(" 生成随机整数")]),t._v(" "),a("h3",{attrs:{id:"nextint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nextint"}},[t._v("#")]),t._v(" nextInt")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public int nextInt()\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("返回下一个伪随机数，从这个随机数生成器的序列中均匀分布"),a("code",[t._v("int")]),t._v("值。"),a("code",[t._v("nextInt")]),t._v("的一般合同是一个"),a("code",[t._v("int")]),t._v("值被伪随机生成并返回。所有2  32可能的"),a("code",[t._v("int")]),t._v("值以（大约）相等的概率产生。")]),t._v(" "),a("p",[t._v("方法"),a("code",[t._v("nextInt")]),t._v("由Random类"),a("code",[t._v("Random")]),t._v(" ，好像通过如下：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   public int nextInt() { return next(32); } \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("下一个伪随机数，从这个随机数发生器的序列中均匀分布 "),a("code",[t._v("int")]),t._v("值")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),t._v(" random0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" random0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"nextint-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nextint-2"}},[t._v("#")]),t._v(" nextInt")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public int nextInt(int bound)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("注意：int bound 必须是正数")])]),t._v(" "),a("p",[a("strong",[t._v("该方法的作用是生成一个随机的int值，该值介于[0,n)的区间，也就是0到n之间的随机int值，包含0而不包含n。")])]),t._v(" "),a("p",[t._v("返回伪随机的，均匀分布"),a("code",[t._v("int")]),t._v("值介于0（含）和指定值（不包括），从该随机数生成器的序列绘制。"),a("code",[t._v("nextInt")]),t._v("的一般合同是指定范围内的"),a("code",[t._v("int")]),t._v("值被伪随机生成并返回。所有"),a("code",[t._v("bound")]),t._v("可能的"),a("code",[t._v("int")]),t._v("值以（近似）等概率产生。方法"),a("code",[t._v("nextInt(int bound)")]),t._v("由类别"),a("code",[t._v("Random")]),t._v(" ，如：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('   public int nextInt(int bound) { if (bound <= 0) throw new IllegalArgumentException("bound must be positive"); if ((bound & -bound) == bound) // i.e., bound is a power of 2 return (int)((bound * (long)next(31)) >> 31); int bits, val; do { bits = next(31); val = bits % bound; } while (bits - val + (bound-1) < 0); return val; } \n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("仅在下面的方法仅仅是独立选择的位的无偏差源时才使用“近似”对冲。  如果它是随机选择位的完美来源，则所示的"),a("code",[t._v("int")]),t._v("将从所述范围中选择"),a("code",[t._v("int")]),t._v("值，具有完美的均匀性。")]),t._v(" "),a("p",[t._v("该算法有点棘手。 它拒绝会导致分配不均的价值（由于2 ^ 31不能被n整除）。  值被拒绝的概率取决于n。 最坏的情况是n = 2 ^ 30 +  1，拒绝概率为1/2，循环终止前的预期迭代次数为2。")]),t._v(" "),a("p",[t._v("该算法处理n特别是2的幂的情况：它从底层伪随机数发生器返回正确数量的高阶位。  在没有特殊处理的情况下，将返回正确数量的"),a("em",[t._v("低位")]),t._v(" 。  已知线性同余伪随机数发生器（例如由该类实现的）产生器在其低阶位的值序列中具有短周期。  因此，如果n是2的小功率，这种特殊情况大大增加了对该方法的连续调用返回的值的序列的长度。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[a("code",[t._v("bound")]),t._v(" - 上限（独占）。 必须是积极的。")])]),t._v(" "),a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("下一个伪随机数，从这个随机数发生器的序列中均匀 "),a("code",[t._v("int")]),t._v("到零（包括）和 "),a("code",[t._v("bound")]),t._v("  （排他）之间的值int")])]),t._v(" "),a("li",[a("p",[t._v("异常")]),t._v(" "),a("p",[a("code",[t._v("IllegalArgumentException")]),t._v("  - 如果绑定 "),a("code",[t._v("IllegalArgumentException")])])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.2")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),t._v(" random0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" random0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"生成随机long值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成随机long值"}},[t._v("#")]),t._v(" 生成随机long值")]),t._v(" "),a("h3",{attrs:{id:"nextlong"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nextlong"}},[t._v("#")]),t._v(" nextLong")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public long nextLong()\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("返回下一个伪随机数，从这个随机数发生器的序列中均匀分布"),a("code",[t._v("long")]),t._v("值。"),a("code",[t._v("nextLong")]),t._v("的一般合同是一个"),a("code",[t._v("long")]),t._v("值被伪随机生成并返回。")]),t._v(" "),a("p",[t._v("方法"),a("code",[t._v("nextLong")]),t._v("由类别"),a("code",[t._v("Random")]),t._v(" ，如：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   public long nextLong() { return ((long)next(32) << 32) + next(32); } \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("因为"),a("code",[t._v("Random")]),t._v("类使用只有48位的种子，所以该算法将不会返回所有可能的"),a("code",[t._v("long")]),t._v("值。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("下一个伪随机数，从这个随机数发生器的序列中均匀分布 "),a("code",[t._v("long")]),t._v("值")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("div",{staticClass:"language-Java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),t._v(" random0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" random0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextLong")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"随机生成boolean值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#随机生成boolean值"}},[t._v("#")]),t._v(" 随机生成boolean值")]),t._v(" "),a("h3",{attrs:{id:"nextboolean"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nextboolean"}},[t._v("#")]),t._v(" nextBoolean")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public boolean nextBoolean()\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("返回下一个伪随机数，从这个随机数发生器的序列中均匀分布"),a("code",[t._v("boolean")]),t._v("值。"),a("code",[t._v("nextBoolean")]),t._v("的一般合同是一个"),a("code",[t._v("boolean")]),t._v("值被伪随机生成并返回。价值"),a("code",[t._v("true")]),t._v("和"),a("code",[t._v("false")]),t._v("以（大概）相等的概率产生。")]),t._v(" "),a("p",[t._v("方法"),a("code",[t._v("nextBoolean")]),t._v("由类别"),a("code",[t._v("Random")]),t._v(" ，如：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   public boolean nextBoolean() { return next(1) != 0; } \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("下一个伪随机数，从这个随机数发生器的序列中均匀分布 "),a("code",[t._v("boolean")]),t._v("值")])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.2")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("div",{staticClass:"language-Java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),t._v(" random0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" random0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextBoolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"随机生成float值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#随机生成float值"}},[t._v("#")]),t._v(" 随机生成Float值")]),t._v(" "),a("h3",{attrs:{id:"nextfloat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nextfloat"}},[t._v("#")]),t._v(" nextFloat")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public float nextFloat()\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("返回下一个伪，均匀分布"),a("code",[t._v("float")]),t._v("之间的值"),a("code",[t._v("0.0")]),t._v("和"),a("code",[t._v("1.0")]),t._v("从这个随机数生成器的序列。")]),t._v(" "),a("p",[a("code",[t._v("nextFloat")]),t._v("的一般合同是一个"),a("code",[t._v("float")]),t._v("值，从"),a("code",[t._v("0.0f")]),t._v("  （含）到"),a("code",[t._v("1.0f")]),t._v(" （独占）一起选择（大致）均匀，被伪随机生成并返回。  以（大致）等概率产生形式"),a("em",[t._v("m×")]),t._v(" 2 -24的全部2  24个可能的"),a("code",[t._v("float")]),t._v("值，其中"),a("em",[t._v("m")]),t._v("是小于2 24的正整数。")]),t._v(" "),a("p",[t._v("方法"),a("code",[t._v("nextFloat")]),t._v("由Random类"),a("code",[t._v("Random")]),t._v(" ，如同通过：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   public float nextFloat() { return next(24) / ((float)(1 << 24)); } \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("仅在下面的方法仅仅是独立选择的位的无偏差源时才使用“近似”对冲。  如果它是随机选择位的完美来源，则所示的"),a("code",[t._v("float")]),t._v("将从所述范围中选择"),a("code",[t._v("float")]),t._v("值，具有完美的均匀性。")]),t._v(" "),a("p",[t._v("[在Java的早期版本中，结果错误地计算为：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   return next(30) / ((float)(1 << 30)); \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这可能似乎是等同的，如果不是更好，但实际上它引入了一个轻微的不均匀性，因为浮点数的四舍五入的偏差：有意义的低位比较有可能是0这将是1.]")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("下一个伪随机数，从这个随机数发生器的序列中均匀分布 "),a("code",[t._v("float")]),t._v("值 "),a("code",[t._v("0.0")]),t._v("和  "),a("code",[t._v("1.0")]),t._v("之间")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),t._v(" random0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" random0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"随机生成double值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#随机生成double值"}},[t._v("#")]),t._v(" 随机生成Double值")]),t._v(" "),a("h3",{attrs:{id:"nextdouble"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nextdouble"}},[t._v("#")]),t._v(" nextDouble")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public double nextDouble()\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("返回下一个伪随机数，从该随机数发生器的序列中"),a("code",[t._v("0.0")]),t._v("和"),a("code",[t._v("1.0")]),t._v("之间的"),a("code",[t._v("double")]),t._v("值。")]),t._v(" "),a("p",[a("code",[t._v("nextDouble")]),t._v("的一般合同是从"),a("code",[t._v("0.0d")]),t._v(" （含）到"),a("code",[t._v("1.0d")]),t._v("  （排他）范围内选择（近似均匀）的一个"),a("code",[t._v("double")]),t._v("值被伪随机生成并返回。")]),t._v(" "),a("p",[t._v("方法"),a("code",[t._v("nextDouble")]),t._v("由类别"),a("code",[t._v("Random")]),t._v(" ，如：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   public double nextDouble() { return (((long)next(26) << 27) + next(27)) / (double)(1L << 53); } \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("因为"),a("code",[t._v("next")]),t._v("方法只是大致上独立选择的位的无偏差源，所以在"),a("code",[t._v("next")]),t._v("的描述中使用了“大约”对冲。  如果它是随机选择的位的完美来源，则所示的"),a("code",[t._v("double")]),t._v("将从所述范围中选择"),a("code",[t._v("double")]),t._v("值，具有完美的均匀性。")]),t._v(" "),a("p",[t._v("[在Java的早期版本中，结果错误地计算为：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   return (((long)next(27) << 27) + next(27)) / (double)(1L << 54); \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这可能似乎是等同的，如果不是更好，但事实上它引入了一个大的不均匀性，因为浮点数的四舍五入有偏差：有效位的低位是0的可能性是三倍比那会是1！这种不均匀性在实践中可能无关紧要，但我们力求完美。]")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("下一个伪随机数，从这个随机数发生器的序列中 "),a("code",[t._v("0.0")]),t._v("和 "),a("code",[t._v("1.0")]),t._v("之间的  "),a("code",[t._v("double")]),t._v("值 "),a("code",[t._v("0.0")]),t._v("分布")])]),t._v(" "),a("li",[a("p",[t._v("另请参见：")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/01.Java/java/lang/Math.html#random--"}},[a("code",[t._v("Math.random()")])])],1)])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),t._v(" random0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" random0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextDouble")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"高斯-正-分布的double值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高斯-正-分布的double值"}},[t._v("#")]),t._v(" 高斯（“正”）分布的"),a("code",[t._v("double")]),t._v("值")]),t._v(" "),a("h3",{attrs:{id:"nextgaussian"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nextgaussian"}},[t._v("#")]),t._v(" nextGaussian")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public double nextGaussian()\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("从该随机数发生器的序列返回下一个伪随机数，高斯（“正”）分布的"),a("code",[t._v("double")]),t._v("值，平均值为"),a("code",[t._v("0.0")]),t._v("  ，标准差为"),a("code",[t._v("1.0")]),t._v(" 。")]),t._v(" "),a("p",[a("code",[t._v("nextGaussian")]),t._v("的一般合同是从（大约）平均值"),a("code",[t._v("0.0")]),t._v("和标准偏差"),a("code",[t._v("1.0")]),t._v("的常规正态分布中选出一个"),a("code",[t._v("double")]),t._v("值，被伪随机生成并返回。")]),t._v(" "),a("p",[t._v("方法"),a("code",[t._v("nextGaussian")]),t._v("由类"),a("code",[t._v("Random")]),t._v(" ，好像通过以下的线程安全版本：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   private double nextNextGaussian; private boolean haveNextNextGaussian = false; public double nextGaussian() { if (haveNextNextGaussian) { haveNextNextGaussian = false; return nextNextGaussian; } else { double v1, v2, s; do { v1 = 2 * nextDouble() - 1; // between -1.0 and 1.0 v2 = 2 * nextDouble() - 1; // between -1.0 and 1.0 s = v1 * v1 + v2 * v2; } while (s >= 1 || s == 0); double multiplier = StrictMath.sqrt(-2 * StrictMath.log(s)/s); nextNextGaussian = v2 * multiplier; haveNextNextGaussian = true; return v1 * multiplier; } } \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这使用GEP  Box，ME Muller和G. Marsaglia的"),a("em",[t._v("极性方法")]),t._v(" ，如Donald E. Knuth在*“计算机编程艺术* ”第3卷：  "),a("em",[t._v("半数学算法")]),t._v(" ，第3.4.1节，C节，算法P中所述。请注意它生成两个独立的值，只需一次呼叫"),a("code",[t._v("StrictMath.log")]),t._v("  ，一次呼叫到"),a("code",[t._v("StrictMath.sqrt")]),t._v(" 。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("下一个伪随机数，高斯（“正常”）分布 "),a("code",[t._v("double")]),t._v("值，平均值为 "),a("code",[t._v("0.0")]),t._v(" ，标准差  "),a("code",[t._v("1.0")]),t._v("为该随机数发生器序列")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),t._v(" random0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Random")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" random0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextGaussian")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"ints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ints"}},[t._v("#")]),t._v(" ints")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public IntStream ints(long streamSize)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("返回一个流，产生给定的"),a("code",[t._v("streamSize")]),t._v("数量的伪"),a("code",[t._v("int")]),t._v("数"),a("code",[t._v("int")]),t._v("值。")]),t._v(" "),a("p",[t._v("伪随机"),a("code",[t._v("int")]),t._v("值被生成，就像调用方法"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#nextInt--"}},[a("code",[t._v("nextInt()")])]),t._v("的结果"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#nextInt--"}},[t._v("一样")]),t._v(" 。")],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[a("code",[t._v("streamSize")]),t._v(" - 要生成的值的数量")])]),t._v(" "),a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("一串 "),a("code",[t._v("int")]),t._v("值")])]),t._v(" "),a("li",[a("p",[t._v("异常")]),t._v(" "),a("p",[a("code",[t._v("IllegalArgumentException")]),t._v("  - 如果 "),a("code",[t._v("streamSize")]),t._v("小于零")])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.8")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("h2",{attrs:{id:"ints-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ints-2"}},[t._v("#")]),t._v(" ints")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public IntStream ints()\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("返回一个有效的无限流的伪"),a("code",[t._v("int")]),t._v("值。")]),t._v(" "),a("p",[t._v("伪随机"),a("code",[t._v("int")]),t._v("值被生成，就像调用方法"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#nextInt--"}},[a("code",[t._v("nextInt()")])]),t._v("的结果"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#nextInt--"}},[t._v("一样")]),t._v(" 。")],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("Implementation Note:")]),t._v(" "),a("p",[t._v("该方法实现等同于 "),a("code",[t._v("ints(Long.MAX_VALUE)")]),t._v(" 。")])]),t._v(" "),a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("一串 "),a("code",[t._v("int")]),t._v("值")])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.8")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("h2",{attrs:{id:"ints-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ints-3"}},[t._v("#")]),t._v(" ints")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public IntStream ints(long streamSize,\n                      int randomNumberOrigin,\n                      int randomNumberBound)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("返回一个流，产生给定的"),a("code",[t._v("streamSize")]),t._v("伪"),a("code",[t._v("int")]),t._v("数值"),a("code",[t._v("int")]),t._v("  ，每个值符合给定的起始（包括）和绑定（排他）。")]),t._v(" "),a("p",[t._v("伪随机"),a("code",[t._v("int")]),t._v("值被生成，就像它是使用原始和绑定调用以下方法的结果一样：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   int nextInt(int origin, int bound) { int n = bound - origin; if (n > 0) { return nextInt(n) + origin; } else { // range not representable as int int r; do { r = nextInt(); } while (r < origin || r >= bound); return r; } } \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[a("code",[t._v("streamSize")]),t._v(" - 要生成的值的数量")]),t._v(" "),a("p",[a("code",[t._v("randomNumberOrigin")]),t._v(" - 每个随机值的起始（含）")]),t._v(" "),a("p",[a("code",[t._v("randomNumberBound")]),t._v(" - 每个随机值的绑定（排他）")])]),t._v(" "),a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("一个伪 "),a("code",[t._v("int")]),t._v("的流量 "),a("code",[t._v("int")]),t._v(" ，每个都有给定的来源（包括）和绑定（排他）")])]),t._v(" "),a("li",[a("p",[t._v("异常")]),t._v(" "),a("p",[a("code",[t._v("IllegalArgumentException")]),t._v("  - 如果 "),a("code",[t._v("streamSize")]),t._v("小于零，或 "),a("code",[t._v("randomNumberOrigin")]),t._v("大于等于  "),a("code",[t._v("randomNumberBound")])])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.8")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("h2",{attrs:{id:"ints-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ints-4"}},[t._v("#")]),t._v(" ints")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public IntStream ints(int randomNumberOrigin,\n                      int randomNumberBound)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("返回一个有效的无限流的伪随机"),a("code",[t._v("int")]),t._v("值，每个符合给定的起始（包括）和绑定（排他）。")]),t._v(" "),a("p",[t._v("伪随机"),a("code",[t._v("int")]),t._v("值被生成，就像它是使用原点和边界调用以下方法的结果一样：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   int nextInt(int origin, int bound) { int n = bound - origin; if (n > 0) { return nextInt(n) + origin; } else { // range not representable as int int r; do { r = nextInt(); } while (r < origin || r >= bound); return r; } } \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("Implementation Note:")]),t._v(" "),a("p",[t._v("该方法被实现为等同于 "),a("code",[t._v("ints(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)")]),t._v(" 。")])]),t._v(" "),a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[a("code",[t._v("randomNumberOrigin")]),t._v(" - 每个随机值的起点（含）")]),t._v(" "),a("p",[a("code",[t._v("randomNumberBound")]),t._v(" - 每个随机值的绑定（排他）")])]),t._v(" "),a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("一个伪 "),a("code",[t._v("int")]),t._v("流（int），每个都有给定的来源（包括）和绑定（排他）")])]),t._v(" "),a("li",[a("p",[t._v("异常")]),t._v(" "),a("p",[a("code",[t._v("IllegalArgumentException")]),t._v("  - 如果 "),a("code",[t._v("randomNumberOrigin")]),t._v("大于或等于 "),a("code",[t._v("randomNumberBound")])])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.8")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("h2",{attrs:{id:"longs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#longs"}},[t._v("#")]),t._v(" longs")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public LongStream longs(long streamSize)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("返回一个流，产生给定的"),a("code",[t._v("streamSize")]),t._v("数"),a("code",[t._v("long")]),t._v("数值。")]),t._v(" "),a("p",[t._v("伪随机"),a("code",[t._v("long")]),t._v("值被生成，就像调用方法"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#nextLong--"}},[a("code",[t._v("nextLong()")])]),t._v("的结果"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#nextLong--"}},[t._v("一样")]),t._v(" 。")],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[a("code",[t._v("streamSize")]),t._v(" - 要生成的值的数量")])]),t._v(" "),a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("一串 "),a("code",[t._v("long")]),t._v("值")])]),t._v(" "),a("li",[a("p",[t._v("异常")]),t._v(" "),a("p",[a("code",[t._v("IllegalArgumentException")]),t._v("  - 如果 "),a("code",[t._v("streamSize")]),t._v("小于零")])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.8")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("h2",{attrs:{id:"longs-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#longs-2"}},[t._v("#")]),t._v(" longs")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public LongStream longs()\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("返回一个有效的无限流的伪"),a("code",[t._v("long")]),t._v("值。")]),t._v(" "),a("p",[t._v("伪随机"),a("code",[t._v("long")]),t._v("值被生成，就像调用方法"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#nextLong--"}},[a("code",[t._v("nextLong()")])]),t._v("的结果"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#nextLong--"}},[t._v("一样")]),t._v(" 。")],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("Implementation Note:")]),t._v(" "),a("p",[t._v("该方法实现等于 "),a("code",[t._v("longs(Long.MAX_VALUE)")]),t._v(" 。")])]),t._v(" "),a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("一串 "),a("code",[t._v("long")]),t._v("值")])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.8")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("h2",{attrs:{id:"longs-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#longs-3"}},[t._v("#")]),t._v(" longs")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public LongStream longs(long streamSize,\n                        long randomNumberOrigin,\n                        long randomNumberBound)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("返回一个流，产生给定的"),a("code",[t._v("streamSize")]),t._v("数"),a("code",[t._v("long")]),t._v("  ，每个符合给定的起始（包括）和绑定（排他）。")]),t._v(" "),a("p",[t._v("伪随机"),a("code",[t._v("long")]),t._v("值被生成，就像它是使用原点和边界调用以下方法的结果一样：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   long nextLong(long origin, long bound) { long r = nextLong(); long n = bound - origin, m = n - 1; if ((n & m) == 0L) // power of two r = (r & m) + origin; else if (n > 0L) { // reject over-represented candidates for (long u = r >>> 1; // ensure nonnegative u + m - (r = u % n) < 0L; // rejection check u = nextLong() >>> 1) // retry ; r += origin; } else { // range not representable as long while (r < origin || r >= bound) r = nextLong(); } return r; } \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[a("code",[t._v("streamSize")]),t._v(" - 要生成的值的数量")]),t._v(" "),a("p",[a("code",[t._v("randomNumberOrigin")]),t._v(" - 每个随机值的起点（含）")]),t._v(" "),a("p",[a("code",[t._v("randomNumberBound")]),t._v(" - 每个随机值的绑定（排他）")])]),t._v(" "),a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("一个伪 "),a("code",[t._v("long")]),t._v("流long，每个都有给定的来源（包括）和绑定（排他）")])]),t._v(" "),a("li",[a("p",[t._v("异常")]),t._v(" "),a("p",[a("code",[t._v("IllegalArgumentException")]),t._v("  - 如果 "),a("code",[t._v("streamSize")]),t._v("小于零，或 "),a("code",[t._v("randomNumberOrigin")]),t._v("大于或等于  "),a("code",[t._v("randomNumberBound")])])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.8")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("h2",{attrs:{id:"longs-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#longs-4"}},[t._v("#")]),t._v(" longs")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public LongStream longs(long randomNumberOrigin,\n                        long randomNumberBound)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("返回一个有效的无限流伪"),a("code",[t._v("long")]),t._v("值"),a("code",[t._v("long")]),t._v("  ，每个值都符合给定的起始（包括）和绑定（排他）。")]),t._v(" "),a("p",[t._v("伪随机"),a("code",[t._v("long")]),t._v("值被生成，就像是使用原点和边界调用以下方法的结果一样：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   long nextLong(long origin, long bound) { long r = nextLong(); long n = bound - origin, m = n - 1; if ((n & m) == 0L) // power of two r = (r & m) + origin; else if (n > 0L) { // reject over-represented candidates for (long u = r >>> 1; // ensure nonnegative u + m - (r = u % n) < 0L; // rejection check u = nextLong() >>> 1) // retry ; r += origin; } else { // range not representable as long while (r < origin || r >= bound) r = nextLong(); } return r; } \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("Implementation Note:")]),t._v(" "),a("p",[t._v("该方法实现等同于 "),a("code",[t._v("longs(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)")]),t._v(" 。")])]),t._v(" "),a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[a("code",[t._v("randomNumberOrigin")]),t._v(" - 每个随机值的起点（含）")]),t._v(" "),a("p",[a("code",[t._v("randomNumberBound")]),t._v(" - 每个随机值的绑定（排他）")])]),t._v(" "),a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("一个伪 "),a("code",[t._v("long")]),t._v("流（long），每个都有给定的来源（包括）和绑定（排他）")])]),t._v(" "),a("li",[a("p",[t._v("异常")]),t._v(" "),a("p",[a("code",[t._v("IllegalArgumentException")]),t._v("  - 如果 "),a("code",[t._v("randomNumberOrigin")]),t._v("大于或等于 "),a("code",[t._v("randomNumberBound")])])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.8")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("h2",{attrs:{id:"doubles"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#doubles"}},[t._v("#")]),t._v(" doubles")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public DoubleStream doubles(long streamSize)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("返回一个流，产生给定的"),a("code",[t._v("streamSize")]),t._v("数"),a("code",[t._v("double")]),t._v("值，每个值在零（包括）和一（独占）之间。")]),t._v(" "),a("p",[t._v("伪随机"),a("code",[t._v("double")]),t._v("值被生成，就像调用方法"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#nextDouble--"}},[a("code",[t._v("nextDouble()")])]),t._v("的结果"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#nextDouble--"}},[t._v("一样")]),t._v(" 。")],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[a("code",[t._v("streamSize")]),t._v(" - 要生成的值的数量")])]),t._v(" "),a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[a("code",[t._v("double")]),t._v("值")])]),t._v(" "),a("li",[a("p",[t._v("异常")]),t._v(" "),a("p",[a("code",[t._v("IllegalArgumentException")]),t._v("  - 如果 "),a("code",[t._v("streamSize")]),t._v("小于零")])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.8")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("h2",{attrs:{id:"doubles-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#doubles-2"}},[t._v("#")]),t._v(" doubles")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public DoubleStream doubles()\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("返回一个有效地无限制的伪随机流"),a("code",[t._v("double")]),t._v("值，每个值在零（包括）和一（独占）之间。")]),t._v(" "),a("p",[t._v("伪随机"),a("code",[t._v("double")]),t._v("值被生成，就像调用方法"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#nextDouble--"}},[a("code",[t._v("nextDouble()")])]),t._v("的结果"),a("RouterLink",{attrs:{to:"/01.Java/java/util/Random.html#nextDouble--"}},[t._v("一样")]),t._v(" 。")],1),t._v(" "),a("ul",[a("li",[a("p",[t._v("Implementation Note:")]),t._v(" "),a("p",[t._v("该方法实现等同于 "),a("code",[t._v("doubles(Long.MAX_VALUE)")]),t._v(" 。")])]),t._v(" "),a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("一串 "),a("code",[t._v("double")]),t._v("值")])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.8")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("h2",{attrs:{id:"doubles-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#doubles-3"}},[t._v("#")]),t._v(" doubles")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public DoubleStream doubles(long streamSize,\n                            double randomNumberOrigin,\n                            double randomNumberBound)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("返回一个流，产生给定的"),a("code",[t._v("streamSize")]),t._v("伪"),a("code",[t._v("double")]),t._v("数值"),a("code",[t._v("double")]),t._v("  ，每个值符合给定的起始（包括）和绑定（排他）。")]),t._v(" "),a("p",[t._v("伪随机"),a("code",[t._v("double")]),t._v("值被生成，就好像它是使用原点和边界调用以下方法的结果一样：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   double nextDouble(double origin, double bound) { double r = nextDouble(); r = r * (bound - origin) + origin; if (r >= bound) // correct for rounding r = Math.nextDown(bound); return r; } \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[a("code",[t._v("streamSize")]),t._v(" - 要生成的值的数量")]),t._v(" "),a("p",[a("code",[t._v("randomNumberOrigin")]),t._v(" - 每个随机值的起始（含）")]),t._v(" "),a("p",[a("code",[t._v("randomNumberBound")]),t._v(" - 每个随机值的绑定（排他）")])]),t._v(" "),a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("一个伪 "),a("code",[t._v("double")]),t._v("流（double），每个都有给定的来源（包括）和绑定（排他）")])]),t._v(" "),a("li",[a("p",[t._v("异常")]),t._v(" "),a("p",[a("code",[t._v("IllegalArgumentException")]),t._v("  - 如果 "),a("code",[t._v("streamSize")]),t._v("小于零")]),t._v(" "),a("p",[a("code",[t._v("IllegalArgumentException")]),t._v("  - 如果 "),a("code",[t._v("randomNumberOrigin")]),t._v("大于等于 "),a("code",[t._v("randomNumberBound")])])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.8")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])]),t._v(" "),a("h2",{attrs:{id:"doubles-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#doubles-4"}},[t._v("#")]),t._v(" doubles")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public DoubleStream doubles(double randomNumberOrigin,\n                            double randomNumberBound)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("返回一个有效的无限流伪"),a("code",[t._v("double")]),t._v("值"),a("code",[t._v("double")]),t._v("  ，每个值都符合给定的起始（包括）和绑定（排除）。")]),t._v(" "),a("p",[t._v("伪随机"),a("code",[t._v("double")]),t._v("值被生成，就像它是使用原点和边界调用以下方法的结果一样：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   double nextDouble(double origin, double bound) { double r = nextDouble(); r = r * (bound - origin) + origin; if (r >= bound) // correct for rounding r = Math.nextDown(bound); return r; } \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("Implementation Note:")]),t._v(" "),a("p",[t._v("该方法实现等于 "),a("code",[t._v("doubles(Long.MAX_VALUE, randomNumberOrigin, randomNumberBound)")]),t._v(" 。")])]),t._v(" "),a("li",[a("p",[t._v("参数")]),t._v(" "),a("p",[a("code",[t._v("randomNumberOrigin")]),t._v(" - 每个随机值的起始（含）")]),t._v(" "),a("p",[a("code",[t._v("randomNumberBound")]),t._v(" - 每个随机值的绑定（排他）")])]),t._v(" "),a("li",[a("p",[t._v("结果")]),t._v(" "),a("p",[t._v("一个伪 "),a("code",[t._v("double")]),t._v("流double，每个都有给定的起源（包括）和绑定（独占）")])]),t._v(" "),a("li",[a("p",[t._v("异常")]),t._v(" "),a("p",[a("code",[t._v("IllegalArgumentException")]),t._v("  - 如果 "),a("code",[t._v("randomNumberOrigin")]),t._v("大于或等于 "),a("code",[t._v("randomNumberBound")])])]),t._v(" "),a("li",[a("p",[t._v("从以下版本开始：")]),t._v(" "),a("p",[t._v("1.8")])])]),t._v(" "),a("p",[a("strong",[t._v("代码示例:")])])])}),[],!1,null,null,null);s.default=e.exports}}]);
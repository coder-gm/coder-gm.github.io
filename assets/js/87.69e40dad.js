(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{708:function(s,t,a){"use strict";a.r(t);var n=a(33),_=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"第1章-创建和管理表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第1章-创建和管理表"}},[s._v("#")]),s._v(" 第1章 创建和管理表")]),s._v(" "),a("h2",{attrs:{id:"_1-基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-基础知识"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1.")]),s._v(" "),a("strong",[s._v("基础知识")])]),s._v(" "),a("h3",{attrs:{id:"_1-1-标识符命名规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-标识符命名规则"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1.1")]),s._v(" "),a("strong",[s._v("标识符命名规则")])]),s._v(" "),a("ul",[a("li",[s._v("数据库名、表名不得超过30个字符，变量名限制为29个")]),s._v(" "),a("li",[s._v("必须只能包含 A–Z, a–z, 0–9, _共63个字符")]),s._v(" "),a("li",[s._v("数据库名、表名、字段名等对象名中间不要包含空格")]),s._v(" "),a("li",[s._v("同一个MySQL软件中，数据库不能同名；同一个库中，表不能重名；同一个表中，字段不能重名")]),s._v(" "),a("li",[s._v("必须保证你的字段没有和保留字、数据库系统或常用方法冲突。如果坚持使用，请在SQL语句中使用`（着重号）引起来")]),s._v(" "),a("li",[s._v("保持字段名和类型的一致性：在命名字段并为其指定数据类型的时候一定要保证一致性，假如数据类型在一个表里是整数，那在另一个表里可就别变成字符型了")])]),s._v(" "),a("h2",{attrs:{id:"_2-创建和管理数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建和管理数据库"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.")]),s._v(" "),a("strong",[s._v("创建和管理数据库")])]),s._v(" "),a("h3",{attrs:{id:"_2-1-创建数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-创建数据库"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.1")]),s._v(" "),a("strong",[s._v("创建数据库")])]),s._v(" "),a("ul",[a("li",[s._v("方式1：创建数据库")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("方式2：创建数据库并指定字符集")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" 数据库名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARACTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" 字符集"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("方式3：判断数据库是否已经存在，不存在则创建数据库（"),a("code",[s._v("推荐")]),s._v("）")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("注意：DATABASE 不能改名。一些可视化工具可以改名，它是建新库，把所有表复制到新库，再删旧库完成的")])]),s._v(" "),a("h3",{attrs:{id:"_2-2-使用数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-使用数据库"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.2")]),s._v(" "),a("strong",[s._v("使用数据库")])]),s._v(" "),a("ul",[a("li",[s._v("查看当前所有的数据库")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#有一个S，代表多个数据库")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("查看当前正在使用的数据库")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#使用的一个 mysql 中的全局函数")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("查看指定库下所有的表")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("查看数据库的创建信息")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n或者： \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" 数据库名\\G\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("使用/切换数据库")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USE")]),s._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("blockquote",[a("p",[s._v("注意：要操作表格和数据之前必须先说明是对哪个数据库进行操作，否则就要对所有对象加上“数据库名.”。")])]),s._v(" "),a("h3",{attrs:{id:"_2-3-修改数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-修改数据库"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.3")]),s._v(" "),a("strong",[s._v("修改数据库")])]),s._v(" "),a("ul",[a("li",[s._v("更改数据库字符集")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" 数据库名 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CHARACTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" 字符集"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#比如：gbk、utf8等")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_2-4-删除数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-删除数据库"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.4")]),s._v(" "),a("strong",[s._v("删除数据库")])]),s._v(" "),a("ul",[a("li",[s._v("方式1：删除指定的数据库")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("方式2：删除指定的数据库（"),a("code",[s._v("推荐")]),s._v("）")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATABASE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),s._v(" 数据库名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"_3-创建表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建表"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.")]),s._v(" "),a("strong",[s._v("创建表")])]),s._v(" "),a("h3",{attrs:{id:"_3-1-创建方式1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-创建方式1"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.1")]),s._v(" "),a("strong",[s._v("创建方式1")])]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("必须具备：")]),s._v(" "),a("ul",[a("li",[s._v("CREATE TABLE权限")]),s._v(" "),a("li",[s._v("存储空间")])])]),s._v(" "),a("li",[a("strong",[s._v("语法格式：")])])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("NOT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n    字段"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 数据类型 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("约束条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("默认值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n    字段"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 数据类型 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("约束条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("默认值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n    字段"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 数据类型 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("约束条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("默认值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n    ……\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("表约束条件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("blockquote",[a("p",[s._v("加上了IF NOT EXISTS关键字，则表示：如果当前数据库中不存在要创建的数据表，则创建数据表；如果当前数据库中已经存在要创建的数据表，则忽略建表语句，不再创建数据表。")])]),s._v(" "),a("h3",{attrs:{id:"_3-2-创建方式2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-创建方式2"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.2")]),s._v(" "),a("strong",[s._v("创建方式2")])]),s._v(" "),a("ul",[a("li",[s._v("使用 AS subquery 选项，"),a("strong",[s._v("将创建表和插入数据结合起来")])])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" subquery"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("指定的列和子查询中的列要一一对应")]),s._v(" "),a("li",[s._v("通过列名和默认值定义列")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" emp1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" emp2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 创建的emp2是空表")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"_3-3-查看数据表结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-查看数据表结构"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.3")]),s._v(" "),a("strong",[s._v("查看数据表结构")])]),s._v(" "),a("p",[s._v("在MySQL中创建好数据表之后，可以查看数据表的结构。MySQL支持使用"),a("code",[s._v("DESCRIBE/DESC")]),s._v("语句查看数据表结构，也支持使用"),a("code",[s._v("SHOW CREATE TABLE")]),s._v("语句查看数据表结构。")]),s._v(" "),a("p",[s._v("语法格式如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" 表名\\G\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("使用SHOW CREATE TABLE语句不仅可以查看表创建时的详细语句，还可以查看存储引擎和字符编码。")]),s._v(" "),a("h2",{attrs:{id:"_4-修改表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-修改表"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.")]),s._v(" "),a("strong",[s._v("修改表")])]),s._v(" "),a("h3",{attrs:{id:"_4-1-追加一个列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-追加一个列"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.1")]),s._v(" "),a("strong",[s._v("追加一个列")])]),s._v(" "),a("p",[s._v("语法格式如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" 表名\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLUMN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 字段名 字段类型 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FIRST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AFTER")]),s._v(" 字段名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_4-2-修改一个列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-修改一个列"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.2")]),s._v(" "),a("strong",[s._v("修改一个列")])]),s._v(" "),a("ul",[a("li",[s._v("修改字段数据类型、长度、默认值、位置的语法格式如下：")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" 表名\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MODIFY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLUMN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 字段名"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 字段类型 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),s._v(" 默认值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FIRST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AFTER")]),s._v(" 字段名 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("对默认值的修改只影响今后对表的修改")])]),s._v(" "),a("h3",{attrs:{id:"_4-3-重命名一个列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-重命名一个列"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.3")]),s._v(" "),a("strong",[s._v("重命名一个列")])]),s._v(" "),a("ul",[a("li",[s._v("语法格式如下：")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" 表名\nCHANGE "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 列名 新列名 新数据类型"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_4-4-删除一个列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-删除一个列"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.4")]),s._v(" "),a("strong",[s._v("删除一个列")])]),s._v(" "),a("ul",[a("li",[s._v("语法格式如下：")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" 表名 \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COLUMN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 字段名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"_5-重命名表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-重命名表"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.")]),s._v(" "),a("strong",[s._v("重命名表")])]),s._v(" "),a("ul",[a("li",[s._v("方式一：使用RENAME（"),a("code",[s._v("推荐")]),s._v("）")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RENAME")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" emp "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TO")]),s._v(" myemp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("方式二：")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" dept\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RENAME")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TO")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" detail_dept"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- [TO]可以省略")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"_6-删除表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-删除表"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.")]),s._v(" "),a("strong",[s._v("删除表")])]),s._v(" "),a("ul",[a("li",[s._v("在MySQL中，当一张数据表"),a("code",[s._v("没有与其他任何数据表形成关联关系")]),s._v("时，可以将当前数据表直接删除。")]),s._v(" "),a("li",[s._v("数据和结构都被删除")]),s._v(" "),a("li",[s._v("所有正在运行的相关事务被提交")]),s._v(" "),a("li",[s._v("所有相关索引被删除")]),s._v(" "),a("li",[s._v("语法格式：")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DROP")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("IF")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXISTS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 数据表"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 数据表"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 数据表n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("IF EXISTS")]),s._v("的含义为：如果当前数据库中存在相应的数据表，则删除数据表；如果当前数据库中不存在相应的数据表，则忽略删除语句，不再执行删除数据表的操作。")]),s._v(" "),a("ul",[a("li",[s._v("DROP TABLE 语句不能回滚")])]),s._v(" "),a("h2",{attrs:{id:"_7-清空表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-清空表"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7.")]),s._v(" "),a("strong",[s._v("清空表")])]),s._v(" "),a("ul",[a("li",[s._v("TRUNCATE TABLE语句：\n"),a("ul",[a("li",[s._v("删除表中所有的数据")]),s._v(" "),a("li",[s._v("释放表的存储空间")])])]),s._v(" "),a("li",[s._v("举例：")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TRUNCATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" detail_dept"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("TRUNCATE语句"),a("strong",[s._v("不能回滚")]),s._v("，而使用 DELETE 语句删除数据，可以回滚")]),s._v(" "),a("li",[s._v("COMMIT:提交数据。一旦执行COMMIT，则数据就被永久的保存在了数据库中，意味着数据不可以回滚。")]),s._v(" "),a("li",[s._v("ROLLBACK:回滚数据。一旦执行ROLLBACK,则可以实现数据的回滚。回滚到最近的一次COMMIT之后。")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" autocommit "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("FALSE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" emp2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#TRUNCATE TABLE emp2; ")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" emp2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ROLLBACK")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" emp2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[a("strong",[s._v("DDL 和 DML 的说明")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("DDL的操作一旦执行，就不可回滚。指令SET autocommit = FALSE对DDL操作失效。(因为在执行完DDL操作之后，一定会执行一次COMMIT。而此COMMIT操作不受SET autocommit = FALSE影响的。)")])]),s._v(" "),a("li",[a("p",[s._v("DML的操作默认情况，一旦执行，也是不可回滚的。但是，如果在执行DML之前，执行了 SET autocommit = FALSE，则执行的DML操作就可以实现回滚。")])])]),s._v(" "),a("blockquote",[a("p",[s._v("阿里开发规范：")]),s._v(" "),a("p",[s._v("【参考】TRUNCATE TABLE 比 DELETE 速度快，且使用的系统和事务日志资源少，但 TRUNCATE 无事务且不触发 TRIGGER，有可能造成事故，故不建议在开发代码中使用此语句。")]),s._v(" "),a("p",[s._v("说明：TRUNCATE TABLE 在功能上与不带 WHERE 子句的 DELETE 语句相同。")])]),s._v(" "),a("h2",{attrs:{id:"_8-内容拓展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-内容拓展"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8.")]),s._v(" "),a("strong",[s._v("内容拓展")])]),s._v(" "),a("p",[a("strong",[s._v("拓展1：阿里巴巴《Java开发手册》之MySQL字段命名")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("【"),a("code",[s._v("强制")]),s._v("】表名、字段名必须使用小写字母或数字，禁止出现数字开头，禁止两个下划线中间只出现数字。数据库字段名的修改代价很大，因为无法进行预发布，所以字段名称需要慎重考虑。")]),s._v(" "),a("ul",[a("li",[s._v("正例：aliyun_admin，rdc_config，level3_name")]),s._v(" "),a("li",[s._v("反例：AliyunAdmin，rdcConfig，level_3_name")])])]),s._v(" "),a("li",[a("p",[s._v("【"),a("code",[s._v("强制")]),s._v("】禁用保留字，如 desc、range、match、delayed 等，请参考 MySQL 官方保留字。")])]),s._v(" "),a("li",[a("p",[s._v("【"),a("code",[s._v("强制")]),s._v("】表必备三字段：id, gmt_create, gmt_modified。")]),s._v(" "),a("ul",[a("li",[s._v("说明：其中 id 必为主键，类型为BIGINT UNSIGNED、单表时自增、步长为 1。gmt_create, gmt_modified 的类型均为 DATETIME 类型，前者现在时表示主动式创建，后者过去分词表示被动式更新")])])]),s._v(" "),a("li",[a("p",[s._v("【"),a("code",[s._v("推荐")]),s._v("】表的命名最好是遵循 “业务名称_表的作用”。")]),s._v(" "),a("ul",[a("li",[s._v("正例：alipay_task 、 force_project、 trade_config")])])]),s._v(" "),a("li",[a("p",[s._v("【"),a("code",[s._v("推荐")]),s._v("】库名与应用名称尽量一致。")])]),s._v(" "),a("li",[a("p",[s._v("【参考】合适的字符存储长度，不但节约数据库表空间、节约索引存储，更重要的是提升检索速度。")])])]),s._v(" "),a("p",[a("strong",[s._v("拓展2：如何理解清空表、删除表等操作需谨慎？！")])]),s._v(" "),a("p",[a("code",[s._v("表删除")]),s._v("操作将把表的定义和表中的数据一起删除，并且MySQL在执行删除操作时，不会有任何的确认信息提示，因此执行删除操作时应当慎重。在删除表前，最好对表中的数据进行"),a("code",[s._v("备份")]),s._v("，这样当操作失误时可以对数据进行恢复，以免造成无法挽回的后果。")]),s._v(" "),a("p",[s._v("同样的，在使用"),a("code",[s._v("ALTER TABLE")]),s._v("进行表的基本修改操作时，在执行操作过程之前，也应该确保对数据进行完整的"),a("code",[s._v("备份")]),s._v("，因为数据库的改变是"),a("code",[s._v("无法撤销")]),s._v("的，如果添加了一个不需要的字段，可以将其删除；相同的，如果删除了一个需要的列，该列下面的所有数据都将会丢失。")]),s._v(" "),a("p",[a("strong",[s._v("拓展3：MySQL8新特性—DDL的原子化")])]),s._v(" "),a("p",[s._v("在MySQL 8.0版本中，InnoDB表的DDL支持事务完整性，即"),a("code",[s._v("DDL操作要么成功要么回滚")]),s._v("。DDL操作回滚日志写入到data dictionary数据字典表mysql.innodb_ddl_log（该表是隐藏的表，通过show tables无法看到）中，用于回滚操作。通过设置参数，可将DDL操作日志打印输出到MySQL错误日志中。")]),s._v(" "),a("h1",{attrs:{id:"第2章-数据处理之增删改"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第2章-数据处理之增删改"}},[s._v("#")]),s._v(" 第2章 数据处理之增删改")]),s._v(" "),a("h2",{attrs:{id:"_1-插入数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-插入数据"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1.")]),s._v(" "),a("strong",[s._v("插入数据")])]),s._v(" "),a("h3",{attrs:{id:"_1-1-方式1-values的方式添加"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-方式1-values的方式添加"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1.1")]),s._v(" "),a("strong",[s._v("方式1：VALUES的方式添加")])]),s._v(" "),a("p",[s._v("使用这种语法一次只能向表中插入"),a("strong",[s._v("一条")]),s._v("数据。")]),s._v(" "),a("p",[a("strong",[s._v("情况1：为表的所有字段按默认顺序插入数据")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" 表名 \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("value2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("值列表中需要为表的每一个字段指定值，并且值的顺序必须和数据表中字段定义时的顺序相同。")]),s._v(" "),a("p",[a("strong",[s._v("情况2：为表的指定字段插入数据（推荐）")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" 表名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" column2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" columnn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("value2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" valuen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("为表的指定字段插入数据，就是在INSERT语句中只向部分字段中插入值，而其他字段的值为表定义时的默认值。")]),s._v(" "),a("p",[a("strong",[s._v("情况3：同时插入多条记录（推荐）")])]),s._v(" "),a("p",[s._v("INSERT语句可以同时向数据表中插入多条记录，插入时指定多个值列表，每个值列表之间用逗号分隔开，基本语法格式如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" table_name \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("value2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" valuen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("value2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" valuen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n……\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("value2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" valuen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("或者")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" table_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" column2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" columnn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("value2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" valuen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("value2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" valuen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n……\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("value2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" valuen"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("blockquote",[a("p",[s._v("一个同时插入多行记录的INSERT语句等同于多个单行插入的INSERT语句，但是多行的INSERT语句在处理过程中"),a("code",[s._v("效率更高")]),s._v("。因为MySQL执行单条INSERT语句插入多行数据比使用多条INSERT语句快，所以在插入多条记录时最好选择使用单条INSERT语句的方式插入。")]),s._v(" "),a("p",[s._v("VALUES 也可以写成 VALUE ，但是VALUES是标准写法。")])]),s._v(" "),a("h3",{attrs:{id:"_1-2-方式2-将查询结果插入到表中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-方式2-将查询结果插入到表中"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1.2")]),s._v(" "),a("strong",[s._v("方式2：将查询结果插入到表中")])]),s._v(" "),a("p",[s._v("INSERT还可以将SELECT语句查询的结果插入到表中，此时不需要把每一条记录的值一个一个输入，只需要使用一条INSERT语句和一条SELECT语句组成的组合语句即可快速地从一个或多个表中向一个表中插入多行。")]),s._v(" "),a("p",[s._v("基本语法格式如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" 目标表名 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("tar_column1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tar_column2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" tar_columnn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("src_column1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" src_column2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" …"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" src_columnn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" 源表名\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("在 INSERT 语句中加入子查询。")]),s._v(" "),a("li",[a("strong",[s._v("不必书写")]),s._v(" "),a("strong",[s._v("VALUES")]),s._v(" "),a("strong",[s._v("子句。")])]),s._v(" "),a("li",[s._v("子查询中的值列表应与 INSERT 子句中的列名对应。")])]),s._v(" "),a("p",[s._v("举例：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" emp2 \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" department_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" sales_reps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" commission_pct"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" employee_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" last_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" commission_pct \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" employees \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" job_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("LIKE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%REP%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("blockquote",[a("p",[s._v("说明：emp2表中要添加数据的字段的长度不能低于employees表中查询的字段的长度。")]),s._v(" "),a("p",[s._v("如果emp2表中要添加数据的字段的长度低于employees表中查询的字段的长度的话，就有添加不成功的风险。")])]),s._v(" "),a("h2",{attrs:{id:"_2-更新数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-更新数据"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.")]),s._v(" "),a("strong",[s._v("更新数据")])]),s._v(" "),a("ul",[a("li",[s._v("使用 UPDATE 语句更新数据。语法如下：")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" table_name \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" column1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" column2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" … "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("valuen \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" condition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("可以一次更新"),a("strong",[s._v("多条")]),s._v("数据。")]),s._v(" "),a("li",[s._v("如果需要回滚数据，需要保证在DML前，进行设置："),a("strong",[s._v("SET AUTOCOMMIT = FALSE;")])]),s._v(" "),a("li",[s._v("使用 "),a("strong",[s._v("WHERE")]),s._v(" 子句指定需要更新的数据。")]),s._v(" "),a("li",[s._v("如果省略 WHERE 子句，则表中的所有数据都将被更新。")])]),s._v(" "),a("h2",{attrs:{id:"_3-删除数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-删除数据"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.")]),s._v(" "),a("strong",[s._v("删除数据")])]),s._v(" "),a("ul",[a("li",[s._v("使用 DELETE 语句从表中删除数据")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" table_name "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("condition"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("使用 WHERE 子句删除指定的记录。")]),s._v(" "),a("li",[s._v("如果省略 WHERE 子句，则表中的全部数据将被删除")])]),s._v(" "),a("h2",{attrs:{id:"_4-mysql8新特性-计算列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-mysql8新特性-计算列"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4. MySQL8新特性：计算列")])]),s._v(" "),a("p",[s._v("什么叫计算列呢？简单来说就是某一列的值是通过别的列计算得来的。例如，a列值为1、b列值为2，c列不需要手动插入，定义a+b的结果为c的值，那么c就是计算列，是通过别的列计算得来的。")]),s._v(" "),a("p",[s._v("在MySQL 8.0中，CREATE TABLE 和 ALTER TABLE 中都支持增加计算列。下面以CREATE TABLE为例进行讲解。")]),s._v(" "),a("p",[s._v("举例：定义数据表tb1，然后定义字段id、字段a、字段b和字段c，其中字段c为计算列，用于计算a+b的值。 首先创建测试表tb1，语句如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" tb1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n    id "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n    a "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n    b "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n    c "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" GENERATED ALWAYS "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" VIRTUAL \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("插入演示数据，语句如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" tb1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查询数据表tb1中的数据，结果如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" tb1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------+------+------+------+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" id   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" a    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" b    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" c    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------+------+------+------+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------+------+------+------+")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("更新数据中的数据，语句如下：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("mysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" tb1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nmysql"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" tb1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------+------+------+------+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" id   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" a    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" b    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" c    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------+------+------+------+")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("500")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("700")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------+------+------+------+")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h1",{attrs:{id:"第3章-mysql数据类型精讲"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第3章-mysql数据类型精讲"}},[s._v("#")]),s._v(" 第3章 MySQL数据类型精讲")]),s._v(" "),a("h2",{attrs:{id:"_1-mysql中的数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-mysql中的数据类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1. MySQL中的数据类型")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("类型")]),s._v(" "),a("th",[s._v("类型举例")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("整数类型")]),s._v(" "),a("td",[s._v("TINYINT、SMALLINT、MEDIUMINT、"),a("strong",[s._v("INT(或INTEGER)")]),s._v("、BIGINT")])]),s._v(" "),a("tr",[a("td",[s._v("浮点类型")]),s._v(" "),a("td",[s._v("FLOAT、DOUBLE")])]),s._v(" "),a("tr",[a("td",[s._v("定点数类型")]),s._v(" "),a("td",[a("strong",[s._v("DECIMAL")])])]),s._v(" "),a("tr",[a("td",[s._v("位类型")]),s._v(" "),a("td",[s._v("BIT")])]),s._v(" "),a("tr",[a("td",[s._v("日期时间类型")]),s._v(" "),a("td",[s._v("YEAR、TIME、DATE、"),a("strong",[s._v("DATETIME")]),s._v("、TIMESTAMP")])]),s._v(" "),a("tr",[a("td",[s._v("文本字符串类型")]),s._v(" "),a("td",[s._v("CHAR、"),a("strong",[s._v("VARCHAR")]),s._v("、TINYTEXT、TEXT、MEDIUMTEXT、LONGTEXT")])]),s._v(" "),a("tr",[a("td",[s._v("枚举类型")]),s._v(" "),a("td",[s._v("ENUM")])]),s._v(" "),a("tr",[a("td",[s._v("集合类型")]),s._v(" "),a("td",[s._v("SET")])]),s._v(" "),a("tr",[a("td",[s._v("二进制字符串类")]),s._v(" "),a("td",[s._v("BINARY、VARBINARY、TINYBLOB、BLOB、MEDIUMBLOB、LONGBLOB")])]),s._v(" "),a("tr",[a("td",[s._v("JSON类型")]),s._v(" "),a("td",[s._v("JSON对象、JSON数组")])]),s._v(" "),a("tr",[a("td",[s._v("空间数据类型")]),s._v(" "),a("td",[s._v("单值：GEOMETRY、POINT、LINESTRING、POLYGON；"),a("br"),s._v("集合：MULTIPOINT、MULTILINESTRING、MULTIPOLYGON、GEOMETRYCOLLECTION")])])])]),s._v(" "),a("p",[s._v("常见数据类型的属性，如下：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("MySQL关键字")]),s._v(" "),a("th",[s._v("含义")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("NULL")]),s._v(" "),a("td",[s._v("数据列可包含NULL值")])]),s._v(" "),a("tr",[a("td",[s._v("NOT NULL")]),s._v(" "),a("td",[s._v("数据列不允许包含NULL值")])]),s._v(" "),a("tr",[a("td",[s._v("DEFAULT")]),s._v(" "),a("td",[s._v("默认值")])]),s._v(" "),a("tr",[a("td",[s._v("PRIMARY KEY")]),s._v(" "),a("td",[s._v("主键")])]),s._v(" "),a("tr",[a("td",[s._v("AUTO_INCREMENT")]),s._v(" "),a("td",[s._v("自动递增，适用于整数类型")])]),s._v(" "),a("tr",[a("td",[s._v("UNSIGNED")]),s._v(" "),a("td",[s._v("无符号")])]),s._v(" "),a("tr",[a("td",[s._v("CHARACTER SET name")]),s._v(" "),a("td",[s._v("指定一个字符集")])])])]),s._v(" "),a("h2",{attrs:{id:"_2-整数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-整数类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.")]),s._v(" "),a("strong",[s._v("整数类型")])]),s._v(" "),a("h3",{attrs:{id:"_2-1-类型介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-类型介绍"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.1")]),s._v(" "),a("strong",[s._v("类型介绍")])]),s._v(" "),a("p",[s._v("整数类型一共有 5 种，包括 TINYINT、SMALLINT、MEDIUMINT、INT（INTEGER）和 BIGINT。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("整数类型")]),s._v(" "),a("th",[s._v("字节")]),s._v(" "),a("th",[s._v("有符号数取值范围")]),s._v(" "),a("th",[s._v("无符号数取值范围")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("TINYINT")]),s._v(" "),a("td",[s._v("1")]),s._v(" "),a("td",[s._v("-128~127")]),s._v(" "),a("td",[s._v("0~255")])]),s._v(" "),a("tr",[a("td",[s._v("SMALLINT")]),s._v(" "),a("td",[s._v("2")]),s._v(" "),a("td",[s._v("-32768~32767")]),s._v(" "),a("td",[s._v("0~65535")])]),s._v(" "),a("tr",[a("td",[s._v("MEDIUMINT")]),s._v(" "),a("td",[s._v("3")]),s._v(" "),a("td",[s._v("-8388608~8388607")]),s._v(" "),a("td",[s._v("0~16777215")])]),s._v(" "),a("tr",[a("td",[s._v("INT、INTEGER")]),s._v(" "),a("td",[s._v("4")]),s._v(" "),a("td",[s._v("-2147483648~2147483647")]),s._v(" "),a("td",[s._v("0~4294967295")])]),s._v(" "),a("tr",[a("td",[s._v("BIGINT")]),s._v(" "),a("td",[s._v("8")]),s._v(" "),a("td",[s._v("-9223372036854775808~9223372036854775807")]),s._v(" "),a("td",[s._v("0~18446744073709551615")])])])]),s._v(" "),a("h3",{attrs:{id:"_2-2-可选属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-可选属性"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.2")]),s._v(" "),a("strong",[s._v("可选属性")])]),s._v(" "),a("p",[a("strong",[s._v("整数类型的可选属性有三个：")])]),s._v(" "),a("h4",{attrs:{id:"_2-2-1-m"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-m"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.2.1 M")])]),s._v(" "),a("p",[a("code",[s._v("M")]),s._v(": 表示显示宽度，M的取值范围是(0, 255)。例如，int(5)：当数据宽度小于5位的时候在数字前面需要用字符填满宽度。该项功能需要配合“"),a("code",[s._v("ZEROFILL")]),s._v("”使用，表示用“0”填满宽度，否则指定显示宽度无效。")]),s._v(" "),a("p",[s._v("如果设置了显示宽度，那么插入的数据宽度超过显示宽度限制，会不会截断或插入失败？")]),s._v(" "),a("p",[s._v("答案：不会对插入的数据有任何影响，还是按照类型的实际宽度进行保存，即"),a("code",[s._v("显示宽度与类型可以存储的值范围无关")]),s._v("。"),a("strong",[s._v("从MySQL 8.0.17开始，整数数据类型不推荐使用显示宽度属性。")])]),s._v(" "),a("h4",{attrs:{id:"_2-2-2-unsigned"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-unsigned"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.2.2 UNSIGNED")])]),s._v(" "),a("p",[a("code",[s._v("UNSIGNED")]),s._v(": 无符号类型（非负），所有的整数类型都有一个可选的属性UNSIGNED（无符号属性），无符号整数类型的最小取值为0。所以，如果需要在MySQL数据库中保存非负整数值时，可以将整数类型设置为无符号类型。")]),s._v(" "),a("blockquote",[a("p",[s._v("int类型默认显示宽度为int(11)，无符号int类型默认显示宽度为int(10)。因为负号占了一个数字位。")])]),s._v(" "),a("h4",{attrs:{id:"_2-2-3-zerofill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-zerofill"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.2.3 ZEROFILL")])]),s._v(" "),a("p",[a("code",[s._v("ZEROFILL")]),s._v(": 0填充,（如果某列是ZEROFILL，那么MySQL会自动为当前列添加UNSIGNED属性），如果指定了ZEROFILL只是表示不够M位时，用0在左边填充，如果超过M位，只要不超过数据存储范围即可。")]),s._v(" "),a("h3",{attrs:{id:"_2-3-适用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-适用场景"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.3")]),s._v(" "),a("strong",[s._v("适用场景")])]),s._v(" "),a("p",[a("code",[s._v("TINYINT")]),s._v("：一般用于枚举数据，比如系统设定取值范围很小且固定的场景。")]),s._v(" "),a("p",[a("code",[s._v("SMALLINT")]),s._v("：可以用于较小范围的统计数据，比如统计工厂的固定资产库存数量等。")]),s._v(" "),a("p",[a("code",[s._v("MEDIUMINT")]),s._v("：用于较大整数的计算，比如车站每日的客流量等。")]),s._v(" "),a("p",[a("code",[s._v("INT、INTEGER")]),s._v("：取值范围足够大，一般情况下不用考虑超限问题，用得最多。比如商品编号。")]),s._v(" "),a("p",[a("code",[s._v("BIGINT")]),s._v("：只有当你处理特别巨大的整数时才会用到。比如双十一的交易量、大型门户网站点击量、证券公司衍生产品持仓等。")]),s._v(" "),a("h3",{attrs:{id:"_2-4-如何选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-如何选择"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.4")]),s._v(" "),a("strong",[s._v("如何选择？")])]),s._v(" "),a("p",[s._v("在评估用哪种整数类型的时候，你需要考虑"),a("code",[s._v("存储空间")]),s._v("和"),a("code",[s._v("可靠性")]),s._v("的平衡问题：一方 面，用占用字节数少的整数类型可以节省存储空间；另一方面，要是为了节省存储空间，使用的整数类型取值范围太小，一旦遇到超出取值范围的情况，就可能引起"),a("code",[s._v("系统错误")]),s._v("，影响可靠性。")]),s._v(" "),a("p",[s._v("举个例子，商品编号采用的数据类型是 INT。原因就在于，客户门店中流通的商品种类较多，而且，每天都有旧商品下架，新商品上架，这样不断迭代，日积月累。")]),s._v(" "),a("p",[s._v("如果使用 SMALLINT 类型，虽然占用字节数比 INT 类型的整数少，但是却不能保证数据不会超出范围65535。相反，使用 INT，就能确保有足够大的取值范围，不用担心数据超出范围影响可靠性的问题。")]),s._v(" "),a("p",[s._v("你要注意的是，在实际工作中，"),a("strong",[s._v("系统故障产生的成本远远超过增加几个字段存储空间所产生的成本")]),s._v("。因此，我建议你首先确保数据不会超过取值范围，在这个前提之下，再去考虑如何节省存储空间。")]),s._v(" "),a("h2",{attrs:{id:"_3-浮点类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-浮点类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.")]),s._v(" "),a("strong",[s._v("浮点类型")])]),s._v(" "),a("h3",{attrs:{id:"_3-1-类型介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-类型介绍"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.1")]),s._v(" "),a("strong",[s._v("类型介绍")])]),s._v(" "),a("p",[s._v("浮点数和定点数类型的特点是可以"),a("code",[s._v("处理小数")]),s._v("，你可以把整数看成小数的一个特例。")]),s._v(" "),a("ul",[a("li",[s._v("FLOAT 表示单精度浮点数；")]),s._v(" "),a("li",[s._v("DOUBLE 表示双精度浮点数；")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("类型")]),s._v(" "),a("th",[s._v("占用字节数")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("FLOAT")]),s._v(" "),a("td",[s._v("4")])]),s._v(" "),a("tr",[a("td",[s._v("DOUBLE")]),s._v(" "),a("td",[s._v("8")])])])]),s._v(" "),a("ul",[a("li",[s._v("REAL默认就是 DOUBLE。如果你把 SQL 模式设定为启用“"),a("code",[s._v("REAL_AS_FLOAT")]),s._v("”，那 么，MySQL 就认为REAL 是 FLOAT。如果要启用“REAL_AS_FLOAT”，可以通过以下 SQL 语句实现：")])]),s._v(" "),a("div",{staticClass:"language-SQL line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" sql_mode "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" “REAL_AS_FLOAT”"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("**问题1：**FLOAT 和 DOUBLE 这两种数据类型的区别是啥呢？")]),s._v(" "),a("p",[s._v("FLOAT 占用字节数少，取值范围小；DOUBLE 占用字节数多，取值范围也大。")]),s._v(" "),a("p",[a("strong",[s._v("问题2")]),s._v("：为什么浮点数类型的无符号数取值范围，只相当于有符号数取值范围的一半，也就是只相当于有符号数取值范围大于等于零的部分呢？")]),s._v(" "),a("p",[s._v("MySQL 存储浮点数的格式为："),a("code",[s._v("符号(S) 、 尾数(M) 和 阶码(E)")]),s._v("。因此，无论有没有符号，MySQL 的浮点数都会存储表示符号的部分。因此， 所谓的无符号数取值范围，其实就是有符号数取值范围大于等于零的部分。")]),s._v(" "),a("h3",{attrs:{id:"_3-2-数据精度说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-数据精度说明"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.2")]),s._v(" "),a("strong",[s._v("数据精度说明")])]),s._v(" "),a("p",[s._v("对于浮点类型，在MySQL中单精度值使用"),a("code",[s._v("4")]),s._v("个字节，双精度值使用"),a("code",[s._v("8")]),s._v("个字节。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("MySQL允许使用"),a("code",[s._v("非标准语法")]),s._v("（其他数据库未必支持，因此如果涉及到数据迁移，则最好不要这么用）："),a("code",[s._v("FLOAT(M,D)")]),s._v("或"),a("code",[s._v("DOUBLE(M,D)")]),s._v("。这里，M称为"),a("code",[s._v("精度")]),s._v("，D称为"),a("code",[s._v("标度")]),s._v("。(M,D)中 M=整数位+小数位，D=小数位。 D<=M<=255，0<=D<=30。")]),s._v(" "),a("p",[s._v("例如，定义为FLOAT(5,2)的一个列可以显示为-999.99-999.99。如果超过这个范围会报错。")])]),s._v(" "),a("li",[a("p",[s._v("FLOAT和DOUBLE类型在不指定(M,D)时，默认会按照实际的精度（由实际的硬件和操作系统决定）来显示。")])]),s._v(" "),a("li",[a("p",[s._v("说明：浮点类型，也可以加"),a("code",[s._v("UNSIGNED")]),s._v("，但是不会改变数据范围，例如：FLOAT(3,2) UNSIGNED仍然只能表示0-9.99的范围。")])]),s._v(" "),a("li",[a("p",[s._v("不管是否显式设置了精度(M,D)，这里MySQL的处理方案如下：")]),s._v(" "),a("ul",[a("li",[s._v("如果存储时，整数部分超出了范围，MySQL就会报错，不允许存这样的值")]),s._v(" "),a("li",[s._v("如果存储时，小数点部分若超出范围，就分以下情况：\n"),a("ul",[a("li",[s._v("若四舍五入后，整数部分没有超出范围，则只警告，但能成功操作并四舍五入删除多余的小数位后保存。例如在FLOAT(5,2)列内插入999.009，近似结果是999.01。")]),s._v(" "),a("li",[s._v("若四舍五入后，整数部分超出范围，则MySQL报错，并拒绝处理。如FLOAT(5,2)列内插入999.995和-999.995都会报错。")])])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("从MySQL 8.0.17开始，FLOAT(M,D)和DOUBLE(M,D)用法在官方文档中已经明确不推荐使用")]),s._v("，将来可能被移除。另外，关于浮点型FLOAT和DOUBLE的UNSIGNED也不推荐使用了，将来也可能被移除。")])])]),s._v(" "),a("blockquote",[a("p",[s._v("在编程中，如果用到浮点数，要特别注意误差问题，"),a("strong",[s._v("因为浮点数是不准确的，所以我们要避免使用“=”来判断两个数是否相等。")])])]),s._v(" "),a("h2",{attrs:{id:"_4-定点数类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-定点数类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.")]),s._v(" "),a("strong",[s._v("定点数类型")])]),s._v(" "),a("h3",{attrs:{id:"_4-1-类型介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-类型介绍"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.1")]),s._v(" "),a("strong",[s._v("类型介绍")])]),s._v(" "),a("ul",[a("li",[s._v("MySQL中的定点数类型只有 DECIMAL 一种类型。")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("数据类型")]),s._v(" "),a("th",[s._v("字节数")]),s._v(" "),a("th",[s._v("含义")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("DECIMAL(M,D),DEC,NUMERIC")]),s._v(" "),a("td",[s._v("M+2字节")]),s._v(" "),a("td",[s._v("有效范围由M和D决定")])])])]),s._v(" "),a("p",[s._v("使用 DECIMAL(M,D) 的方式表示高精度小数。其中，M被称为精度，D被称为标度。0<=M<=65， 0<=D<=30，D<M。例如，定义DECIMAL（5,2）的类型，表示该列取值范围是-999.99~999.99。")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("DECIMAL(M,D)的最大取值范围与DOUBLE类型一样")]),s._v("，但是有效的数据范围是由M和D决定的。")])]),s._v(" "),a("li",[a("p",[s._v("定点数在MySQL内部是以 字符串 的形式进行存储，这就决定了它一定是精准的。")])]),s._v(" "),a("li",[a("p",[s._v("当DECIMAL类型不指定精度和标度时，其默认为DECIMAL(10,0)。当数据的精度超出了定点数类型的精度范围时，则MySQL同样会进行四舍五入处理。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("浮点数")]),s._v(" "),a("strong",[s._v("vs")]),s._v(" "),a("strong",[s._v("定点数")])]),s._v(" "),a("ul",[a("li",[s._v("浮点数相对于定点数的优点是在长度一定的情况下，浮点类型取值范围大，但是不精准，适用于需要取值范围大，又可以容忍微小误差的科学计算场景（比如计算化学、分子建模、流体动力学等）")]),s._v(" "),a("li",[s._v("定点数类型取值范围相对小，但是精准，没有误差，适合于对精度要求极高的场景 （比如涉及金额计算的场景）")])])])]),s._v(" "),a("h3",{attrs:{id:"_4-2-开发中经验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-开发中经验"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.2")]),s._v(" "),a("strong",[s._v("开发中经验")])]),s._v(" "),a("blockquote",[a("p",[s._v("“由于 DECIMAL 数据类型的精准性，在我们的项目中，除了极少数（比如商品编号）用到整数类型外，其他的数值都用的是 DECIMAL，原因就是这个项目所处的零售行业，要求精准，一分钱也不能差。 ” ——来自某项目经理")])]),s._v(" "),a("h2",{attrs:{id:"_5-位类型-bit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-位类型-bit"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.")]),s._v(" "),a("strong",[s._v("位类型：BIT")])]),s._v(" "),a("p",[s._v("BIT类型中存储的是二进制值，类似010110。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("二进制字符串类型")]),s._v(" "),a("th",[s._v("长度")]),s._v(" "),a("th",[s._v("长度范围")]),s._v(" "),a("th",[s._v("占用空间")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("BIT(M)")]),s._v(" "),a("td",[s._v("M")]),s._v(" "),a("td",[s._v("1 <= M <= 64")]),s._v(" "),a("td",[s._v("约为(M + 7)/8个字节")])])])]),s._v(" "),a("p",[s._v("BIT类型，如果没有指定(M)，默认是1位。这个1位，表示只能存1位的二进制值。这里(M)是表示二进制的位数，位数最小值为1，最大值为64。")]),s._v(" "),a("blockquote",[a("p",[s._v("使用b+0查询数据时，可以直接查询出存储的十进制数据的值。")])]),s._v(" "),a("h2",{attrs:{id:"_6-日期与时间类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-日期与时间类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.")]),s._v(" "),a("strong",[s._v("日期与时间类型")])]),s._v(" "),a("p",[s._v("MySQL有多种表示日期和时间的数据类型，不同的版本可能有所差异，MySQL8.0版本支持的日期和时间类型主要有：YEAR类型、TIME类型、DATE类型、DATETIME类型和TIMESTAMP类型。")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("YEAR")]),s._v("类型通常用来表示年")]),s._v(" "),a("li",[a("code",[s._v("DATE")]),s._v("类型通常用来表示年、月、日")]),s._v(" "),a("li",[a("code",[s._v("TIME")]),s._v("类型通常用来表示时、分、秒")]),s._v(" "),a("li",[a("code",[s._v("DATETIME")]),s._v("类型通常用来表示年、月、日、时、分、秒")]),s._v(" "),a("li",[a("code",[s._v("TIMESTAMP")]),s._v("类型通常用来表示带时区的年、月、日、时、分、秒")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("类型")]),s._v(" "),a("th",[s._v("名称")]),s._v(" "),a("th",[s._v("字节")]),s._v(" "),a("th",[s._v("日期格式")]),s._v(" "),a("th",[s._v("最小值")]),s._v(" "),a("th",[s._v("最大值")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("YEAR")]),s._v(" "),a("td",[s._v("年")]),s._v(" "),a("td",[s._v("1")]),s._v(" "),a("td",[s._v("YYYY或YY")]),s._v(" "),a("td",[s._v("1901")]),s._v(" "),a("td",[s._v("2155")])]),s._v(" "),a("tr",[a("td",[s._v("TIME")]),s._v(" "),a("td",[s._v("时间")]),s._v(" "),a("td",[s._v("3")]),s._v(" "),a("td",[s._v("HH:MM:SS")]),s._v(" "),a("td",[s._v("-838:59:59")]),s._v(" "),a("td",[s._v("838:59:59")])]),s._v(" "),a("tr",[a("td",[s._v("DATE")]),s._v(" "),a("td",[s._v("日期")]),s._v(" "),a("td",[s._v("3")]),s._v(" "),a("td",[s._v("YYYY-MM-DD")]),s._v(" "),a("td",[s._v("1000-01-01")]),s._v(" "),a("td",[s._v("9999-12-03")])]),s._v(" "),a("tr",[a("td",[s._v("DATETIME")]),s._v(" "),a("td",[s._v("日期时间")]),s._v(" "),a("td",[s._v("8")]),s._v(" "),a("td",[s._v("YYYY-MM-DD HH:MM:SS")]),s._v(" "),a("td",[s._v("1000-01-01  00:00:00")]),s._v(" "),a("td",[s._v("9999-12-31 23:59:59")])]),s._v(" "),a("tr",[a("td",[s._v("TIMESTAMP")]),s._v(" "),a("td",[s._v("日期时间")]),s._v(" "),a("td",[s._v("4")]),s._v(" "),a("td",[s._v("YYYY-MM-DD HH:MM:SS")]),s._v(" "),a("td",[s._v("1970-01-01 00:00:00 UTC")]),s._v(" "),a("td",[s._v("2038-01-19 03:14:07UTC")])])])]),s._v(" "),a("h3",{attrs:{id:"_6-1-year类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-year类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.1 YEAR类型")])]),s._v(" "),a("p",[s._v("YEAR类型用来表示年份，在所有的日期时间类型中所占用的存储空间最小，只需要"),a("code",[s._v("1个字节")]),s._v("的存储空间。")]),s._v(" "),a("p",[s._v("在MySQL中，YEAR有以下几种存储格式：")]),s._v(" "),a("ul",[a("li",[s._v("以4位字符串或数字格式表示YEAR类型，其格式为YYYY，最小值为1901，最大值为2155。")]),s._v(" "),a("li",[s._v("以2位字符串格式表示YEAR类型，最小值为00，最大值为99。\n"),a("ul",[a("li",[s._v("当取值为01到69时，表示2001到2069；")]),s._v(" "),a("li",[s._v("当取值为70到99时，表示1970到1999；")]),s._v(" "),a("li",[s._v("当取值整数的0或00添加的话，那么是0000年；")]),s._v(" "),a("li",[s._v("当取值是日期/字符串的'0'添加的话，是2000年。")])])])]),s._v(" "),a("p",[a("strong",[s._v("从MySQL5.5.27开始，2位格式的YEAR已经不推荐使用")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"_6-2-date类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-date类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.2 DATE类型")])]),s._v(" "),a("p",[s._v("DATE类型表示日期，没有时间部分，格式为"),a("code",[s._v("YYYY-MM-DD")]),s._v("，其中，YYYY表示年份，MM表示月份，DD表示日期。需要"),a("code",[s._v("3个字节")]),s._v("的存储空间。在向DATE类型的字段插入数据时，同样需要满足一定的格式条件。")]),s._v(" "),a("ul",[a("li",[s._v("以"),a("code",[s._v("YYYY-MM-DD")]),s._v("格式或者"),a("code",[s._v("YYYYMMDD")]),s._v("格式表示的字符串日期，其最小取值为1000-01-01，最大取值为9999-12-03。YYYYMMDD格式会被转化为YYYY-MM-DD格式。")]),s._v(" "),a("li",[s._v("以"),a("code",[s._v("YY-MM-DD")]),s._v("格式或者"),a("code",[s._v("YYMMDD")]),s._v("格式表示的字符串日期，此格式中，年份为两位数值或字符串满足YEAR类型的格式条件为：当年份取值为00到69时，会被转化为2000到2069；当年份取值为70到99时，会被转化为1970到1999。")]),s._v(" "),a("li",[s._v("使用"),a("code",[s._v("CURRENT_DATE()")]),s._v("或者"),a("code",[s._v("NOW()")]),s._v("函数，会插入当前系统的日期。")])]),s._v(" "),a("h3",{attrs:{id:"_6-3-time类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-time类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.3 TIME类型")])]),s._v(" "),a("p",[s._v("TIME类型用来表示时间，不包含日期部分。在MySQL中，需要"),a("code",[s._v("3个字节")]),s._v("的存储空间来存储TIME类型的数据，可以使用“HH:MM:SS”格式来表示TIME类型，其中，HH表示小时，MM表示分钟，SS表示秒。")]),s._v(" "),a("p",[s._v("在MySQL中，向TIME类型的字段插入数据时，也可以使用几种不同的格式。 （1）可以使用带有冒号的字符串，比如'"),a("code",[s._v("D HH:MM:SS")]),s._v("'、'"),a("code",[s._v("HH:MM:SS")]),s._v("'、'"),a("code",[s._v("HH:MM")]),s._v("'、'"),a("code",[s._v("D HH:MM")]),s._v("'、'"),a("code",[s._v("D HH")]),s._v("'或'"),a("code",[s._v("SS")]),s._v("'格式，都能被正确地插入TIME类型的字段中。其中D表示天，其最小值为0，最大值为34。如果使用带有D格式的字符串插入TIME类型的字段时，D会被转化为小时，计算格式为D*24+HH。当使用带有冒号并且不带D的字符串表示时间时，表示当天的时间，比如12:10表示12:10:00，而不是00:12:10。 （2）可以使用不带有冒号的字符串或者数字，格式为'"),a("code",[s._v("HHMMSS")]),s._v("'或者"),a("code",[s._v("HHMMSS")]),s._v("。如果插入一个不合法的字符串或者数字，MySQL在存储数据时，会将其自动转化为00:00:00进行存储。比如1210，MySQL会将最右边的两位解析成秒，表示00:12:10，而不是12:10:00。 （3）使用"),a("code",[s._v("CURRENT_TIME()")]),s._v("或者"),a("code",[s._v("NOW()")]),s._v("，会插入当前系统的时间。")]),s._v(" "),a("h3",{attrs:{id:"_6-4-datetime类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-datetime类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.4 DATETIME类型")])]),s._v(" "),a("p",[s._v("DATETIME类型在所有的日期时间类型中占用的存储空间最大，总共需要"),a("code",[s._v("8")]),s._v("个字节的存储空间。在格式上为DATE类型和TIME类型的组合，可以表示为"),a("code",[s._v("YYYY-MM-DD HH:MM:SS")]),s._v("，其中YYYY表示年份，MM表示月份，DD表示日期，HH表示小时，MM表示分钟，SS表示秒。")]),s._v(" "),a("p",[s._v("在向DATETIME类型的字段插入数据时，同样需要满足一定的格式条件。")]),s._v(" "),a("ul",[a("li",[s._v("以"),a("code",[s._v("YYYY-MM-DD HH:MM:SS")]),s._v("格式或者"),a("code",[s._v("YYYYMMDDHHMMSS")]),s._v("格式的字符串插入DATETIME类型的字段时，最小值为1000-01-01 00:00:00，最大值为9999-12-03 23:59:59。\n"),a("ul",[a("li",[s._v("以YYYYMMDDHHMMSS格式的数字插入DATETIME类型的字段时，会被转化为YYYY-MM-DD HH:MM:SS格式。")]),s._v(" "),a("li",[s._v("以 YY-MM-DD HH:MM:SS 格式或者 YYMMDDHHMMSS 格式的字符串插入DATETIME类型的字段时，两位数的年份规则符合YEAR类型的规则，00到69表示2000到2069；70到99表示1970到1999。")])])]),s._v(" "),a("li",[s._v("使用函数"),a("code",[s._v("CURRENT_TIMESTAMP()")]),s._v("和"),a("code",[s._v("NOW()")]),s._v("，可以向DATETIME类型的字段插入系统的当前日期和时间。")])]),s._v(" "),a("h3",{attrs:{id:"_6-5-timestamp类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-timestamp类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.5 TIMESTAMP类型")])]),s._v(" "),a("p",[s._v("TIMESTAMP类型也可以表示日期时间，其显示格式与DATETIME类型相同，都是"),a("code",[s._v("YYYY-MM-DD HH:MM:SS")]),s._v("，需要4个字节的存储空间。但是TIMESTAMP存储的时间范围比DATETIME要小很多，只能存储“1970-01-01 00:00:01 UTC”到“2038-01-19 03:14:07 UTC”之间的时间。其中，UTC表示世界统一时间，也叫作世界标准时间。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("存储数据的时候需要对当前时间所在的时区进行转换，查询数据的时候再将时间转换回当前的时区。因此，使用TIMESTAMP存储的同一个时间值，在不同的时区查询时会显示不同的时间。")])])]),s._v(" "),a("p",[a("strong",[s._v("TIMESTAMP和DATETIME的区别：")])]),s._v(" "),a("ul",[a("li",[s._v("TIMESTAMP存储空间比较小，表示的日期时间范围也比较小")]),s._v(" "),a("li",[s._v("底层存储方式不同，TIMESTAMP底层存储的是毫秒值，距离1970-1-1 0:0:0 0毫秒的毫秒值。")]),s._v(" "),a("li",[s._v("两个日期比较大小或日期计算时，TIMESTAMP更方便、更快。")]),s._v(" "),a("li",[s._v("TIMESTAMP和时区有关。TIMESTAMP会根据用户的时区不同，显示不同的结果。而DATETIME则只能反映出插入时当地的时区，其他时区的人查看数据必然会有误差的。")])]),s._v(" "),a("h3",{attrs:{id:"_6-6-开发中经验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-开发中经验"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.6")]),s._v(" "),a("strong",[s._v("开发中经验")])]),s._v(" "),a("p",[s._v("用得最多的日期时间类型，就是"),a("code",[s._v("DATETIME")]),s._v("。虽然 MySQL 也支持 YEAR（年）、 TIME（时间）、DATE（日期），以及 TIMESTAMP 类型，但是在实际项目中，尽量用 DATETIME 类型。因为这个数据类型包括了完整的日期和时间信息，取值范围也最大，使用起来比较方便。毕竟，如果日期时间信息分散在好几个字段，很不容易记，而且查询的时候，SQL 语句也会更加复杂。")]),s._v(" "),a("p",[s._v("此外，一般存注册时间、商品发布时间等，不建议使用DATETIME存储，而是使用"),a("code",[s._v("时间戳")]),s._v("，因为DATETIME虽然直观，但不便于计算。")]),s._v(" "),a("h2",{attrs:{id:"_7-文本字符串类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-文本字符串类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7.")]),s._v(" "),a("strong",[s._v("文本字符串类型")])]),s._v(" "),a("h3",{attrs:{id:"_7-1-char与varchar类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-char与varchar类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7.1 CHAR与VARCHAR类型")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("字符串(文本)类型")]),s._v(" "),a("th",[s._v("特点")]),s._v(" "),a("th",[s._v("长度")]),s._v(" "),a("th",[s._v("长度范围")]),s._v(" "),a("th",[s._v("占用的存储空间")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("CHAR(M)")]),s._v(" "),a("td",[s._v("固定长度")]),s._v(" "),a("td",[s._v("M")]),s._v(" "),a("td",[s._v("0 <= M <= 255")]),s._v(" "),a("td",[s._v("M个字节")])]),s._v(" "),a("tr",[a("td",[s._v("VARCHAR(M)")]),s._v(" "),a("td",[s._v("可变长度")]),s._v(" "),a("td",[s._v("M")]),s._v(" "),a("td",[s._v("0 <= M <= 65535")]),s._v(" "),a("td",[s._v("(实际长度 + 1) 个字节")])])])]),s._v(" "),a("p",[a("strong",[s._v("CHAR类型：")])]),s._v(" "),a("ul",[a("li",[s._v("CHAR(M) 类型一般需要预先定义字符串长度。如果不指定(M)，则表示长度默认是1个字符。")]),s._v(" "),a("li",[s._v("如果保存时，数据的实际长度比CHAR类型声明的长度小，则会在"),a("code",[s._v("右侧填充")]),s._v("空格以达到指定的长度。当MySQL检索CHAR类型的数据时，CHAR类型的字段会去除尾部的空格。")]),s._v(" "),a("li",[s._v("定义CHAR类型字段时，声明的字段长度即为CHAR类型字段所占的存储空间的字节数。")])]),s._v(" "),a("p",[a("strong",[s._v("VARCHAR类型：")])]),s._v(" "),a("ul",[a("li",[s._v("VARCHAR(M) 定义时，"),a("code",[s._v("必须指定")]),s._v("长度M，否则报错。")]),s._v(" "),a("li",[s._v("MySQL4.0版本以下，varchar(20)：指的是20字节，如果存放UTF8汉字时，只能存6个（每个汉字3字节） ；MySQL5.0版本以上，varchar(20)：指的是20字符。")]),s._v(" "),a("li",[s._v("检索VARCHAR类型的字段数据时，会保留数据尾部的空格。VARCHAR类型的字段所占用的存储空间为字符串实际长度加1个字节。")])]),s._v(" "),a("p",[a("strong",[s._v("哪些情况使用")]),s._v(" "),a("strong",[s._v("CHAR")]),s._v(" "),a("strong",[s._v("或")]),s._v(" "),a("strong",[s._v("VARCHAR")]),s._v(" "),a("strong",[s._v("更好")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("类型")]),s._v(" "),a("th",[s._v("特点")]),s._v(" "),a("th",[s._v("空间上")]),s._v(" "),a("th",[s._v("时间上")]),s._v(" "),a("th",[s._v("适用场景")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("CHAR(M)")]),s._v(" "),a("td",[s._v("固定长度")]),s._v(" "),a("td",[s._v("浪费存储空间")]),s._v(" "),a("td",[s._v("效率高")]),s._v(" "),a("td",[s._v("存储不大，速度要求高")])]),s._v(" "),a("tr",[a("td",[s._v("VARCHAR(M)")]),s._v(" "),a("td",[s._v("可变长度")]),s._v(" "),a("td",[s._v("节省存储空间")]),s._v(" "),a("td",[s._v("效率低")]),s._v(" "),a("td",[s._v("非CHAR的情况")])])])]),s._v(" "),a("p",[s._v("情况1：存储很短的信息。比如门牌号码101，201……这样很短的信息应该用char，因为varchar还要占个byte用于存储信息长度，本来打算节约存储的，结果得不偿失。")]),s._v(" "),a("p",[s._v("情况2：固定长度的。比如使用uuid作为主键，那用char应该更合适。因为他固定长度，varchar动态根据长度的特性就消失了，而且还要占个长度信息。")]),s._v(" "),a("p",[s._v("情况3：十分频繁改变的column。因为varchar每次存储都要有额外的计算，得到长度等工作，如果一个非常频繁改变的，那就要有很多的精力用于计算，而这些对于char来说是不需要的。")]),s._v(" "),a("p",[s._v("情况4：具体存储引擎中的情况：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("MyISAM")]),s._v("数据存储引擎和数据列：MyISAM数据表，最好使用固定长度(CHAR)的数据列代替可变长度(VARCHAR)的数据列。这样使得整个表静态化，从而使"),a("code",[s._v("数据检索更快")]),s._v("，用空间换时间。")]),s._v(" "),a("li",[a("code",[s._v("MEMORY")]),s._v("存储引擎和数据列：MEMORY数据表目前都使用固定长度的数据行存储，因此无论使用CHAR或VARCHAR列都没有关系，两者都是作为CHAR类型处理的。")]),s._v(" "),a("li",[s._v("InnoDB 存储引擎，建议使用VARCHAR类型。因为对于InnoDB数据表，内部的行存储格式并没有区分固定长度和可变长度列（所有数据行都使用指向数据列值的头指针），而且"),a("strong",[s._v("主要影响性能的因素是数据行使用的存储总量")]),s._v("，由于char平均占用的空间多于varchar，所以除了简短并且固定长度的，其他考虑varchar。这样节省空间，对磁盘I/O和数据存储总量比较好。")])]),s._v(" "),a("h3",{attrs:{id:"_7-2-text类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-text类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7.2 TEXT类型")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("文本字符串类型")]),s._v(" "),a("th",[s._v("特点")]),s._v(" "),a("th",[s._v("长度")]),s._v(" "),a("th",[s._v("长度范围")]),s._v(" "),a("th",[s._v("占用的存储空间")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("TINYTEXT")]),s._v(" "),a("td",[s._v("小文本、可变长度")]),s._v(" "),a("td",[s._v("L")]),s._v(" "),a("td",[s._v("0 <= L <= 255")]),s._v(" "),a("td",[s._v("L + 2 个字节")])]),s._v(" "),a("tr",[a("td",[s._v("TEXT")]),s._v(" "),a("td",[s._v("文本、可变长度")]),s._v(" "),a("td",[s._v("L")]),s._v(" "),a("td",[s._v("0 <= L <= 65535")]),s._v(" "),a("td",[s._v("L + 2 个字节")])]),s._v(" "),a("tr",[a("td",[s._v("MEDIUMTEXT")]),s._v(" "),a("td",[s._v("中等文本、可变长度")]),s._v(" "),a("td",[s._v("L")]),s._v(" "),a("td",[s._v("0 <= L <= 16777215")]),s._v(" "),a("td",[s._v("L + 3 个字节")])]),s._v(" "),a("tr",[a("td",[s._v("LONGTEXT")]),s._v(" "),a("td",[s._v("大文本、可变长度")]),s._v(" "),a("td",[s._v("L")]),s._v(" "),a("td",[s._v("0 <= L<= 4294967295（相当于4GB）")]),s._v(" "),a("td",[s._v("L + 4 个字节")])])])]),s._v(" "),a("p",[a("strong",[s._v("由于实际存储的长度不确定，MySQL不允许")]),s._v(" "),a("strong",[s._v("TEXT")]),s._v(" "),a("strong",[s._v("类型的字段做主键")]),s._v("。遇到这种情况，你只能采用CHAR(M)，或者 VARCHAR(M)。")]),s._v(" "),a("p",[a("strong",[s._v("开发中经验：")])]),s._v(" "),a("p",[s._v("TEXT文本类型，可以存比较大的文本段，搜索速度稍慢，因此如果不是特别大的内容，建议使用CHAR， VARCHAR来代替。还有TEXT类型不用加默认值，加了也没用。而且text和blob类型的数据删除后容易导致“空洞”，使得文件碎片比较多，所以频繁使用的表不建议包含TEXT类型字段，建议单独分出去，单独用一个表。")]),s._v(" "),a("h2",{attrs:{id:"_8-enum类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-enum类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8. ENUM类型")])]),s._v(" "),a("p",[s._v("ENUM类型也叫作枚举类型，ENUM类型的取值范围需要在定义字段时进行指定。设置字段值时，ENUM类型只允许从成员中选取单个值，不能一次选取多个值。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("文本字符串类型")]),s._v(" "),a("th",[s._v("长度")]),s._v(" "),a("th",[s._v("长度范围")]),s._v(" "),a("th",[s._v("占用的存储空间")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("ENUM")]),s._v(" "),a("td",[s._v("L")]),s._v(" "),a("td",[s._v("1 <= L <= 65535")]),s._v(" "),a("td",[s._v("1或2个字节")])])])]),s._v(" "),a("ul",[a("li",[s._v("当ENUM类型包含1～255个成员时，需要1个字节的存储空间；")]),s._v(" "),a("li",[s._v("当ENUM类型包含256～65535个成员时，需要2个字节的存储空间。")]),s._v(" "),a("li",[s._v("ENUM类型的成员个数的上限为65535个。")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" test_enum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" \n    season "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENUM")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'春'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'夏'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'秋'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'冬'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'unknow'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test_enum \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'春'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'秋'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许按照角标的方式获取指定索引位置的枚举值")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test_enum \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当ENUM类型的字段没有声明为NOT NULL时，插入NULL也是有效的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test_enum\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h2",{attrs:{id:"_9-set类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-set类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("9. SET类型")])]),s._v(" "),a("p",[s._v("SET表示一个字符串对象，可以包含0个或多个成员，但成员个数的上限为 64 。设置字段值时，可以取取值范围内的 0 个或多个值。")]),s._v(" "),a("p",[s._v("当SET类型包含的成员个数不同时，其所占用的存储空间也是不同的，具体如下：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("成员个数范围（L表示实际成员个数）")]),s._v(" "),a("th",[s._v("占用的存储空间")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("1 <= L <= 8")]),s._v(" "),a("td",[s._v("1个字节")])]),s._v(" "),a("tr",[a("td",[s._v("9 <= L <= 16")]),s._v(" "),a("td",[s._v("2个字节")])]),s._v(" "),a("tr",[a("td",[s._v("17 <= L <= 24")]),s._v(" "),a("td",[s._v("3个字节")])]),s._v(" "),a("tr",[a("td",[s._v("25 <= L <= 32")]),s._v(" "),a("td",[s._v("4个字节")])]),s._v(" "),a("tr",[a("td",[s._v("33 <= L <= 64")]),s._v(" "),a("td",[s._v("8个字节")])])])]),s._v(" "),a("p",[s._v("SET类型在存储数据时成员个数越多，其占用的存储空间越大。注意：SET类型在选取成员时，可以一次选择多个成员，这一点与ENUM类型不同。")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" test_set"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'B'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'C'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test_set "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A,B'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#插入重复的SET类型成员时，MySQL会自动删除重复的成员 ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test_set "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A,B,C,A'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"_10-二进制字符串类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-二进制字符串类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("10.")]),s._v(" "),a("strong",[s._v("二进制字符串类型")])]),s._v(" "),a("p",[s._v("MySQL中的二进制字符串类型主要存储一些二进制数据，比如可以存储图片、音频和视频等二进制数据。")]),s._v(" "),a("p",[a("strong",[s._v("BINARY与VARBINARY类型")])]),s._v(" "),a("p",[s._v("BINARY和VARBINARY类似于CHAR和VARCHAR，只是它们存储的是二进制字符串。")]),s._v(" "),a("p",[s._v("BINARY (M)为固定长度的二进制字符串，M表示最多能存储的字节数，取值范围是0~255个字符。如果未指定(M)，表示只能存储"),a("code",[s._v("1个字节")]),s._v("。例如BINARY (8)，表示最多能存储8个字节，如果字段值不足(M)个字节，将在右边填充'\\0'以补齐指定长度。")]),s._v(" "),a("p",[s._v("VARBINARY (M)为可变长度的二进制字符串，M表示最多能存储的字节数，总字节数不能超过行的字节长度限制65535，另外还要考虑额外字节开销，VARBINARY类型的数据除了存储数据本身外，还需要1或2个字节来存储数据的字节数。VARBINARY类型"),a("code",[s._v("必须指定(M)")]),s._v("，否则报错。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("二进制字符串类型")]),s._v(" "),a("th",[s._v("特点")]),s._v(" "),a("th",[s._v("值的长度")]),s._v(" "),a("th",[s._v("占用空间")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("BINARY(M)")]),s._v(" "),a("td",[s._v("固定长度")]),s._v(" "),a("td",[s._v("M （0 <= M <= 255）")]),s._v(" "),a("td",[s._v("M个字节")])]),s._v(" "),a("tr",[a("td",[s._v("VARBINARY(M)")]),s._v(" "),a("td",[s._v("可变长度")]),s._v(" "),a("td",[s._v("M（0 <= M <= 65535）")]),s._v(" "),a("td",[s._v("M+1个字节")])])])]),s._v(" "),a("p",[a("strong",[s._v("BLOB类型")])]),s._v(" "),a("p",[s._v("BLOB是一个"),a("code",[s._v("二进制大对象")]),s._v("，可以容纳可变数量的数据。")]),s._v(" "),a("p",[s._v("需要注意的是，在实际工作中，往往不会在MySQL数据库中使用BLOB类型存储大对象数据，通常会将图片、音频和视频文件存储到"),a("code",[s._v("服务器的磁盘上")]),s._v("，并将图片、音频和视频的访问路径存储到MySQL中。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("二进制字符串类型")]),s._v(" "),a("th",[s._v("值的长度")]),s._v(" "),a("th",[s._v("长度范围")]),s._v(" "),a("th",[s._v("占用空间")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("TINYBLOB")]),s._v(" "),a("td",[s._v("L")]),s._v(" "),a("td",[s._v("0 <= L <= 255")]),s._v(" "),a("td",[s._v("L + 1 个字节")])]),s._v(" "),a("tr",[a("td",[s._v("BLOB")]),s._v(" "),a("td",[s._v("L")]),s._v(" "),a("td",[s._v("0 <= L <= 65535（相当于64KB）")]),s._v(" "),a("td",[s._v("L + 2 个字节")])]),s._v(" "),a("tr",[a("td",[s._v("MEDIUMBLOB")]),s._v(" "),a("td",[s._v("L")]),s._v(" "),a("td",[s._v("0 <= L <= 16777215 （相当于16MB）")]),s._v(" "),a("td",[s._v("L + 3 个字节")])]),s._v(" "),a("tr",[a("td",[s._v("LONGBLOB")]),s._v(" "),a("td",[s._v("L")]),s._v(" "),a("td",[s._v("0 <= L <= 4294967295（相当于4GB）")]),s._v(" "),a("td",[s._v("L + 4 个字节")])])])]),s._v(" "),a("p",[a("strong",[s._v("TEXT和BLOB的使用注意事项：")])]),s._v(" "),a("p",[s._v("在使用text和blob字段类型时要注意以下几点，以便更好的发挥数据库的性能。")]),s._v(" "),a("p",[s._v('① BLOB和TEXT值也会引起自己的一些问题，特别是执行了大量的删除或更新操作的时候。删除这种值会在数据表中留下很大的"'),a("code",[s._v("空洞")]),s._v('"，以后填入这些"空洞"的记录可能长度不同。为了提高性能，建议定期使用 OPTIMIZE TABLE 功能对这类表进行'),a("code",[s._v("碎片整理")]),s._v("。")]),s._v(" "),a("p",[s._v("② 如果需要对大文本字段进行模糊查询，MySQL 提供了"),a("code",[s._v("前缀索引")]),s._v("。但是仍然要在不必要的时候避免检索大型的BLOB或TEXT值。例如，SELECT * 查询就不是很好的想法，除非你能够确定作为约束条件的WHERE子句只会找到所需要的数据行。否则，你可能毫无目的地在网络上传输大量的值。")]),s._v(" "),a("p",[s._v("③ 把BLOB或TEXT列"),a("code",[s._v("分离到单独的表")]),s._v("中。在某些环境中，如果把这些数据列移动到第二张数据表中，可以让你把原数据表中的数据列转换为固定长度的数据行格式，那么它就是有意义的。这会"),a("code",[s._v("减少主表中的碎片")]),s._v("，使你得到固定长度数据行的性能优势。它还使你在主数据表上运行 SELECT * 查询的时候不会通过网络传输大量的BLOB或TEXT值。")]),s._v(" "),a("h2",{attrs:{id:"_11-json-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-json-类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("11. JSON")]),s._v(" "),a("strong",[s._v("类型")])]),s._v(" "),a("p",[s._v("JSON（JavaScript Object Notation）是一种轻量级的 数据交换格式 。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。它易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。"),a("strong",[s._v("JSON")]),s._v(" "),a("strong",[s._v("可以将")]),s._v(" "),a("strong",[s._v("JavaScript")]),s._v(" "),a("strong",[s._v("对象中表示的一组数据转换为字符串，然后就可以在网络或者程序之间轻松地传递这个字符串，并在需要的时候将它还原为各编程语言所支持的数据格式。")])]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" test_json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    js json \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" test_json "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("js"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{"name":"songhk", "age":18, "address":{"province":"beijing", "city":"beijing"}}\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" js "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$.name'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("js "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$.age'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("js "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$.address.province'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" province"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" js "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$.address.city'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" city \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" test_json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"_12-空间类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-空间类型"}},[s._v("#")]),s._v(" "),a("strong",[s._v("12.")]),s._v(" "),a("strong",[s._v("空间类型")])]),s._v(" "),a("p",[s._v("MySQL的空间数据类型（Spatial Data Type）对应于OpenGIS类，包括单值类型：GEOMETRY、POINT、 LINESTRING、POLYGON以及集合类型：MULTIPOINT、MULTILINESTRING、MULTIPOLYGON、 GEOMETRYCOLLECTION 。")]),s._v(" "),a("h2",{attrs:{id:"_13-小结及选择建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-小结及选择建议"}},[s._v("#")]),s._v(" "),a("strong",[s._v("13.")]),s._v(" "),a("strong",[s._v("小结及选择建议")])]),s._v(" "),a("p",[s._v("在定义数据类型时，如果确定是"),a("code",[s._v("整数")]),s._v("，就用"),a("code",[s._v("INT")]),s._v("； 如果是"),a("code",[s._v("小数")]),s._v("，一定用定点数类型"),a("code",[s._v("DECIMAL(M,D)")]),s._v("； 如果是日期与时间，就用"),a("code",[s._v("DATETIME")]),s._v("。")]),s._v(" "),a("p",[s._v("这样做的好处是，首先确保你的系统不会因为数据类型定义出错。不过，凡事都是有两面的，可靠性好，并不意味着高效。比如，TEXT 虽然使用方便，但是效率不如 CHAR(M) 和 VARCHAR(M)。")]),s._v(" "),a("p",[s._v("关于字符串的选择，建议参考如下阿里巴巴的《Java开发手册》规范：")]),s._v(" "),a("p",[a("strong",[s._v("阿里巴巴《Java开发手册》之MySQL数据库：")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("任何字段如果为非负数，必须是 UNSIGNED")])]),s._v(" "),a("li",[a("p",[s._v("【"),a("code",[s._v("强制")]),s._v("】小数类型为 DECIMAL，禁止使用 FLOAT 和 DOUBLE。")]),s._v(" "),a("ul",[a("li",[s._v("说明：在存储的时候，FLOAT 和 DOUBLE 都存在精度损失的问题，很可能在比较值的时候，得到不正确的结果。"),a("strong",[s._v("如果存储的数据范围超过 DECIMAL 的范围，建议将数据拆成整数和小数并分开存储。")])])])]),s._v(" "),a("li",[a("p",[s._v("【"),a("code",[s._v("强制")]),s._v("】如果存储的字符串长度几乎相等，使用 CHAR 定长字符串类型。")]),s._v(" "),a("p",[s._v("【"),a("code",[s._v("强制")]),s._v("】VARCHAR 是可变长字符串，不预先分配存储空间，长度不要超过 5000。如果存储长度大于此值，定义字段类型为 TEXT，独立出来一张表，用主键来对应，避免影响其它字段索引效率。")])])]),s._v(" "),a("h1",{attrs:{id:"第4章-约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第4章-约束"}},[s._v("#")]),s._v(" 第4章 约束")]),s._v(" "),a("h2",{attrs:{id:"_1-约束-constraint-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-约束-constraint-概述"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1.")]),s._v(" "),a("strong",[s._v("约束(constraint)概述")])]),s._v(" "),a("h3",{attrs:{id:"_1-1-为什么需要约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-为什么需要约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1.1")]),s._v(" "),a("strong",[s._v("为什么需要约束")])]),s._v(" "),a("p",[s._v("数据完整性（Data Integrity）是指数据的精确性（Accuracy）和可靠性（Reliability）。它是防止数据库中存在不符合语义规定的数据和防止因错误信息的输入输出造成无效操作或错误信息而提出的。")]),s._v(" "),a("p",[s._v("为了保证数据的完整性，SQL规范以约束的方式对"),a("strong",[s._v("表数据进行额外的条件限制")]),s._v("。从以下四个方面考虑：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("实体完整性（Entity Integrity）")]),s._v("：例如，同一个表中，不能存在两条完全相同无法区分的记录")]),s._v(" "),a("li",[a("code",[s._v("域完整性（Domain Integrity）")]),s._v("：例如：年龄范围0-120，性别范围“男/女”")]),s._v(" "),a("li",[a("code",[s._v("引用完整性（Referential Integrity）")]),s._v("：例如：员工所在部门，在部门表中要能找到这个部门")]),s._v(" "),a("li",[a("code",[s._v("用户自定义完整性（User-defined Integrity）")]),s._v("：例如：用户名唯一、密码不能为空等，本部门经理的工资不得高于本部门职工的平均工资的5倍。")])]),s._v(" "),a("h3",{attrs:{id:"_1-2-什么是约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-什么是约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1.2")]),s._v(" "),a("strong",[s._v("什么是约束")])]),s._v(" "),a("p",[s._v("约束是表级的强制规定。")]),s._v(" "),a("p",[s._v("可以在"),a("strong",[s._v("创建表时规定约束（通过")]),s._v(" "),a("strong",[s._v("CREATE TABLE")]),s._v(" "),a("strong",[s._v("语句）")]),s._v("，或者在"),a("strong",[s._v("表创建之后通过")]),s._v(" "),a("strong",[s._v("ALTER TABLE")]),s._v(" "),a("strong",[s._v("语句规定约束")]),s._v("。")]),s._v(" "),a("h3",{attrs:{id:"_1-3-约束的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-约束的分类"}},[s._v("#")]),s._v(" "),a("strong",[s._v("1.3")]),s._v(" "),a("strong",[s._v("约束的分类")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("**根据约束数据列的限制，**约束可分为：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("单列约束")]),s._v("：每个约束只约束一列")]),s._v(" "),a("li",[a("strong",[s._v("多列约束")]),s._v("：每个约束可约束多列数据")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("根据约束的作用范围")]),s._v("，约束可分为：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("列级约束")]),s._v("：只能作用在一个列上，跟在列的定义后面")]),s._v(" "),a("li",[a("strong",[s._v("表级约束")]),s._v("：可以作用在多个列上，不与列一起，而是单独定义")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("根据约束起的作用")]),s._v("，约束可分为：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("NOT NULL")]),s._v(" "),a("strong",[s._v("非空约束，规定某个字段不能为空")])]),s._v(" "),a("li",[a("strong",[s._v("UNIQUE")]),s._v(" "),a("strong",[s._v("唯一约束")]),s._v("，"),a("strong",[s._v("规定某个字段在整个表中是唯一的")])]),s._v(" "),a("li",[a("strong",[s._v("PRIMARY KEY")]),s._v(" "),a("strong",[s._v("主键(非空且唯一)约束")])]),s._v(" "),a("li",[a("strong",[s._v("FOREIGN KEY")]),s._v(" "),a("strong",[s._v("外键约束")])]),s._v(" "),a("li",[a("strong",[s._v("CHECK")]),s._v(" "),a("strong",[s._v("检查约束")])]),s._v(" "),a("li",[a("strong",[s._v("DEFAULT")]),s._v(" "),a("strong",[s._v("默认值约束")])])])]),s._v(" "),a("li",[a("p",[s._v("查看某个表已有的约束")])])]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#information_schema数据库名（系统库） \n#table_constraints表名称（专门存储各个表的约束）\nSELECT * FROM information_schema.table_constraints \nWHERE table_name = '表名称';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"_2-非空约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-非空约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.")]),s._v(" "),a("strong",[s._v("非空约束")])]),s._v(" "),a("h3",{attrs:{id:"_2-1-作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-作用"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.1")]),s._v(" "),a("strong",[s._v("作用")])]),s._v(" "),a("p",[s._v("限定某个字段/某列的值不允许为空")]),s._v(" "),a("h3",{attrs:{id:"_2-2-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-关键字"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.2")]),s._v(" "),a("strong",[s._v("关键字")])]),s._v(" "),a("p",[s._v("NOT NULL")]),s._v(" "),a("h3",{attrs:{id:"_2-3-特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-特点"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.3")]),s._v(" "),a("strong",[s._v("特点")])]),s._v(" "),a("ul",[a("li",[s._v("默认，所有的类型的值都可以是NULL，包括INT、FLOAT等数据类型")]),s._v(" "),a("li",[s._v("非空约束只能出现在表对象的列上，只能某个列单独限定非空，不能组合非空")]),s._v(" "),a("li",[s._v("一个表可以有很多列都分别限定了非空")]),s._v(" "),a("li",[s._v("空字符串''不等于NULL，0也不等于NULL")])]),s._v(" "),a("h3",{attrs:{id:"_2-4-添加非空约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-添加非空约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.4")]),s._v(" "),a("strong",[s._v("添加非空约束")])]),s._v(" "),a("p",[s._v("（1）建表时")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("CREATE TABLE 表名称( \n    字段名 数据类型, \n    字段名 数据类型 NOT NULL, \n    字段名 数据类型 NOT NULL \n);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("（2）建表后")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ALTER TABLE 表名称 \nMODIFY 字段名 数据类型 NOT NULL;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_2-5-删除非空约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-删除非空约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("2.5")]),s._v(" "),a("strong",[s._v("删除非空约束")])]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 方式一：\nALTER TABLE 表名称 \nMODIFY 字段名 数据类型 NULL; \n# 方式二：\nALTER TABLE 表名称 \nMODIFY 字段名 数据类型;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"_3-唯一性约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-唯一性约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.")]),s._v(" "),a("strong",[s._v("唯一性约束")])]),s._v(" "),a("h3",{attrs:{id:"_3-1-作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-作用"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.1")]),s._v(" "),a("strong",[s._v("作用")])]),s._v(" "),a("p",[s._v("用来限制某个字段/某列的值不能重复。")]),s._v(" "),a("h3",{attrs:{id:"_3-2-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-关键字"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.2")]),s._v(" "),a("strong",[s._v("关键字")])]),s._v(" "),a("p",[s._v("UNIQUE")]),s._v(" "),a("h3",{attrs:{id:"_3-3-特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-特点"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.3")]),s._v(" "),a("strong",[s._v("特点")])]),s._v(" "),a("ul",[a("li",[s._v("同一个表可以有多个唯一约束。")]),s._v(" "),a("li",[s._v("唯一约束可以是某一个列的值唯一，也可以多个列组合的值唯一。")]),s._v(" "),a("li",[s._v("唯一性约束允许列值为空。")]),s._v(" "),a("li",[s._v("在创建唯一约束的时候，如果不给唯一约束命名，就默认和列名相同。")]),s._v(" "),a("li",[a("strong",[s._v("MySQL会给唯一约束的列上默认创建一个唯一索引。")])])]),s._v(" "),a("h3",{attrs:{id:"_3-4-添加-复合-唯一约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-添加-复合-唯一约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.4")]),s._v(" "),a("strong",[s._v("添加（复合）唯一约束")])]),s._v(" "),a("p",[s._v("（1）建表时")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("CREATE TABLE 表名称( \n    字段名 数据类型, \n    字段名 数据类型 UNIQUE [KEY], \n    字段名 数据类型 \n);\nCREATE TABLE 表名称( \n    字段名 数据类型, \n    字段名 数据类型, \n    字段名 数据类型, \n    [CONSTRAINT 约束名] UNIQUE [KEY](字段列表)  #多个字段之间用逗号隔开\n);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("（2）建表后指定唯一键约束")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#字段列表中如果是一个字段，表示该列的值唯一。如果是两个或更多个字段，那么复合唯一，即多个字段的组合是唯一的\n#方式1： \nALTER TABLE 表名称 \nADD [CONSTRAINT 约束名] UNIQUE [KEY](字段列表); #多个字段之间用逗号隔开\n#方式2： \nALTER TABLE 表名称 \nMODIFY 字段名 字段类型 UNIQUE [KEY];\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("blockquote",[a("p",[s._v("可以向声明为unique的字段上添加null值。而且可以多次添加null")])]),s._v(" "),a("h3",{attrs:{id:"_3-5-删除唯一约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-删除唯一约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("3.5")]),s._v(" "),a("strong",[s._v("删除唯一约束")])]),s._v(" "),a("ul",[a("li",[s._v("添加唯一性约束的列上也会自动创建唯一索引。")]),s._v(" "),a("li",[s._v("删除唯一约束只能通过删除唯一索引的方式删除。")]),s._v(" "),a("li",[s._v("删除时需要指定唯一索引名，唯一索引名就和唯一约束名一样。")]),s._v(" "),a("li",[s._v("如果创建唯一约束时未指定名称，如果是单列，就默认和列名相同；如果是组合列，那么默认和(字段列表)中排在第一个的列名相同。也可以自定义唯一性约束名。")])]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ALTER TABLE 表名称\nDROP INDEX 索引名;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("blockquote",[a("p",[s._v("注意：可以通过"),a("code",[s._v("show index from 表名称;")]),s._v("查看表的索引")])]),s._v(" "),a("h2",{attrs:{id:"_4-primary-key-约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-primary-key-约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4. PRIMARY KEY")]),s._v(" "),a("strong",[s._v("约束")])]),s._v(" "),a("h3",{attrs:{id:"_4-1-作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-作用"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.1")]),s._v(" "),a("strong",[s._v("作用")])]),s._v(" "),a("p",[s._v("用来唯一标识表中的一行记录")]),s._v(" "),a("h3",{attrs:{id:"_4-2-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-关键字"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.2")]),s._v(" "),a("strong",[s._v("关键字")])]),s._v(" "),a("p",[s._v("primary key")]),s._v(" "),a("h3",{attrs:{id:"_4-3-特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-特点"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.3")]),s._v(" "),a("strong",[s._v("特点")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("主键约束相当于"),a("strong",[s._v("唯一约束+非空约束的组合")]),s._v("，主键约束列不允许重复，也不允许出现空值")])]),s._v(" "),a("li",[a("p",[s._v("一个表最多只能有一个主键约束，建立主键约束可以在列级别创建，也可以在表级别上创建。")])]),s._v(" "),a("li",[a("p",[s._v("主键约束对应着表中的一列或者多列（复合主键）")])]),s._v(" "),a("li",[a("p",[s._v("如果是多列组合的复合主键约束，那么这些列"),a("strong",[s._v("都不允许")]),s._v("为空值，并且组合的值不允许重复。")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("MySQL的主键名总是PRIMARY")]),s._v("，就算自己命名了主键约束名也没用。")])]),s._v(" "),a("li",[a("p",[s._v("当创建主键约束时，系统默认会在所在的列或列组合上建立对应的"),a("strong",[s._v("主键索引")]),s._v("（能够根据主键查询的，就根据主键查询，效率更高）。如果删除主键约束了，主键约束对应的索引就自动删除了。")])]),s._v(" "),a("li",[a("p",[s._v("需要注意的一点是，不要修改主键字段的值。因为主键是数据记录的唯一标识，如果修改了主键的值，就有可能会破坏数据的完整性。")])])]),s._v(" "),a("h3",{attrs:{id:"_4-4-添加-复合-主键约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-添加-复合-主键约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.4")]),s._v(" "),a("strong",[s._v("添加（复合）主键约束")])]),s._v(" "),a("p",[s._v("（1）建表时指定主键约束")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("create table 表名称( \n    字段名 数据类型 primary key, #列级模式 \n    字段名 数据类型, \n    字段名 数据类型 \n);\ncreate table 表名称( \n    字段名 数据类型, \n    字段名 数据类型, \n    字段名 数据类型, \n    [constraint 约束名] primary key(字段列表) #表级模式，多个字段之间用逗号隔开\n);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 列级约束\nCREATE TABLE emp4( \n    id INT PRIMARY KEY AUTO_INCREMENT, # AUTO_INCREMENT 表示自增\n    NAME VARCHAR(20) \n);\n# 表级约束\nCREATE TABLE emp5( \n    id INT NOT NULL AUTO_INCREMENT, \n    NAME VARCHAR(20), pwd VARCHAR(15), \n    CONSTRAINT emp5_id_pk PRIMARY KEY(id) #没有必要起名字\n);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("（2）建表后增加主键约束")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ALTER TABLE 表名称 \nADD PRIMARY KEY(字段列表); #字段列表可以是一个字段，也可以是多个字段，如果是多个字段的话，是复合主键\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_4-5-删除主键约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-删除主键约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("4.5")]),s._v(" "),a("strong",[s._v("删除主键约束")])]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("alter table 表名称 \ndrop primary key;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("blockquote",[a("p",[s._v("说明：删除主键约束，不需要指定主键名，因为一个表只有一个主键，删除主键约束后，非空还存在。")]),s._v(" "),a("p",[s._v("在实际开发中，不会去删除表中的主键约束！")])]),s._v(" "),a("h2",{attrs:{id:"_5-自增列-auto-increment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-自增列-auto-increment"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.")]),s._v(" "),a("strong",[s._v("自增列：AUTO_INCREMENT")])]),s._v(" "),a("h3",{attrs:{id:"_5-1-作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-作用"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.1")]),s._v(" "),a("strong",[s._v("作用")])]),s._v(" "),a("p",[s._v("某个字段的值自增")]),s._v(" "),a("h3",{attrs:{id:"_5-2-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-关键字"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.2")]),s._v(" "),a("strong",[s._v("关键字")])]),s._v(" "),a("p",[s._v("auto_increment")]),s._v(" "),a("h3",{attrs:{id:"_5-3-特点和要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-特点和要求"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.3")]),s._v(" "),a("strong",[s._v("特点和要求")])]),s._v(" "),a("p",[s._v("（1）一个表最多只能有一个自增长列")]),s._v(" "),a("p",[s._v("（2）当需要产生唯一标识符或顺序值时，可设置自增长")]),s._v(" "),a("p",[s._v("（3）自增长列约束的列必须是键列（主键列，唯一键列）")]),s._v(" "),a("p",[s._v("（4）自增约束的列的数据类型必须是整数类型")]),s._v(" "),a("p",[s._v("（5）如果自增列指定了 0 和 null，会在当前最大值的基础上自增；如果自增列手动指定了具体值，直接赋值为具体值。")]),s._v(" "),a("h3",{attrs:{id:"_5-4-如何指定自增约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-如何指定自增约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.4")]),s._v(" "),a("strong",[s._v("如何指定自增约束")])]),s._v(" "),a("p",[a("strong",[s._v("（1）建表时")])]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("create table 表名称( \n    字段名 数据类型 primary key auto_increment, \n    字段名 数据类型 unique key not null, \n    字段名 数据类型 unique key, \n    字段名 数据类型 not null default 默认值\n);\ncreate table 表名称( \n    字段名 数据类型 default 默认值, \n    字段名 数据类型 unique key auto_increment, \n    字段名 数据类型 not null default 默认值, \n    primary key(字段名) \n);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[a("strong",[s._v("（2）建表后")])]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("alter table 表名称 modify 字段名 数据类型 auto_increment;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"_5-5-如何删除自增约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-如何删除自增约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.5")]),s._v(" "),a("strong",[s._v("如何删除自增约束")])]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#alter table 表名称 modify 字段名 数据类型 auto_increment;#给这个字段增加自增约束 \nalter table 表名称 modify 字段名 数据类型; #去掉auto_increment相当于删除\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"_5-6-mysql-8-0新特性-自增变量的持久化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-mysql-8-0新特性-自增变量的持久化"}},[s._v("#")]),s._v(" "),a("strong",[s._v("5.6 MySQL 8.0新特性—自增变量的持久化")])]),s._v(" "),a("p",[s._v("在MySQL 8.0之前，自增主键AUTO_INCREMENT的值如果大于max(primary key)+1，在MySQL重启后，会重置AUTO_INCREMENT=max(primary key)+1，这种现象在某些情况下会导致业务主键冲突或者其他难以发现的问题。")]),s._v(" "),a("p",[s._v("在MySQL 5.7系统中，对于自增主键的分配规则，是由InnoDB数据字典内部一个"),a("code",[s._v("计数器")]),s._v("来决定的，而该计数器只在"),a("code",[s._v("内存中维护")]),s._v("，并不会持久化到磁盘中。当数据库重启时，该计数器会被初始化。")]),s._v(" "),a("p",[s._v("MySQL 8.0将自增主键的计数器持久化到"),a("code",[s._v("重做日志")]),s._v("中。每次计数器发生改变，都会将其写入重做日志中。如果数据库重启，InnoDB会根据重做日志中的信息来初始化计数器的内存值。")]),s._v(" "),a("h2",{attrs:{id:"_6-foreign-key-约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-foreign-key-约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6. FOREIGN KEY")]),s._v(" "),a("strong",[s._v("约束")])]),s._v(" "),a("h3",{attrs:{id:"_6-1-作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-作用"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.1")]),s._v(" "),a("strong",[s._v("作用")])]),s._v(" "),a("p",[s._v("限定某个表的某个字段的引用完整性。")]),s._v(" "),a("h3",{attrs:{id:"_6-2-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2-关键字"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.2")]),s._v(" "),a("strong",[s._v("关键字")])]),s._v(" "),a("p",[s._v("FOREIGN KEY")]),s._v(" "),a("h3",{attrs:{id:"_6-3-主表和从表-父表和子表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-3-主表和从表-父表和子表"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.3")]),s._v(" "),a("strong",[s._v("主表和从表/父表和子表")])]),s._v(" "),a("p",[s._v("主表（父表）：被引用的表，被参考的表")]),s._v(" "),a("p",[s._v("从表（子表）：引用别人的表，参考别人的表")]),s._v(" "),a("h3",{attrs:{id:"_6-4-特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-4-特点"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.4")]),s._v(" "),a("strong",[s._v("特点")])]),s._v(" "),a("p",[s._v("（1）从表的外键列，必须引用/参考主表的主键或唯一约束的列")]),s._v(" "),a("p",[s._v("为什么？因为被依赖/被参考的值必须是唯一的")]),s._v(" "),a("p",[s._v("（2）在创建外键约束时，如果不给外键约束命名，"),a("strong",[s._v("默认名不是列名，而是自动产生一个外键名")]),s._v("（例如student_ibfk_1;），也可以指定外键约束名。")]),s._v(" "),a("p",[s._v("（3）创建(CREATE)表时就指定外键约束的话，先创建主表，再创建从表")]),s._v(" "),a("p",[s._v("（4）删表时，先删从表（或先删除外键约束），再删除主表")]),s._v(" "),a("p",[s._v("（5）当主表的记录被从表参照时，主表的记录将不允许删除，如果要删除数据，需要先删除从表中依赖该记录的数据，然后才可以删除主表的数据")]),s._v(" "),a("p",[s._v("（6）在“从表”中指定外键约束，并且一个表可以建立多个外键约束")]),s._v(" "),a("p",[s._v("（7）从表的外键列与主表被参照的列名字可以不相同，但是数据类型必须一样，逻辑意义一致。如果类型不一样，创建子表时，就会出现错误“ERROR 1005 (HY000): Can't create table'database.tablename'(errno: 150)”。")]),s._v(" "),a("p",[s._v("（8）"),a("strong",[s._v("当创建外键约束时，系统默认会在所在的列上建立对应的普通索引")]),s._v("。但是索引名是外键的约束名。（根据外键查询效率很高）")]),s._v(" "),a("p",[s._v("（9）删除外键约束后，必须"),a("code",[s._v("手动")]),s._v("删除对应的索引")]),s._v(" "),a("h3",{attrs:{id:"_6-5-添加外键约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-5-添加外键约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.5")]),s._v(" "),a("strong",[s._v("添加外键约束")])]),s._v(" "),a("p",[s._v("（1）建表时")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("create table 主表名称( \n    字段1 数据类型 primary key, \n    字段2 数据类型 \n);\ncreate table 从表名称( \n    字段1 数据类型 primary key, \n    字段2 数据类型, \n    [CONSTRAINT <外键约束名称>] FOREIGN KEY（从表的某个字段) references 主表名(被参考字段) \n);\n#(从表的某个字段)的数据类型必须与主表名(被参考字段)的数据类型一致，逻辑意义也一样\n#(从表的某个字段)的字段名可以与主表名(被参考字段)的字段名一样，也可以不一样\n-- FOREIGN KEY: 在表级指定子表中的列\n-- REFERENCES: 标示在父表中的列\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("（2）建表后")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ALTER TABLE 从表名 \nADD [CONSTRAINT 约束名] FOREIGN KEY (从表的字段) REFERENCES 主表名(被引用 字段) [on update xx][on delete xx];\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("总结：约束关系是针对双方的")]),s._v(" "),a("ul",[a("li",[s._v("添加了外键约束后，主表的修改和删除数据受约束")]),s._v(" "),a("li",[s._v("添加了外键约束后，从表的添加和修改数据受约束")]),s._v(" "),a("li",[s._v("在从表上建立外键，要求主表必须存在")]),s._v(" "),a("li",[s._v("删除主表时，要求从表先删除，或将从表中外键引用该主表的关系先删除")])]),s._v(" "),a("h3",{attrs:{id:"_6-6-约束等级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-6-约束等级"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.6")]),s._v(" "),a("strong",[s._v("约束等级")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Cascade方式")]),s._v("：在父表上update/delete记录时，同步update/delete掉子表的匹配记录")]),s._v(" "),a("li",[a("code",[s._v("Set null方式")]),s._v("：在父表上update/delete记录时，将子表上匹配记录的列设为null，但是要注意子表的外键列不能为not null")]),s._v(" "),a("li",[a("code",[s._v("No action方式")]),s._v("：如果子表中有匹配的记录，则不允许对父表对应候选键进行update/delete操作")]),s._v(" "),a("li",[a("code",[s._v("Restrict方式")]),s._v("：同no action， 都是立即检查外键约束")]),s._v(" "),a("li",[a("code",[s._v("Set default方式")]),s._v("（在可视化工具SQLyog中可能显示空白）：父表有变更时，子表将外键列设置成一个默认的值，但Innodb不能识别")])]),s._v(" "),a("p",[s._v("如果没有指定等级，就相当于Restrict方式。")]),s._v(" "),a("p",[s._v("对于外键约束，最好是采用:"),a("code",[s._v("ON UPDATE CASCADE ON DELETE RESTRICT")]),s._v("的方式。")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("create table emp( \n    eid int primary key, #员工编号 \n    ename varchar(5), #员工姓名 \n    deptid int, #员工所在的部门\n    foreign key (deptid) references dept(did) ON UPDATE CASCADE ON DELETE RESTRICT #把修改操作设置为级联修改等级，把删除操作设置为Restrict等级 \n);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"_6-7-删除外键约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-7-删除外键约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.7")]),s._v(" "),a("strong",[s._v("删除外键约束")])]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# (1)第一步先查看约束名和删除外键约束 \nSELECT * FROM information_schema.table_constraints WHERE table_name = '表名称';#查看某个表的约束名 \nALTER TABLE 从表名 DROP FOREIGN KEY 外键约束名; \n#（2）第二步查看索引名和删除索引。（注意，只能手动删除） \nSHOW INDEX FROM 表名称; #查看某个表的索引名 \nALTER TABLE 从表名 DROP INDEX 索引名;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"_6-8-开发场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-8-开发场景"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.8")]),s._v(" "),a("strong",[s._v("开发场景")])]),s._v(" "),a("p",[a("strong",[s._v("问题1：如果两个表之间有关系（一对一、一对多），比如：员工表和部门表（一对多），它们之间是否一定要建外键约束？")])]),s._v(" "),a("p",[s._v("答：不是的")]),s._v(" "),a("p",[a("strong",[s._v("问题2：建和不建外键约束有什么区别？")])]),s._v(" "),a("p",[s._v("答：建外键约束，你的操作（创建表、删除表、添加、修改、删除）会受到限制，从语法层面受到限制。例如：在员工表中不可能添加一个员工信息，它的部门的值在部门表中找不到。")]),s._v(" "),a("p",[s._v("不建外键约束，你的操作（创建表、删除表、添加、修改、删除）不受限制，要保证数据的"),a("code",[s._v("引用完整性")]),s._v("，只能依"),a("code",[s._v("靠程序员的自觉")]),s._v("，或者是"),a("code",[s._v("在Java程序中进行限定")]),s._v("。例如：在员工表中，可以添加一个员工的信息，它的部门指定为一个完全不存在的部门。")]),s._v(" "),a("p",[a("strong",[s._v("问题3：那么建和不建外键约束和查询有没有关系？")])]),s._v(" "),a("p",[s._v("答：没有")]),s._v(" "),a("blockquote",[a("p",[s._v("在 MySQL 里，外键约束是有成本的，需要消耗系统资源。对于大并发的 SQL 操作，有可能会不适合。比如大型网站的中央数据库，可能会"),a("code",[s._v("因为外键约束的系统开销而变得非常慢")]),s._v("。所以， MySQL 允许你不使用系统自带的外键约束，在"),a("code",[s._v("应用层面")]),s._v("完成检查数据一致性的逻辑。也就是说，即使你不用外键约束，也要想办法通过应用层面的附加逻辑，来实现外键约束的功能，确保数据的一致性。")])]),s._v(" "),a("h5",{attrs:{id:"_6-9-阿里开发规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-9-阿里开发规范"}},[s._v("#")]),s._v(" "),a("strong",[s._v("6.9")]),s._v(" "),a("strong",[s._v("阿里开发规范")])]),s._v(" "),a("p",[s._v("【"),a("code",[s._v("强制")]),s._v("】不得使用外键与级联，一切外键概念必须在应用层解决。")]),s._v(" "),a("p",[s._v("说明：（概念解释）学生表中的 student_id 是主键，那么成绩表中的 student_id 则为外键。如果更新学生表中的 student_id，同时触发成绩表中的 student_id 更新，即为级联更新。外键与级联更新适用于"),a("code",[s._v("单机低并发")]),s._v("，不适合"),a("code",[s._v("分布式")]),s._v("、"),a("code",[s._v("高并发集群")]),s._v("；级联更新是强阻塞，存在数据库"),a("code",[s._v("更新风暴")]),s._v("的风险；外键影响数据库的"),a("code",[s._v("插入速度")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"_7-check-约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-check-约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7. CHECK")]),s._v(" "),a("strong",[s._v("约束")])]),s._v(" "),a("h3",{attrs:{id:"_7-1-作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-作用"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7.1")]),s._v(" "),a("strong",[s._v("作用")])]),s._v(" "),a("p",[s._v("检查某个字段的值是否符号xx要求，一般指的是值的范围")]),s._v(" "),a("h3",{attrs:{id:"_7-2-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-关键字"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7.2 关键字")])]),s._v(" "),a("p",[s._v("CHECK")]),s._v(" "),a("h3",{attrs:{id:"_7-3-说明-mysql-5-7-不支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-说明-mysql-5-7-不支持"}},[s._v("#")]),s._v(" "),a("strong",[s._v("7.3 说明：MySQL 5.7")]),s._v(" "),a("strong",[s._v("不支持")])]),s._v(" "),a("p",[s._v("MySQL5.7 可以使用check约束，但check约束对数据验证没有任何作用。添加数据时，没有任何错误或警告")]),s._v(" "),a("p",[s._v("但是"),a("strong",[s._v("MySQL 8.0中可以使用check约束了")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("CREATE TABLE temp( \n    id INT AUTO_INCREMENT, \n    NAME VARCHAR(20), \n    age INT CHECK(age > 20), \n    gender char CHECK ('男' OR '女'),\n    PRIMARY KEY(id) \n);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"_8-default约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-default约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8. DEFAULT约束")])]),s._v(" "),a("h3",{attrs:{id:"_8-1-作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-作用"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8.1")]),s._v(" "),a("strong",[s._v("作用")])]),s._v(" "),a("p",[s._v("给某个字段/某列指定默认值，一旦设置默认值，在插入数据时，如果此字段没有显式赋值，则赋值为默认值。")]),s._v(" "),a("h3",{attrs:{id:"_8-2-关键字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-关键字"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8.2")]),s._v(" "),a("strong",[s._v("关键字")])]),s._v(" "),a("p",[s._v("DEFAULT")]),s._v(" "),a("h3",{attrs:{id:"_8-3-如何给字段加默认值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-如何给字段加默认值"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8.3")]),s._v(" "),a("strong",[s._v("如何给字段加默认值")])]),s._v(" "),a("p",[s._v("（1）建表时")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("create table 表名称(\n    字段名 数据类型 default 默认值 , \n    字段名 数据类型 not null default 默认值, \n    字段名 数据类型 not null default 默认值, \n    primary key(字段名),\n    unique key(字段名) \n);\n# 说明：默认值约束一般不在唯一键和主键列上加\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("（2）建表后")]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("alter table 表名称 \nmodify 字段名 数据类型 default 默认值; \n#如果这个字段原来有非空约束，你还保留非空约束，那么在加默认值约束时，还得保留非空约束，否则非空约束就被删除了 \n#同理，在给某个字段加非空约束也一样，如果这个字段原来有默认值约束，你想保留，也要在modify语句中保留默认值约束，否则就删除了 \nalter table 表名称 modify 字段名 数据类型 default 默认值 not null;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"_8-4-如何删除默认值约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-如何删除默认值约束"}},[s._v("#")]),s._v(" "),a("strong",[s._v("8.4")]),s._v(" "),a("strong",[s._v("如何删除默认值约束")])]),s._v(" "),a("div",{staticClass:"language-mysql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("alter table 表名称 modify 字段名 数据类型 ;#删除默认值约束，也不保留非空约束 \nalter table 表名称 modify 字段名 数据类型 not null; #删除默认值约束，保留非空约束\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"_9-面试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-面试"}},[s._v("#")]),s._v(" "),a("strong",[s._v("9.")]),s._v(" "),a("strong",[s._v("面试")])]),s._v(" "),a("p",[a("strong",[s._v("面试1、为什么建表时，加 not null default '' 或 default 0")])]),s._v(" "),a("p",[s._v("答：不想让表中出现null值。")]),s._v(" "),a("p",[a("strong",[s._v("面试2、为什么不想要")]),s._v(" "),a("strong",[s._v("null")]),s._v(" "),a("strong",[s._v("的值")])]),s._v(" "),a("p",[s._v("答:（1）不好比较。null是一种特殊值，比较时只能用专门的is null 和 is not null来比较。碰到运算符，通常返回null。")]),s._v(" "),a("p",[s._v("（2）效率不高。影响提高索引效果。因此，我们往往在建表时 not null default '' 或 default 0")]),s._v(" "),a("p",[a("strong",[s._v("面试3、带AUTO_INCREMENT约束的字段值是从1开始的吗？")])]),s._v(" "),a("p",[s._v("在MySQL中，默认AUTO_INCREMENT的初始值是1，每新增一条记录，字段值自动加1。设置自增属性（AUTO_INCREMENT）的时候，还可以指定第一条插入记录的自增字段的值，这样新插入的记录的自增字段值从初始值开始递增，如在表中插入第一条记录，同时指定id值为5，则以后插入的记录的id值就会从6开始往上增加。添加主键约束时，往往需要设置字段自动增加属性。")]),s._v(" "),a("p",[a("strong",[s._v("面试4、并不是每个表都可以任意选择存储引擎？")])]),s._v(" "),a("p",[s._v("外键约束（FOREIGN KEY）不能跨引擎使用。")]),s._v(" "),a("p",[s._v("MySQL支持多种存储引擎，每一个表都可以指定一个不同的存储引擎，需要注意的是：外键约束是用来保证数据的参照完整性的，如果表之间需要关联外键，却指定了不同的存储引擎，那么这些表之间是不能创建外键约束的。所以说，存储引擎的选择也不完全是随意的。")])])}),[],!1,null,null,null);t.default=_.exports}}]);